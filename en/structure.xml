<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="QCubed API">
  <file path="configuration/configuration.inc.php" hash="7de45654ae2ece45017c320b88be5cb4" package="Default">
    <constant namespace="global" line="5" package="Default">
      <name>SERVER_INSTANCE</name>
      <full_name>\SERVER_INSTANCE</full_name>
      <value>'dev'</value>
    </constant>
    <constant namespace="global" line="23" package="Default">
      <name>ALLOW_REMOTE_ADMIN</name>
      <full_name>\ALLOW_REMOTE_ADMIN</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="61" package="Default">
      <name>__DOCROOT__</name>
      <full_name>\__DOCROOT__</full_name>
      <value>'/var/www'</value>
    </constant>
    <constant namespace="global" line="62" package="Default">
      <name>__VIRTUAL_DIRECTORY__</name>
      <full_name>\__VIRTUAL_DIRECTORY__</full_name>
      <value>''</value>
    </constant>
    <constant namespace="global" line="63" package="Default">
      <name>__SUBDIRECTORY__</name>
      <full_name>\__SUBDIRECTORY__</full_name>
      <value>'/qcubed.git'</value>
    </constant>
    <constant namespace="global" line="68" package="Default">
      <name>__INCLUDES__</name>
      <full_name>\__INCLUDES__</full_name>
      <value>__DOCROOT__ . __SUBDIRECTORY__ . '/includes'</value>
    </constant>
    <constant namespace="global" line="69" package="Default">
      <name>__CONFIGURATION__</name>
      <full_name>\__CONFIGURATION__</full_name>
      <value>__INCLUDES__ . '/configuration'</value>
    </constant>
    <constant namespace="global" line="71" package="Default">
      <name>__EXTERNAL_LIBRARIES__</name>
      <full_name>\__EXTERNAL_LIBRARIES__</full_name>
      <value>__INCLUDES__ . '/external_libraries'</value>
    </constant>
    <constant namespace="global" line="73" package="Default">
      <name>__APP_INCLUDES__</name>
      <full_name>\__APP_INCLUDES__</full_name>
      <value>__INCLUDES__ . '/app_includes'</value>
    </constant>
    <constant namespace="global" line="79" package="Default">
      <name>__URL_REWRITE__</name>
      <full_name>\__URL_REWRITE__</full_name>
      <value>'none'</value>
    </constant>
    <constant namespace="global" line="96" package="Default">
      <name>__QCUBED__</name>
      <full_name>\__QCUBED__</full_name>
      <value>__INCLUDES__ . '/qcubed'</value>
    </constant>
    <constant namespace="global" line="97" package="Default">
      <name>__PLUGINS__</name>
      <full_name>\__PLUGINS__</full_name>
      <value>__QCUBED__ . '/plugins'</value>
    </constant>
    <constant namespace="global" line="99" package="Default">
      <name>__CACHE__</name>
      <full_name>\__CACHE__</full_name>
      <value>__INCLUDES__ . '/tmp/cache'</value>
    </constant>
    <constant namespace="global" line="102" package="Default">
      <name>__QCUBED_CORE__</name>
      <full_name>\__QCUBED_CORE__</full_name>
      <value>__INCLUDES__ . '/qcubed/_core'</value>
    </constant>
    <constant namespace="global" line="105" package="Default">
      <name>__MODEL__</name>
      <full_name>\__MODEL__</full_name>
      <value>__INCLUDES__ . '/model'</value>
    </constant>
    <constant namespace="global" line="106" package="Default">
      <name>__MODEL_GEN__</name>
      <full_name>\__MODEL_GEN__</full_name>
      <value>__MODEL__ . '/generated'</value>
    </constant>
    <constant namespace="global" line="107" package="Default">
      <name>__META_CONTROLS__</name>
      <full_name>\__META_CONTROLS__</full_name>
      <value>__INCLUDES__ . '/meta_controls'</value>
    </constant>
    <constant namespace="global" line="108" package="Default">
      <name>__META_CONTROLS_GEN__</name>
      <full_name>\__META_CONTROLS_GEN__</full_name>
      <value>__META_CONTROLS__ . '/generated'</value>
    </constant>
    <constant namespace="global" line="126" package="Default">
      <name>__FORM_DRAFTS__</name>
      <full_name>\__FORM_DRAFTS__</full_name>
      <value>__SUBDIRECTORY__ . '/drafts'</value>
    </constant>
    <constant namespace="global" line="127" package="Default">
      <name>__PANEL_DRAFTS__</name>
      <full_name>\__PANEL_DRAFTS__</full_name>
      <value>__SUBDIRECTORY__ . '/drafts/panels'</value>
    </constant>
    <constant namespace="global" line="128" package="Default">
      <name>__FORMBASE_CLASSES__</name>
      <full_name>\__FORMBASE_CLASSES__</full_name>
      <value>__INCLUDES__ . '/formbase_classes_generated'</value>
    </constant>
    <constant namespace="global" line="129" package="Default">
      <name>__FORM_DRAFTS_FORM_LIST_ITEMS_PER_PAGE__</name>
      <full_name>\__FORM_DRAFTS_FORM_LIST_ITEMS_PER_PAGE__</full_name>
      <value>20</value>
    </constant>
    <constant namespace="global" line="130" package="Default">
      <name>__FORM_DRAFTS_PANEL_LIST_ITEMS_PER_PAGE__</name>
      <full_name>\__FORM_DRAFTS_PANEL_LIST_ITEMS_PER_PAGE__</full_name>
      <value>8</value>
    </constant>
    <constant namespace="global" line="134" package="Default">
      <name>__JS_ASSETS__</name>
      <full_name>\__JS_ASSETS__</full_name>
      <value>__SUBDIRECTORY__ . '/assets/_core/js'</value>
    </constant>
    <constant namespace="global" line="135" package="Default">
      <name>__CSS_ASSETS__</name>
      <full_name>\__CSS_ASSETS__</full_name>
      <value>__SUBDIRECTORY__ . '/assets/_core/css'</value>
    </constant>
    <constant namespace="global" line="136" package="Default">
      <name>__IMAGE_ASSETS__</name>
      <full_name>\__IMAGE_ASSETS__</full_name>
      <value>__SUBDIRECTORY__ . '/assets/_core/images'</value>
    </constant>
    <constant namespace="global" line="137" package="Default">
      <name>__PHP_ASSETS__</name>
      <full_name>\__PHP_ASSETS__</full_name>
      <value>__SUBDIRECTORY__ . '/assets/_core/php'</value>
    </constant>
    <constant namespace="global" line="138" package="Default">
      <name>__PLUGIN_ASSETS__</name>
      <full_name>\__PLUGIN_ASSETS__</full_name>
      <value>__SUBDIRECTORY__ . '/assets/plugins'</value>
    </constant>
    <constant namespace="global" line="141" package="Default">
      <name>__APP_JS_ASSETS__</name>
      <full_name>\__APP_JS_ASSETS__</full_name>
      <value>__SUBDIRECTORY__ . '/assets/js'</value>
    </constant>
    <constant namespace="global" line="142" package="Default">
      <name>__APP_CSS_ASSETS__</name>
      <full_name>\__APP_CSS_ASSETS__</full_name>
      <value>__SUBDIRECTORY__ . '/assets/css'</value>
    </constant>
    <constant namespace="global" line="143" package="Default">
      <name>__APP_IMAGE_ASSETS__</name>
      <full_name>\__APP_IMAGE_ASSETS__</full_name>
      <value>__SUBDIRECTORY__ . '/assets/images'</value>
    </constant>
    <constant namespace="global" line="144" package="Default">
      <name>__APP_PHP_ASSETS__</name>
      <full_name>\__APP_PHP_ASSETS__</full_name>
      <value>__SUBDIRECTORY__ . '/assets/php'</value>
    </constant>
    <constant namespace="global" line="154" package="Default">
      <name>__JQUERY_BASE__</name>
      <full_name>\__JQUERY_BASE__</full_name>
      <value>'jquery/jquery.min.js'</value>
    </constant>
    <constant namespace="global" line="155" package="Default">
      <name>__JQUERY_EFFECTS__</name>
      <full_name>\__JQUERY_EFFECTS__</full_name>
      <value>'jquery/jquery-ui.custom.min.js'</value>
    </constant>
    <constant namespace="global" line="157" package="Default">
      <name>__JQUERY_CSS__</name>
      <full_name>\__JQUERY_CSS__</full_name>
      <value>'jquery-ui-themes/ui-qcubed/jquery-ui.custom.css'</value>
    </constant>
    <constant namespace="global" line="160" package="Default">
      <name>__DEVTOOLS__</name>
      <full_name>\__DEVTOOLS__</full_name>
      <value>__PHP_ASSETS__ . '/_devtools'</value>
    </constant>
    <constant namespace="global" line="163" package="Default">
      <name>__EXAMPLES__</name>
      <full_name>\__EXAMPLES__</full_name>
      <value>__PHP_ASSETS__ . '/examples'</value>
    </constant>
    <constant namespace="global" line="166" package="Default">
      <name>__QI18N_PO_PATH__</name>
      <full_name>\__QI18N_PO_PATH__</full_name>
      <value>__QCUBED__ . '/i18n'</value>
    </constant>
    <constant namespace="global" line="197" package="Default">
      <name>DB_CONNECTION_1</name>
      <full_name>\DB_CONNECTION_1</full_name>
      <value>serialize(array('adapter' =&gt; 'PostgreSql', 'server' =&gt; 'localhost', 'port' =&gt; null, 'database' =&gt; 'qc_examples', 'username' =&gt; 'phppgadmin', 'password' =&gt; '123456', 'caching' =&gt; false, 'profiling' =&gt; false))</value>
    </constant>
    <constant namespace="global" line="217" package="Default">
      <name>MAX_DB_CONNECTION_INDEX</name>
      <full_name>\MAX_DB_CONNECTION_INDEX</full_name>
      <value>9</value>
    </constant>
    <constant namespace="global" line="240" package="Default">
      <name>CACHE_PROVIDER_CLASS</name>
      <full_name>\CACHE_PROVIDER_CLASS</full_name>
      <value>null</value>
    </constant>
    <constant namespace="global" line="249" package="Default">
      <name>CACHE_PROVIDER_OPTIONS</name>
      <full_name>\CACHE_PROVIDER_OPTIONS</full_name>
      <value>serialize(array(array('host' =&gt; '127.0.0.1', 'port' =&gt; 11211)))</value>
    </constant>
    <constant namespace="global" line="299" package="Default">
      <name>__FORM_STATE_HANDLER__</name>
      <full_name>\__FORM_STATE_HANDLER__</full_name>
      <value>'QSessionFormStateHandler'</value>
    </constant>
    <constant namespace="global" line="302" package="Default">
      <name>__FILE_FORM_STATE_HANDLER_PATH__</name>
      <full_name>\__FILE_FORM_STATE_HANDLER_PATH__</full_name>
      <value>__INCLUDES__ . '/tmp'</value>
    </constant>
    <constant namespace="global" line="305" package="Default">
      <name>__DB_BACKED_FORM_STATE_HANDLER_DB_INDEX__</name>
      <full_name>\__DB_BACKED_FORM_STATE_HANDLER_DB_INDEX__</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="307" package="Default">
      <name>__DB_BACKED_FORM_STATE_HANDLER_TABLE_NAME__</name>
      <full_name>\__DB_BACKED_FORM_STATE_HANDLER_TABLE_NAME__</full_name>
      <value>'qc_formstate'</value>
    </constant>
    <constant namespace="global" line="343" package="Default">
      <name>DB_BACKED_SESSION_HANDLER_DB_INDEX</name>
      <full_name>\DB_BACKED_SESSION_HANDLER_DB_INDEX</full_name>
      <value>0</value>
    </constant>
    <constant namespace="global" line="346" package="Default">
      <name>DB_BACKED_SESSION_HANDLER_TABLE_NAME</name>
      <full_name>\DB_BACKED_SESSION_HANDLER_TABLE_NAME</full_name>
      <value>"qc_session"</value>
    </constant>
    <constant namespace="global" line="349" package="Default">
      <name>ERROR_PAGE_PATH</name>
      <full_name>\ERROR_PAGE_PATH</full_name>
      <value>__PHP_ASSETS__ . '/error_page.php'</value>
    </constant>
    <constant namespace="global" line="352" package="Default">
      <name>ERROR_LOG_PATH</name>
      <full_name>\ERROR_LOG_PATH</full_name>
      <value>__INCLUDES__ . '/error_log'</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file configuration/configuration.inc.php</error>
    </parse_markers>
  </file>
  <file path="configuration/prepend.inc.php" hash="ff66c5fca9a65d531320bfaaf3f4e617" package="Default">
    <include line="17" type="Require" package="Default">
      <name/>
    </include>
    <include line="35" type="Require" package="Default">
      <name/>
    </include>
    <include line="36" type="Require" package="Default">
      <name/>
    </include>
    <include line="147" type="Require" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="4" package="Default">
      <name>__PREPEND_INCLUDED__</name>
      <full_name>\__PREPEND_INCLUDED__</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="21" package="Default">
      <name>__DOCROOT__</name>
      <full_name>\__DOCROOT__</full_name>
      <value>dirname(__FILE__) . '/../..'</value>
    </constant>
    <constant namespace="global" line="22" package="Default">
      <name>__INCLUDES__</name>
      <full_name>\__INCLUDES__</full_name>
      <value>dirname(__FILE__) . '/..'</value>
    </constant>
    <constant namespace="global" line="23" package="Default">
      <name>__QCUBED__</name>
      <full_name>\__QCUBED__</full_name>
      <value>__INCLUDES__ . '/qcubed'</value>
    </constant>
    <constant namespace="global" line="24" package="Default">
      <name>__PLUGINS__</name>
      <full_name>\__PLUGINS__</full_name>
      <value>__QCUBED__ . '/plugins'</value>
    </constant>
    <constant namespace="global" line="25" package="Default">
      <name>__QCUBED_CORE__</name>
      <full_name>\__QCUBED_CORE__</full_name>
      <value>__INCLUDES__ . '/qcubed/_core'</value>
    </constant>
    <constant namespace="global" line="26" package="Default">
      <name>__APP_INCLUDES__</name>
      <full_name>\__APP_INCLUDES__</full_name>
      <value>__INCLUDES__ . '/app_includes'</value>
    </constant>
    <constant namespace="global" line="27" package="Default">
      <name>__MODEL__</name>
      <full_name>\__MODEL__</full_name>
      <value>__INCLUDES__ . '/model'</value>
    </constant>
    <constant namespace="global" line="28" package="Default">
      <name>__MODEL_GEN__</name>
      <full_name>\__MODEL_GEN__</full_name>
      <value>__MODEL__ . '/generated'</value>
    </constant>
    <class final="false" abstract="true" namespace="global" line="51" package="Default">
      <extends>\QApplicationBase</extends>
      <name>QApplication</name>
      <full_name>\QApplication</full_name>
      <docblock line="41">
        <description>The Application class is an abstract class that statically provides
information and global utilities for the entire web application.</description>
        <long-description>&lt;p&gt;Custom constants for this webapp, as well as global variables and global
methods should be declared in this abstract class (declared statically).&lt;/p&gt;

&lt;p&gt;This Application class should extend from the ApplicationBase class in
the framework.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="58" package="Default">
        <name>Autoload</name>
        <full_name>Autoload</full_name>
        <docblock line="52">
          <description>This is called by the PHP5 Autoloader.</description>
          <long-description>&lt;p&gt;This method overrides the
one in ApplicationBase.&lt;/p&gt;</long-description>
          <tag line="52" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$strClassName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="61">Run any custom autoloading functionality (if any) here...</todo>
      <todo line="73">Define any other custom global WebApplication functions (if any) here...</todo>
      <todo line="82">Define any custom global functions (if any) here...</todo>
      <todo line="88">Include any other include files (if any) here...</todo>
      <todo line="130">options to do this are left to the developer</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file configuration/prepend.inc.php</error>
      <error line="52" code="50015">Argument $strClassName is missing from the Docblock of Autoload()</error>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QMenu.class.php" hash="ff0e388baf079328f22086d3b4ba4c4d" package="Default">
    <docblock line="2">
      <description>This file contains the QMenu Class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="9" package="Default">
      <extends>\QMenuBase</extends>
      <name>QMenu</name>
      <full_name>\QMenu</full_name>
      <docblock line="5">
        <description>Class QMenu derived from QMenuBase.</description>
        <long-description>&lt;p&gt;It implements a JQuery UI Menu&lt;/p&gt;</long-description>
      </docblock>
    </class>
  </file>
  <file path="qcubed/controls/QForm.class.php" hash="2301266037128189cc9e34b34739d12c" package="Controls">
    <docblock line="2">
      <description>QForm is defined in this file</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="23" package="Controls">
      <extends>\QFormBase</extends>
      <name>QForm</name>
      <full_name>\QForm</full_name>
      <docblock line="9">
        <description>QForm is one of the most important parts of QCubed - it is what ultimately creates the web page</description>
        <long-description>&lt;p&gt;QForm is based on QFormBase class and is supposed to be used against QForm. The reason for such
recommendation is - QFormBase is a lengthy, confusing and &lt;b&gt;very&lt;/b&gt; important file. If you want
to modify any behavior or QFormBase, please override the corresponding method here. If you want to
add a new feature, add it as a method in this class.&lt;/p&gt;</long-description>
        <tag line="9" name="package" description="Controls"/>
        <tag line="9" name="author" description="Qcubed"/>
        <tag line="9" name="copyright" description=""/>
        <tag line="9" name="version" description="2011"/>
        <tag line="9" name="access" description="public"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="36" namespace="global" package="Default">
        <name>$EncryptionKey</name>
        <default>null</default>
        <docblock line="28">
          <description>If you wish to encrypt the resulting formstate data to be put on the form (via
QCryptography), please specify a key to use.</description>
          <long-description>&lt;p&gt;The default cipher and encrypt mode
on QCryptography will be used, and because the resulting encrypted data will be
sent via HTTP POST, it will be Base64 encoded.&lt;/p&gt;</long-description>
          <tag line="28" name="var" description="EncryptionKey the key to use, or NULL if no encryption is required" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="48" namespace="global" package="Default">
        <name>$FormStateHandler</name>
        <default>__FORM_STATE_HANDLER__</default>
        <docblock line="38">
          <description>The QFormStateHandler to use to handle the actual serialized form.</description>
          <long-description>&lt;p&gt;Please refer configuration.inc.php file (in includes/configuration directory) to learn more
about what &lt;strong&gt;FORM_STATE_HANDLER&lt;/strong&gt; does. Though you can change it here,
try to change the &lt;strong&gt;FORM_STATE_HANDLER&lt;/strong&gt; in the configuration file alone.&lt;/p&gt;

&lt;p&gt;It overrides the default value in the QFormBase Class file&lt;/p&gt;</long-description>
          <tag line="38" name="var" description="FormStateHandler the classname of the FormState handler to use" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$strIgnoreJavaScriptFileArray</name>
        <default>array()</default>
        <docblock line="51">
          <description>These are the list of core QForm JavaScript files, or JavaScript files needed by
a QControl, which QForm should IGNORE trying to load during a RenderBegin() or RenderAjax() call.</description>
          <long-description>&lt;p&gt;It is used in the ProcessJavaScriptList function in the QFormBase class.&lt;/p&gt;</long-description>
          <tag line="51" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$strIgnoreStyleSheetFileArray</name>
        <default>array()</default>
        <docblock line="63">
          <description>This should be very rarely used.</description>
          <long-description>&lt;p&gt;This mechanism acts similarly to the strIgnoreJavascriptFileArray, except it applies to StyleSheets.
However, any QControl that specifies a StyleSheet file to include is MEANT to have that property
be modified / customized.&lt;/p&gt;

&lt;p&gt;Therefore, there should be little to no need for this attribute.  However, it is here anyway, just in case.
Also note that QFormBase does not implement its feature. It is there if you (a developer building
your application using QCubed) want to use it.&lt;/p&gt;</long-description>
          <tag line="63" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <markers>
      <todo line="50">Improve explanation here.</todo>
    </markers>
  </file>
  <file path="qcubed/controls/QButton.class.php" hash="106bf5606370fd9f9b05352870ed4fd8" package="Controls">
    <docblock line="2">
      <description>QButton Class is defined here.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="Controls">
      <extends>\QButtonBase</extends>
      <name>QButton</name>
      <full_name>\QButton</full_name>
      <docblock line="9">
        <description>QButton class - You may modify it to contain your own modifications to the
QButton throughout the framework.</description>
        <long-description/>
        <tag line="9" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default>'button'</default>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="Default CSS class applied to this control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
    </class>
  </file>
  <file path="qcubed/controls/QSlider.class.php" hash="f788f9955473def1760787c626e4c4c4" package="Controls">
    <docblock line="2">
      <description>QSlider</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="author" description=""/>
      <tag line="2" name="copyright" description="2011"/>
      <tag line="2" name="version" description="$Id$"/>
      <tag line="2" name="access" description="public"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="22" package="Controls">
      <extends>\QSliderBase</extends>
      <name>QSlider</name>
      <full_name>\QSlider</full_name>
      <docblock line="14">
        <description/>
        <long-description/>
        <tag line="14" name="package" description="Controls"/>
        <tag line="14" name="author" description="Qcubed"/>
        <tag line="14" name="copyright" description=""/>
        <tag line="14" name="version" description="2011"/>
        <tag line="14" name="access" description="public"/>
      </docblock>
    </class>
    <parse_markers>
      <critical line="14" code="50005">No short description for class \QSlider</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QTextBox.class.php" hash="bf3afe0f724f6614500adb8e23f9413e" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Controls">
      <extends>\QTextBoxBase</extends>
      <name>QTextBox</name>
      <full_name>\QTextBox</full_name>
      <docblock line="2">
        <description/>
        <long-description/>
        <tag line="2" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="12" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default>'textbox'</default>
        <docblock line="11">
          <description/>
          <long-description/>
          <tag line="11" name="var" description="Default CSS class for the textbox" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/controls/QTextBox.class.php</error>
      <critical line="2" code="50005">No short description for class \QTextBox</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QDatepickerBox.class.php" hash="9449204ef9b5db74c69a51f390ddbd76" package="Controls">
    <docblock line="2">
      <description>QDatepickerBox</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="28" package="Controls">
      <extends>\QDatepickerBoxBase</extends>
      <name>QDatepickerBox</name>
      <full_name>\QDatepickerBox</full_name>
      <docblock line="11">
        <description>Creates the jQuery Datepicker control (with a textbox)</description>
        <long-description>&lt;p&gt;It extends the QDatepickerBoxBase class.
When writing your code, use this class instead of QDatepickerBoxBase.
This class is intended to be modified by the developer to add functions and alter the already present functions.
Put your customizations to the standard behavior of QDatepickerBoxBase class in this class.&lt;/p&gt;

&lt;p&gt;The difference between QDatepicker class and this class is that QDatepicker will create only the jQuery
control to select the date. This class will create a textbox which when clicked presents the datepicker
and allows you to get the date selected in the datepicker as a string in the textbox.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Controls"/>
        <tag line="11" name="author" description="Qcubed"/>
        <tag line="11" name="copyright" description=""/>
        <tag line="11" name="version" description="2011"/>
        <tag line="11" name="access" description="public"/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/controls/QJqButton.class.php" hash="f9257519265a6c072f12628d811022e9" package="Controls">
    <docblock line="2">
      <description>QJqButton</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="author" description=""/>
      <tag line="2" name="copyright" description="2011"/>
      <tag line="2" name="version" description="$Id$"/>
      <tag line="2" name="access" description="public"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Controls">
      <extends>\QJqButtonBase</extends>
      <name>QJqButton</name>
      <full_name>\QJqButton</full_name>
      <docblock line="14">
        <description/>
        <long-description/>
        <tag line="14" name="package" description="Controls"/>
        <tag line="14" name="author" description="Qcubed"/>
        <tag line="14" name="copyright" description=""/>
        <tag line="14" name="version" description="2011"/>
        <tag line="14" name="access" description="public"/>
      </docblock>
    </class>
    <parse_markers>
      <critical line="14" code="50005">No short description for class \QJqButton</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QPaginator.class.php" hash="7f12a9bfd1d4197e3942ba97f9d627fb" package="Controls">
    <docblock line="2">
      <description>Contains the QPaginator Class - the paginator control for QDataGrid and QDataRepeater controls</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends>\QPaginatorBase</extends>
      <name>QPaginator</name>
      <full_name>\QPaginator</full_name>
      <docblock line="8">
        <description>Class QPaginator - The paginator control which can be attached to a QDataRepeater or QDataGrid
This class will take care of the number of pages, current page, next/previous links and so on
automatically.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$intIndexCount</name>
        <default>10</default>
      </property>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$strLabelForPrevious</name>
        <default/>
        <docblock line="17">
          <description/>
          <long-description/>
          <tag line="17" name="var" description="Label for the 'Previous' link" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Default">
        <name>$strLabelForNext</name>
        <default/>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="Label for the 'Next' link" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default>'paginator'</default>
        <docblock line="22">
          <description/>
          <long-description/>
          <tag line="22" name="var" description="Default CSS class for the Paginator" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="28">
          <description>Constructor</description>
          <long-description/>
          <tag line="28" name="param" description="" type="\QControl|\QForm" variable="$objParentObject">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
          </tag>
          <tag line="28" name="param" description="" type="null|string" variable="$strControlId">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="33">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Default">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
        <docblock line="40">
          <description>Returns the HTML string for rendering the control</description>
          <long-description/>
          <tag line="40" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="218" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="218">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="242" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="242">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="242">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="15" code="50018">No DocBlock was found for property $intIndexCount</error>
      <error line="218" code="50010">No DocBlock was found for method __get()</error>
      <error line="242" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QSpinner.class.php" hash="9579771b7992c58f7695ea4bb994fd62" package="Default">
    <docblock line="2">
      <description>This file contains the QSpinner class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="8" package="Default">
      <extends>\QSpinnerBase</extends>
      <name>QSpinner</name>
      <full_name>\QSpinner</full_name>
      <docblock line="5">
        <description>Class QSpinner</description>
        <long-description/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/controls/QProgressbar.class.php" hash="42acb5ed3c6b4224d2925dcca132c7f7" package="Controls">
    <docblock line="2">
      <description>QProgressbar</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="author" description=""/>
      <tag line="2" name="copyright" description="2011"/>
      <tag line="2" name="version" description="$Id$"/>
      <tag line="2" name="access" description="public"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="22" package="Controls">
      <extends>\QProgressbarBase</extends>
      <name>QProgressbar</name>
      <full_name>\QProgressbar</full_name>
      <docblock line="14">
        <description/>
        <long-description/>
        <tag line="14" name="package" description="Controls"/>
        <tag line="14" name="author" description="Qcubed"/>
        <tag line="14" name="copyright" description=""/>
        <tag line="14" name="version" description="2011"/>
        <tag line="14" name="access" description="public"/>
      </docblock>
    </class>
    <parse_markers>
      <critical line="14" code="50005">No short description for class \QProgressbar</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QResizable.class.php" hash="8b131a30fbb8f2ba825c8a3927ddd064" package="Controls">
    <docblock line="2">
      <description>QResizable</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="author" description=""/>
      <tag line="2" name="copyright" description="2011"/>
      <tag line="2" name="version" description="$Id$"/>
      <tag line="2" name="access" description="public"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="22" package="Controls">
      <extends>\QResizableBase</extends>
      <name>QResizable</name>
      <full_name>\QResizable</full_name>
      <docblock line="14">
        <description/>
        <long-description/>
        <tag line="14" name="package" description="Controls"/>
        <tag line="14" name="author" description="Qcubed"/>
        <tag line="14" name="copyright" description=""/>
        <tag line="14" name="version" description="2011"/>
        <tag line="14" name="access" description="public"/>
      </docblock>
    </class>
    <parse_markers>
      <critical line="14" code="50005">No short description for class \QResizable</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QListBox.class.php" hash="4dbcd6cd4a3ec15fb224bd127303768c" package="Controls">
    <docblock line="2">
      <description>QListBox.class.php contains the QListBox</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="Controls">
      <extends>\QListBoxBase</extends>
      <name>QListBox</name>
      <full_name>\QListBox</full_name>
      <docblock line="6">
        <description>The QListBox class is based upon QListBoxBase.</description>
        <long-description>&lt;p&gt;The purpose of this class is entirely to provide a place for you to make modifications of the QListBox control.
All updates in QCubed releases will make changes to the QListBoxBase class.  By making your modifications here
instead of in the base class, you can ensure that your changes are not affected by core improvements.&lt;/p&gt;</long-description>
        <tag line="6" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="22" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default>'listbox'</default>
        <docblock line="21">
          <description/>
          <long-description/>
          <tag line="21" name="var" description="Default CSS class for the listbox" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="31" package="Controls">
        <name>GetResetButtonHtml</name>
        <full_name>GetResetButtonHtml</full_name>
        <docblock line="27">
          <description>Creates the reset button html for use with multiple select boxes.</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="qcubed/controls/QJqCheckBox.class.php" hash="4774160c46773c05cbfdfdeeef2c343d" package="Controls">
    <docblock line="2">
      <description>QJqCheckBox</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Controls">
      <extends>\QJqCheckBoxBase</extends>
      <name>QJqCheckBox</name>
      <full_name>\QJqCheckBox</full_name>
      <docblock line="11">
        <description>This class mplements a JQuery Ui Check Box.</description>
        <long-description>&lt;p&gt;It extends the QJqCheckBoxBase class. When writing your code, use this class instead of QJqCheckBoxBase.
This class can be modified by the developer to add functions and alter the already present functions.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Controls"/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/controls/QDataGrid.class.php" hash="dd3543d89c0f387022e5e2d8a8015e58" package="Controls">
    <docblock line="2">
      <description>contains the QDataGrid class</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Controls">
      <extends>\QDataGridBase</extends>
      <name>QDataGrid</name>
      <full_name>\QDataGrid</full_name>
      <docblock line="10">
        <description>QDataGrid can help generate tables automatically with pagination.</description>
        <long-description>&lt;p&gt;It can also be used to
render data directly from database by using a 'DataSource'. The code-generated search pages you get for
every table in your database are all QDataGrids&lt;/p&gt;</long-description>
        <tag line="10" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$intCellSpacing</name>
        <default>0</default>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="Set the space between the cells" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="21" namespace="global" package="Default">
        <name>$intCellPadding</name>
        <default>0</default>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="type" description="int $intCellPadding Set the space between the cell wall and the cell content"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description>QDataGrid::__construct()</description>
          <long-description/>
          <tag line="29" name="param" description="The Datagrid's parent" type="mixed" variable="$objParentObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="29" name="param" description="Control ID" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="29" name="return" description="" type="\QDataGrid">
            <type by_reference="false">\QDataGrid</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="20" code="50019">No short description for property $intCellPadding</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QSelectable.class.php" hash="368cfcb3ff6b02f53aadfa0458c501c3" package="Controls">
    <docblock line="2">
      <description>QSelectable</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="author" description=""/>
      <tag line="2" name="copyright" description="2011"/>
      <tag line="2" name="version" description="$Id$"/>
      <tag line="2" name="access" description="public"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="22" package="Controls">
      <extends>\QSelectableBase</extends>
      <name>QSelectable</name>
      <full_name>\QSelectable</full_name>
      <docblock line="14">
        <description/>
        <long-description/>
        <tag line="14" name="package" description="Controls"/>
        <tag line="14" name="author" description="Qcubed"/>
        <tag line="14" name="copyright" description=""/>
        <tag line="14" name="version" description="2011"/>
        <tag line="14" name="access" description="public"/>
      </docblock>
    </class>
    <parse_markers>
      <critical line="14" code="50005">No short description for class \QSelectable</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QImageLabel.class.php" hash="d21d8a805b2fb212e5cc4aaefd597484" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Controls">
      <extends>\QImageLabelBase</extends>
      <name>QImageLabel</name>
      <full_name>\QImageLabel</full_name>
      <docblock line="2">
        <description/>
        <long-description/>
        <tag line="2" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="22" namespace="global" package="Default">
        <name>$strCacheFolder</name>
        <default>null</default>
        <docblock line="6">
          <description/>
          <long-description/>
          <tag line="6" name="var" description="Cache Folder If you wish to set a cache for the generated images so that they are not dynamically recreated every time, specify a default CacheFolder here. The Cache Folder is an absolute folder location relative to the root of the QCubed application. So for example, if you have the QCubed application installed at /var/web/wwwroot/my_application, and if docroot is &quot;/var/web/wwwroot&quot; and if you therefore have a subfolder defined as &quot;/my_application&quot;, then if you specify a CacheFolder of &quot;/text_images&quot;, the following will happen: Cached images will be stored at /var/web/wwwroot/my_application/text_images/... Cached images will be accessed by &lt;img src=&quot;/my_application/text_images/...&quot;&gt; Remember: CacheFolder *must* have a leading &quot;/&quot; and no trailing &quot;/&quot;, and also be sure that the webserver process has WRITE access to the CacheFolder, itself." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/controls/QImageLabel.class.php</error>
      <critical line="2" code="50005">No short description for class \QImageLabel</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QImageControl.class.php" hash="da27588bf168bd892fea63da8cbf9214" package="Default">
    <class final="false" abstract="false" namespace="global" line="6" package="Controls">
      <extends>\QImageControlBase</extends>
      <name>QImageControl</name>
      <full_name>\QImageControl</full_name>
      <docblock line="3">
        <description/>
        <long-description/>
        <tag line="3" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$strCacheFolder</name>
        <default>null</default>
        <docblock line="7">
          <description/>
          <long-description/>
          <tag line="7" name="var" description="Cache Folder If you wish to set a cache for the generated images so that they are not dynamically recreated every time, specify a default CacheFolder here. The Cache Folder is an absolute folder location relative to the root of the QCubed application. So for example, if you have the QCubed application installed at /var/web/wwwroot/my_application, and if docroot is &quot;/var/web/wwwroot&quot; and if you therefore have a subfolder defined as &quot;/my_application&quot;, then if you specify a CacheFolder of &quot;/text_images&quot;, the following will happen: Cached images will be stored at /var/web/wwwroot/my_application/text_images/... Cached images will be accessed by &lt;img src=&quot;/my_application/text_images/...&quot;&gt; Remember: CacheFolder *must* have a leading &quot;/&quot; and no trailing &quot;/&quot;, and also be sure that the webserver process has WRITE access to the CacheFolder, itself." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/controls/QImageControl.class.php</error>
      <critical line="3" code="50005">No short description for class \QImageControl</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QFileAsset.class.php" hash="1ef753fb343e3d0e76d20e08380e931b" package="Controls">
    <docblock line="2">
      <description>QFileAsset</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Controls">
      <extends>\QFileAssetBase</extends>
      <name>QFileAsset</name>
      <full_name>\QFileAsset</full_name>
      <docblock line="8">
        <description>QFileAsset</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="author" description="Qcubed"/>
        <tag line="8" name="copyright" description=""/>
        <tag line="8" name="version" description="2011"/>
        <tag line="8" name="access" description="public"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$strTemporaryUploadPath</name>
        <default>'/tmp'</default>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="Default:'/tmp' File Path for Temporary Upload" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>QFileAsset::__construct()</description>
          <long-description/>
          <tag line="21" name="param" description="" type="mixed" variable="$objParentObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="21" name="param" description="" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="21" name="return" description="" type="\QFileAsset">
            <type by_reference="false">\QFileAsset</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="qcubed/controls/QDroppable.class.php" hash="77a9519962b6cc67b0761cf8ae7c1e00" package="Controls">
    <docblock line="2">
      <description>QDroppable</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="author" description="Qcubed"/>
      <tag line="2" name="copyright" description=""/>
      <tag line="2" name="version" description="2011"/>
      <tag line="2" name="access" description="public"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Controls">
      <extends>\QDroppableBase</extends>
      <name>QDroppable</name>
      <full_name>\QDroppable</full_name>
      <docblock line="14">
        <description/>
        <long-description/>
        <tag line="14" name="package" description="Controls"/>
        <tag line="14" name="author" description="Qcubed"/>
        <tag line="14" name="copyright" description=""/>
        <tag line="14" name="version" description="2011"/>
        <tag line="14" name="access" description="public"/>
      </docblock>
    </class>
    <parse_markers>
      <critical line="14" code="50005">No short description for class \QDroppable</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QImageFileAsset.class.php" hash="472ff71bdf87711f8c1be4cbd65c2f6d" package="Controls">
    <docblock line="2">
      <description>QImageFileAsset is defined in this file</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="Controls">
      <extends>\QFileAsset</extends>
      <name>QImageFileAsset</name>
      <full_name>\QImageFileAsset</full_name>
      <docblock line="8">
        <description>ImageFileAsset is derived from QFileAsset and is a dedicated control for uploading images (images only).</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="14" namespace="global" package="Default">
        <name>$intMinWidth</name>
        <default/>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="the variable is used to contain minimum width of image in pixels" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="16" namespace="global" package="Default">
        <name>$intMaxWidth</name>
        <default/>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="the variable is used to contain maxiimum width of image in pixels" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$intMinHeight</name>
        <default/>
        <docblock line="17">
          <description/>
          <long-description/>
          <tag line="17" name="var" description="the variable is used to contain minimum height of image in pixels" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Default">
        <name>$intMaxHeight</name>
        <default/>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="the variable is used to contain maxiimum width of image in pixels" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="22">
          <description>Constructor function to create a new QImageFileAsset</description>
          <long-description/>
          <tag line="22" name="param" description="Should be a QControl" type="mixed" variable="$objParentObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="22" name="param" description="The Control ID of the control (optional)" type="null" variable="$strControlId">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="33">
          <description>This function tests whether everything was as needed or not
(uploaded image was within the range specified)</description>
          <long-description/>
          <tag line="33" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="70">
          <description>PHP magic function to handle object properties</description>
          <long-description/>
          <tag line="70" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="Value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="" type="mixed|null|string|void">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
            <type by_reference="false">void</type>
          </tag>
          <tag line="70" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="79">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="qcubed/controls/QJsTimer.class.php" hash="55394df4d15237234c08b1849ed05479" package="Controls">
    <docblock line="2">
      <description>The QJsTimer class (and related classes) reside here.</description>
      <long-description>&lt;p&gt;This control does not produce any visible element. It only launches timer based events on the client side.
Javascript is generated by QCubed.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Default">
      <extends>\QEvent</extends>
      <name>QTimerExpiredEvent</name>
      <full_name>\QTimerExpiredEvent</full_name>
      <docblock line="12">
        <description>Use this event with the QJsTimer control
this event is trigger after a
delay specified in QJsTimer (param DeltaTime)</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="19" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'timerexpiredevent'</value>
        <docblock line="18">
          <description>Event's name.</description>
          <long-description>&lt;p&gt;Used by QCubed framework for its internal purpose&lt;/p&gt;</long-description>
        </docblock>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="42" package="Default">
      <extends>\QControl</extends>
      <name>QJsTimer</name>
      <full_name>\QJsTimer</full_name>
      <docblock line="23">
        <description>Timer Control:
This control uses a javascript timer to execute Actions after a defined time
Periodic or one shot timers are possible.</description>
        <long-description>&lt;p&gt;You can add only one type of Event to to this control: QTimerExpiredEvent
but multiple actions can be registered for this event&lt;/p&gt;</long-description>
        <tag line="23" name="property" description="Time till the timer fires and executes the Actions added." type="int" variable="$DeltaTime">
          <type by_reference="false">int</type>
        </tag>
        <tag line="23" name="property" description="&lt;ul&gt;&#10;                     &lt;li&gt;&lt;strong&gt;true&lt;/strong&gt;: timer is restarted after firing&lt;/li&gt;&#10;                     &lt;li&gt;&lt;strong&gt;false&lt;/strong&gt;: you have to restart the timer by calling Start()&lt;/li&gt;&#10;                             &lt;/ul&gt;" type="boolean" variable="$Periodic">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="23" name="property" description="&lt;strong&gt;true&lt;/strong&gt;: timer is running / &lt;strong&gt;false&lt;/strong&gt;: stopped" type="boolean" variable="$Started">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="23" name="property" description="After a 'Server Action' (QServerAction) the executed java script&#10;                                                       (including the timer) is stopped!&#10;                                                       Set this parameter to true to restart the timer automatically." type="boolean" variable="$RestartOnServerAction">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="23" name="notes" description="&lt;ul&gt;&lt;li&gt;You do not need to render this control!&lt;/li&gt;&#10;           &lt;li&gt;QTimerExpiredEvent - condition and delay parameters of the constructor are ignored (for now) &lt;/li&gt;"/>
      </docblock>
      <constant namespace="global" line="45" package="Default">
        <name>Stopped</name>
        <full_name>Stopped</full_name>
        <value>0</value>
        <docblock line="44">
          <description>Constant used to indicate that the timer has stopped</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="47" package="Default">
        <name>Started</name>
        <full_name>Started</full_name>
        <value>1</value>
        <docblock line="46">
          <description>Constant used to indicate that the timer has started</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="49" package="Default">
        <name>AutoStart</name>
        <full_name>AutoStart</full_name>
        <value>2</value>
        <docblock line="48">
          <description>Constant used to indicate that the timer has autostart enabled (starts with the page load)</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Default">
        <name>$blnPeriodic</name>
        <default>true</default>
        <docblock line="51">
          <description/>
          <long-description/>
          <tag line="51" name="var" description="does the timer run periodically once started?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$intDeltaTime</name>
        <default>0</default>
        <docblock line="53">
          <description/>
          <long-description/>
          <tag line="53" name="var" description="The duration after which the timer will fire (in milliseconds)" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="global" package="Default">
        <name>$intState</name>
        <default>\QJsTimer::Stopped</default>
        <docblock line="55">
          <description/>
          <long-description/>
          <tag line="55" name="var" description="default state in which timer will be (stopped)" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$blnRestartOnServerAction</name>
        <default>false</default>
        <docblock line="57">
          <description/>
          <long-description/>
          <tag line="57" name="var" description="should the timer start after a QServerAction occurrs." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="61">
          <description/>
          <long-description/>
          <tag line="61" name="param" description="the form or parent control" type="\QForm|\QControl" variable="$objParentObject">
            <type by_reference="false">\QForm</type>
            <type by_reference="false">\QControl</type>
          </tag>
          <tag line="61" name="param" description="timer interval in ms" type="int" variable="$intTime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="61" name="param" description="if true the timer is &quot;restarted&quot; automatically after it has fired" type="boolean" variable="$blnPeriodic">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="61" name="param" description="starts the timer automatically after adding the first action" type="boolean" variable="$blnStartNow">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="61" name="param" description="" type="string" variable="$strTimerId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="61" name="return" description="" type="\QJsTimer">
            <type by_reference="false">\QJsTimer</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$intTime</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="71">
          <name>$blnPeriodic</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="71">
          <name>$blnStartNow</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="71">
          <name>$strTimerId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="90" package="Default">
        <name>callbackString</name>
        <full_name>callbackString</full_name>
        <docblock line="86">
          <description>Returns the callback string</description>
          <long-description/>
          <tag line="86" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="99" package="Default">
        <name>tidString</name>
        <full_name>tidString</full_name>
        <docblock line="94">
          <description>Returns a timer ID (string) as an element of the 'qcubed._objTimers' javascript array.</description>
          <long-description>&lt;p&gt;This array is used to start and stop timers (and keep track)&lt;/p&gt;</long-description>
          <tag line="94" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Default">
        <name>Start</name>
        <full_name>Start</full_name>
        <docblock line="103">
          <description/>
          <long-description/>
          <tag line="103" name="param" description="(optional)&#10;             sets the interval/delay, after that the timer executes the registered actions&#10;             if no parameter is given the time stored in $intDeltaTime is used" type="int" variable="$intTime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="103" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$intTime</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="135" package="Default">
        <name>Stop</name>
        <full_name>Stop</full_name>
        <docblock line="132">
          <description>stops the timer</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="Default">
        <name>AddAction</name>
        <full_name>AddAction</full_name>
        <docblock line="152">
          <description>Adds an action to the control</description>
          <long-description/>
          <tag line="152" name="param" description="has to be an instance of QTimerExpiredEvent" type="\QEvent" variable="$objEvent">
            <type by_reference="false">\QEvent</type>
          </tag>
          <tag line="152" name="param" description="Only a QTimerExpiredEvent can be added,&#10;                                        but multiple Actions using the same event are possible!" type="\QAction" variable="$objAction">
            <type by_reference="false">\QAction</type>
          </tag>
          <tag line="152" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="152" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$objEvent</name>
          <default/>
          <type/>
        </argument>
        <argument line="162">
          <name>$objAction</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="196" package="Default">
        <name>GetAllActions</name>
        <full_name>GetAllActions</full_name>
        <docblock line="189">
          <description>Returns all actions connected/attached to the timer</description>
          <long-description/>
          <tag line="189" name="param" description="" type="string" variable="$strEventType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="param" description="" type="null" variable="$strActionType">
            <type by_reference="false">null</type>
          </tag>
          <tag line="189" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$strEventType</name>
          <default/>
          <type/>
        </argument>
        <argument line="196">
          <name>$strActionType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="212" package="Default">
        <name>RemoveAllActions</name>
        <full_name>RemoveAllActions</full_name>
        <docblock line="208">
          <description>Remove all actions attached to the timer</description>
          <long-description/>
          <tag line="208" name="param" description="" type="null" variable="$strEventName">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$strEventName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="220" package="Default">
        <name>GetEvent</name>
        <full_name>GetEvent</full_name>
        <docblock line="217">
          <description/>
          <long-description/>
          <tag line="217" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="233" package="Default">
        <name>GetActionAttributes</name>
        <full_name>GetActionAttributes</full_name>
        <docblock line="229">
          <description>Returns all action attributes</description>
          <long-description/>
          <tag line="229" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="261" package="Default">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
        <docblock line="256">
          <description>Returns all Javscript that needs to be executed after rendering of this control
(It overrides the GetEndScript of the parent to handle specific case of QJsTimers)</description>
          <long-description/>
          <tag line="256" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="281" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="274">
          <description>PHP magic function to get value of properties of an object of this class</description>
          <long-description/>
          <tag line="274" name="param" description="Name of the properties" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="return" description="" type="array|bool|int|mixed|null|\QControl|\QForm|string">
            <type by_reference="false">array</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="281">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="312" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="303">
          <description>PHP Magic function to set property values for an object of this class</description>
          <long-description/>
          <tag line="303" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="303" name="param" description="Value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="303" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="303" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="303" name="throws" description="" type="\QInvalidCastException">
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="312">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="312">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="369" package="Default">
        <name>Render</name>
        <full_name>Render</full_name>
        <docblock line="362">
          <description>Render function for the Control (must not be called becasue QJsTimer is not for being rendered)</description>
          <long-description/>
          <tag line="362" name="param" description="useless in this case" type="bool" variable="$blnDisplayOutput">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="362" name="return" description="" type="string|void">
            <type by_reference="false">string</type>
            <type by_reference="false">void</type>
          </tag>
          <tag line="362" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="369">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="379" package="Default">
        <name>AddChildControl</name>
        <full_name>AddChildControl</full_name>
        <docblock line="373">
          <description>Add a child control to the current control (useless because QJsTimer cannot have children)</description>
          <long-description/>
          <tag line="373" name="param" description="" type="\QControl" variable="$objControl">
            <type by_reference="false">\QControl</type>
          </tag>
          <tag line="373" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="379">
          <name>$objControl</name>
          <default/>
          <type>\QControl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="389" package="Default">
        <name>RemoveChildControl</name>
        <full_name>RemoveChildControl</full_name>
        <docblock line="383">
          <description>Remove the child controls (useless)
Since QJsTimer cannot have children, removing child controls does not yeild anything</description>
          <long-description/>
          <tag line="383" name="param" description="" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="param" description="" type="bool" variable="$blnRemoveFromForm">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="389">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="389">
          <name>$blnRemoveFromForm</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="396" package="Default">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
        <docblock line="392">
          <description>Get the HTML for the control (blank in this case becuase QJsTimer cannot be rendered)</description>
          <long-description/>
          <tag line="392" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="404" package="Default">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
        <docblock line="401">
          <description>This function would typically parse the data posted back by the control.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="411" package="Default">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="407">
          <description>Validation logic for control.</description>
          <long-description>&lt;p&gt;Since we never render, we must return true to continue using the control.&lt;/p&gt;</long-description>
          <tag line="407" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="61" code="50012">No short description for method __construct()</error>
      <error line="103" code="50012">No short description for method Start()</error>
      <error line="217" code="50012">No short description for method GetEvent()</error>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QAccordion.class.php" hash="6d7700dfc7d32c811193dd1f787305a4" package="Controls">
    <docblock line="2">
      <description>QAccordion</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Controls">
      <extends>\QAccordionBase</extends>
      <name>QAccordion</name>
      <full_name>\QAccordion</full_name>
      <docblock line="11">
        <description>Creates the jQuery Accordian control</description>
        <long-description>&lt;p&gt;It extends the QAccordionBase class. When writing your code, use this class instead of QAccordianBase.
This class is intended to be modified by the developer to add functions and alter the already present functions.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Controls"/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/controls/QSampleControl.class.php" hash="1708f63a953b44e1295336adcdb38d27" package="Default">
    <class final="false" abstract="false" namespace="global" line="17" package="Controls">
      <extends>\QControl</extends>
      <name>QSampleControl</name>
      <full_name>\QSampleControl</full_name>
      <docblock line="2">
        <description>This is a SAMPLE of a custom QControl that you could write.</description>
        <long-description>&lt;p&gt;Think of this as a "starting point".
Remember: EVERYTHING here is meant to be customized!  To use, simply make a copy of this file,
rename the file, and edit the renamed file.  Remember to specify a control Class name which matches the
name of your file.  And then implement your own logic for GetControlHtml().&lt;/p&gt;

&lt;p&gt;Additionally, you can add customizable logic for any or all of the following, as well:
 - __construct()
 - ParsePostData()
 - Validate()
 - GetEndScript()
 - GetEndHtml()&lt;/p&gt;</long-description>
        <tag line="2" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$intExample</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$strFoo</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
        <docblock line="21">
          <description>If this control needs to update itself from the $_POST data, the logic to do so
will be performed in this method.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="27">
          <description>If this control has validation rules, the logic to do so
will be performed in this method.</description>
          <long-description/>
          <tag line="27" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
        <docblock line="34">
          <description>Get the HTML for this Control.</description>
          <long-description/>
          <tag line="34" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="51">
          <description>Constructor for this control</description>
          <long-description/>
          <tag line="51" name="param" description="Parent QForm or QControl that is responsible for rendering this control" type="mixed" variable="$objParentObject">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="51" name="param" description="optional control ID" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="56">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="87">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="102">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="102">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/controls/QSampleControl.class.php</error>
      <error line="18" code="50018">No DocBlock was found for property $intExample</error>
      <error line="19" code="50018">No DocBlock was found for property $strFoo</error>
      <error line="87" code="50010">No DocBlock was found for method __get()</error>
      <error line="102" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QTabs.class.php" hash="cdcfec5be4906546b806f95b368b391a" package="Controls">
    <docblock line="2">
      <description>This file contains the QTabs class</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends>\QTabsBase</extends>
      <name>QTabs</name>
      <full_name>\QTabs</full_name>
      <docblock line="10">
        <description>QTabs is the PHP wrapper for JQueryUI Tabs control</description>
        <long-description/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/controls/QSimpleTable.class.php" hash="2d0fb22590fbb435efdf00b4a25e9599" package="Default">
    <class final="false" abstract="false" namespace="global" line="6" package="Controls">
      <extends>\QSimpleTableBase</extends>
      <name>QSimpleTable</name>
      <full_name>\QSimpleTable</full_name>
      <docblock line="3">
        <description/>
        <long-description/>
        <tag line="3" name="package" description="Controls"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/controls/QSimpleTable.class.php</error>
      <critical line="3" code="50005">No short description for class \QSimpleTable</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QAutocomplete.class.php" hash="99312fbf0ea438eda37e79df606f0ecb" package="Controls">
    <docblock line="2">
      <description>Override file for QAutocomplete.</description>
      <long-description>&lt;p&gt;Put your autocomplete customizations here.&lt;/p&gt;

&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Controls">
      <extends>\QAutocompleteBase</extends>
      <name>QAutocomplete</name>
      <full_name>\QAutocomplete</full_name>
      <docblock line="10">
        <description>This class only extends QAutocompleteBase which implements the actual functionality.</description>
        <long-description>&lt;p&gt;It will create textbox with autocomplete functionality&lt;/p&gt;</long-description>
        <tag line="10" name="package" description="Controls"/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/controls/QDialog.class.php" hash="cf588e5457376a36cbd3e35f17b796e5" package="Controls">
    <docblock line="2">
      <description>QDialog
Put your customizations of the standard behavior here.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Controls">
      <extends>\QDialogBase</extends>
      <name>QDialog</name>
      <full_name>\QDialog</full_name>
      <docblock line="9">
        <description>Implements a JQuery UI Dialog</description>
        <long-description>&lt;p&gt;It extends the QDialogBase class. When writing your code, use this class instead of QDialogBase.
This class is intended to be modified by the developer to add functions and alter the already present functions.&lt;/p&gt;</long-description>
        <tag line="9" name="package" description="Controls"/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/controls/QDraggable.class.php" hash="cecb874fb1607a89960b1855c3767b9b" package="Controls">
    <docblock line="2">
      <description>QDraggable</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="author" description="Qcubed"/>
      <tag line="2" name="copyright" description=""/>
      <tag line="2" name="version" description="2011"/>
      <tag line="2" name="access" description="public"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Controls">
      <extends>\QDraggableBase</extends>
      <name>QDraggable</name>
      <full_name>\QDraggable</full_name>
      <docblock line="14">
        <description/>
        <long-description/>
        <tag line="14" name="package" description="Controls"/>
        <tag line="14" name="author" description="Qcubed"/>
        <tag line="14" name="copyright" description=""/>
        <tag line="14" name="version" description="2011"/>
        <tag line="14" name="access" description="public"/>
      </docblock>
    </class>
    <parse_markers>
      <critical line="14" code="50005">No short description for class \QDraggable</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QDatepicker.class.php" hash="b9fc6fa29d73dc765ae4ba4f74434735" package="Controls">
    <docblock line="2">
      <description>QDatePicker</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Controls">
      <extends>\QDatepickerBase</extends>
      <name>QDatepicker</name>
      <full_name>\QDatepicker</full_name>
      <docblock line="9">
        <description>Creates the jQuery Datepicker control</description>
        <long-description>&lt;p&gt;It extends the QDatepickerBase class. When writing your code, use this class instead of QDatepickerBase.
This class is intended to be modified by the developer to add functions and alter the already present functions.
Put your customizations to the standard behavior of QDataPickerBase class in this class.&lt;/p&gt;</long-description>
        <tag line="9" name="package" description="Controls"/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/controls/QControl.class.php" hash="c7bc86365a6f42a5a8a9922d5e493a6e" package="Controls">
    <docblock line="2">
      <description>Contains the QControl Class - one of the most important classes in the framework</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="19" package="Controls">
      <extends>\QControlBase</extends>
      <name>QControl</name>
      <full_name>\QControl</full_name>
      <docblock line="7">
        <description>QControl is the user overridable Base-Class for all Controls.</description>
        <long-description>&lt;p&gt;This class is intended to be modified. If you need to modify the class (looks or behavior), then place any
custom modifications to QControl in the file.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Please note&lt;/b&gt;: All custom render methods should start with a RenderHelper call and end with a RenderOutput call.
Also, read the class file to learn about the wrappers (the HTML elements with the '_ctl' at the end of their
'id' attribute) and how to disable them.&lt;/p&gt;</long-description>
        <tag line="7" name="package" description="Controls"/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/controls/QSortable.class.php" hash="78e9c1dadd732b0762956377d902afbf" package="Controls">
    <docblock line="2">
      <description>QSortable</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="author" description=""/>
      <tag line="2" name="copyright" description="2011"/>
      <tag line="2" name="version" description="$Id$"/>
      <tag line="2" name="access" description="public"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="22" package="Controls">
      <extends>\QSortableBase</extends>
      <name>QSortable</name>
      <full_name>\QSortable</full_name>
      <docblock line="14">
        <description/>
        <long-description/>
        <tag line="14" name="package" description="Controls"/>
        <tag line="14" name="author" description="Qcubed"/>
        <tag line="14" name="copyright" description=""/>
        <tag line="14" name="version" description="2011"/>
        <tag line="14" name="access" description="public"/>
      </docblock>
    </class>
    <parse_markers>
      <critical line="14" code="50005">No short description for class \QSortable</critical>
    </parse_markers>
  </file>
  <file path="qcubed/controls/QJqRadioButton.class.php" hash="0887c16890ba022e63529e80b7493630" package="Controls">
    <docblock line="2">
      <description>QJqRadioButton</description>
      <long-description>&lt;p&gt;Put your customizations of the standard behavior here.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="19" package="Controls">
      <extends>\QJqRadioButtonBase</extends>
      <name>QJqRadioButton</name>
      <full_name>\QJqRadioButton</full_name>
      <docblock line="11">
        <description>Implements a JQuery UI Radio Button</description>
        <long-description>&lt;p&gt;It extends the QJqRadioButtonBase class. When writing your code, use this class instead of QJqRadioButtonBase.
This class can be modified by the developer to add functions and alter the already present functions.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Controls"/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/_core/database/QPostgreSqlPdoDatabase.class.php" hash="15d0aafd9ff34eb1e8d14e1baa6697be" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="DatabaseAdapters">
      <extends>\QPdoDatabase</extends>
      <name>QPostgreSqlPdoDatabase</name>
      <full_name>\QPostgreSqlPdoDatabase</full_name>
      <docblock line="2">
        <description>EXPERIMENTAL PostgreSQL database driver, based on PDO.</description>
        <long-description/>
        <tag line="2" name="author" description="Marcos Sanchez [marcosdsanchez at thinkclear dot ar]"/>
        <tag line="2" name="package" description="DatabaseAdapters"/>
      </docblock>
      <constant namespace="global" line="8" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'PostgreSQL PDO Database Adapter'</value>
      </constant>
      <constant namespace="global" line="9" package="DatabaseAdapters">
        <name>PDO_PGSQL_DSN_IDENTIFIER</name>
        <full_name>PDO_PGSQL_DSN_IDENTIFIER</full_name>
        <value>'pgsql'</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="11" package="DatabaseAdapters">
        <name>InsertOrUpdate</name>
        <full_name>InsertOrUpdate</full_name>
        <argument line="11">
          <name>$strTable</name>
          <default/>
          <type/>
        </argument>
        <argument line="11">
          <name>$mixColumnsAndValuesArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="11">
          <name>$strPKNames</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="DatabaseAdapters">
        <name>Connect</name>
        <full_name>Connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="DatabaseAdapters">
        <name>SqlVariable</name>
        <full_name>SqlVariable</full_name>
        <argument line="71">
          <name>$mixData</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$blnIncludeEquality</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="71">
          <name>$blnReverseEquality</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="DatabaseAdapters">
        <name>SqlLimitVariablePrefix</name>
        <full_name>SqlLimitVariablePrefix</full_name>
        <argument line="144">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="DatabaseAdapters">
        <name>SqlLimitVariableSuffix</name>
        <full_name>SqlLimitVariableSuffix</full_name>
        <argument line="150">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="DatabaseAdapters">
        <name>SqlSortByVariable</name>
        <full_name>SqlSortByVariable</full_name>
        <argument line="174">
          <name>$strSortByInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="DatabaseAdapters">
        <name>GetTables</name>
        <full_name>GetTables</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="196" package="DatabaseAdapters">
        <name>GetFieldsForTable</name>
        <full_name>GetFieldsForTable</full_name>
        <argument line="196">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="228" package="DatabaseAdapters">
        <name>InsertId</name>
        <full_name>InsertId</full_name>
        <argument line="228">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="228">
          <name>$strColumnName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="239" package="DatabaseAdapters">
        <name>ParseColumnNameArrayFromKeyDefinition</name>
        <full_name>ParseColumnNameArrayFromKeyDefinition</full_name>
        <argument line="239">
          <name>$strKeyDefinition</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="271" package="DatabaseAdapters">
        <name>GetIndexesForTable</name>
        <full_name>GetIndexesForTable</full_name>
        <argument line="271">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="310" package="DatabaseAdapters">
        <name>GetForeignKeysForTable</name>
        <full_name>GetForeignKeysForTable</full_name>
        <argument line="310">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="385" package="DatabaseAdapters">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="385">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="402" package="Default">
      <extends>\QPdoDatabaseResult</extends>
      <name>QPostgreSqlPdoDatabaseResult</name>
      <full_name>\QPostgreSqlPdoDatabaseResult</full_name>
      <docblock line="399">
        <description>QPostgreSqlPdoDatabaseResult</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="404" package="Default">
        <name>GetNextRow</name>
        <full_name>GetNextRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="413" package="Default">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="421" package="Default">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="430" package="Default">
      <extends>\QDatabaseRowBase</extends>
      <name>QPostgreSqlPdoDatabaseRow</name>
      <full_name>\QPostgreSqlPdoDatabaseRow</full_name>
      <docblock line="427">
        <description>QPostgreSqlPdoDatabaseRow</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="431" namespace="global" package="Default">
        <name>$strColumnArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="433" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="433">
          <name>$strColumnArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="437" package="Default">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="437">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="437">
          <name>$strColumnType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="474" package="Default">
        <name>ColumnExists</name>
        <full_name>ColumnExists</full_name>
        <argument line="474">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="478" package="Default">
        <name>GetColumnNameArray</name>
        <full_name>GetColumnNameArray</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="485" package="Default">
      <extends>\QDatabaseFieldBase</extends>
      <name>QPostgreSqlPdoDatabaseField</name>
      <full_name>\QPostgreSqlPdoDatabaseField</full_name>
      <docblock line="482">
        <description>QPostgreSqlPdoDatabaseField</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="486" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="486">
          <name>$mixFieldData</name>
          <default/>
          <type/>
        </argument>
        <argument line="486">
          <name>$objDb</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="632" package="Default">
      <extends>\QPdoDatabaseException</extends>
      <name>QPostgreSqlPdoDatabaseException</name>
      <full_name>\QPostgreSqlPdoDatabaseException</full_name>
      <docblock line="629">
        <description>QPostgreSqlPdoDatabaseException</description>
        <long-description/>
      </docblock>
    </class>
    <markers>
      <todo line="255">Current method doesn't support key names with commas or parenthesis in them!</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/database/QPostgreSqlPdoDatabase.class.php</error>
      <error line="11" code="50010">No DocBlock was found for method InsertOrUpdate()</error>
      <error line="50" code="50010">No DocBlock was found for method Connect()</error>
      <error line="64" code="50010">No DocBlock was found for method Close()</error>
      <error line="71" code="50010">No DocBlock was found for method SqlVariable()</error>
      <error line="144" code="50010">No DocBlock was found for method SqlLimitVariablePrefix()</error>
      <error line="150" code="50010">No DocBlock was found for method SqlLimitVariableSuffix()</error>
      <error line="174" code="50010">No DocBlock was found for method SqlSortByVariable()</error>
      <error line="188" code="50010">No DocBlock was found for method GetTables()</error>
      <error line="196" code="50010">No DocBlock was found for method GetFieldsForTable()</error>
      <error line="228" code="50010">No DocBlock was found for method InsertId()</error>
      <error line="239" code="50010">No DocBlock was found for method ParseColumnNameArrayFromKeyDefinition()</error>
      <error line="271" code="50010">No DocBlock was found for method GetIndexesForTable()</error>
      <error line="310" code="50010">No DocBlock was found for method GetForeignKeysForTable()</error>
      <error line="385" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <error line="404" code="50010">No DocBlock was found for method GetNextRow()</error>
      <error line="413" code="50010">No DocBlock was found for method FetchFields()</error>
      <error line="421" code="50010">No DocBlock was found for method FetchField()</error>
      <error line="431" code="50018">No DocBlock was found for property $strColumnArray</error>
      <error line="433" code="50010">No DocBlock was found for method __construct()</error>
      <error line="437" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="474" code="50010">No DocBlock was found for method ColumnExists()</error>
      <error line="478" code="50010">No DocBlock was found for method GetColumnNameArray()</error>
      <error line="486" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/database/QSqlServerDatabase.class.php" hash="8b8f88132dd30adbd8e45a527fe55000" package="Default">
    <class final="false" abstract="false" namespace="global" line="31" package="DatabaseAdapters">
      <extends>\QDatabaseBase</extends>
      <name>QSqlServerDatabase</name>
      <full_name>\QSqlServerDatabase</full_name>
      <docblock line="2">
        <description>Database Adapter for Microsoft SQL Server
Utilizes the Microsoft SQL Server extension php_mssql.dll (win) or the freetds extension (*nix)</description>
        <long-description>&lt;p&gt;NOTES:&lt;/p&gt;

&lt;p&gt;LimitInfo and Query utilizes an interal SQL tag QCODO_OFFSET&amp;lt;#&gt;, where # represents
the number of rows to offset for "Limit"-based queries.  The QCODO_OFFSET is added
internally by SqlLimitVariablePrefix(), and it is handled (and removed from the query)
by Query().  In error messages and DB profiling, the QCODO_OFFSET&amp;lt;#&gt; tag &lt;em&gt;WILL&lt;/em&gt; appear
(if applicable).  The framework will handle this gracefully, but obviously, if you try
and cut and paste SQL code that contains QCODO_OFFSET&amp;lt;#&gt; into QueryAnalyzer, the query
will fail, so just be aware of that.  If you want to do something like test queries
with QueryAnalyzer, just remember to manually remove any QCODO_OFFSET&amp;lt;#&gt; information.&lt;/p&gt;

&lt;p&gt;MSSQL will return DATE values according to regional settings.  QCubed expects
dates to be of the format YYYY-MM-DD.  Therefore, make sure that your
PHP.INI file says:
    mssql.datetimeconvert = Off&lt;/p&gt;

&lt;p&gt;Also, if you are using MSSQL Server 2K from Linux/Unix (using FreeTDS), you may
encounter an issue with the following error:
    WARNING! ! Some character(s) could not be converted into client's character set...
If so, then update your connection settings in the freetds.conf to say the following:
    client charset = UTF-8
For consistancy, you will also want to update QApplication::$EncodingType to be UTF-8
as well.&lt;/p&gt;</long-description>
        <tag line="2" name="package" description="DatabaseAdapters"/>
      </docblock>
      <constant namespace="global" line="32" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'Microsoft SQL Server Database Adapter'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$objMsSql</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$strEscapeIdentifierBegin</name>
        <default>'['</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$strEscapeIdentifierEnd</name>
        <default>']'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$blnOnlyFullGroupBy</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="DatabaseAdapters">
        <name>SqlVariable</name>
        <full_name>SqlVariable</full_name>
        <docblock line="40">
          <description>Properly escapes $mixData to be used as a SQL query parameter.</description>
          <long-description>&lt;p&gt;If IncludeEquality is set (usually not), then include an equality operator.
So for most data, it would just be "=".  But, for example,
if $mixData is NULL, then most RDBMS's require the use of "IS".&lt;/p&gt;</long-description>
          <tag line="40" name="param" description="" type="mixed" variable="$mixData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="40" name="param" description="whether or not to include an equality operator" type="boolean" variable="$blnIncludeEquality">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="40" name="param" description="whether the included equality operator should be a &quot;NOT EQUAL&quot;, e.g. &quot;!=&quot;" type="boolean" variable="$blnReverseEquality">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="40" name="return" description="the properly formatted SQL variable" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$mixData</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$blnIncludeEquality</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="51">
          <name>$blnReverseEquality</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="DatabaseAdapters">
        <name>SqlLimitVariablePrefix</name>
        <full_name>SqlLimitVariablePrefix</full_name>
        <argument line="120">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="DatabaseAdapters">
        <name>SqlLimitVariableSuffix</name>
        <full_name>SqlLimitVariableSuffix</full_name>
        <argument line="149">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="153" package="DatabaseAdapters">
        <name>SqlSortByVariable</name>
        <full_name>SqlSortByVariable</full_name>
        <argument line="153">
          <name>$strSortByInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="167" package="DatabaseAdapters">
        <name>Connect</name>
        <full_name>Connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="DatabaseAdapters">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="217">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="231" package="DatabaseAdapters">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="231">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="270" package="DatabaseAdapters">
        <name>ExecuteNonQuery</name>
        <full_name>ExecuteNonQuery</full_name>
        <argument line="270">
          <name>$strNonQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="283" package="DatabaseAdapters">
        <name>GetTables</name>
        <full_name>GetTables</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="295" package="DatabaseAdapters">
        <name>GetTableForId</name>
        <full_name>GetTableForId</full_name>
        <argument line="295">
          <name>$intTableId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="311" package="DatabaseAdapters">
        <name>GetFieldsForTable</name>
        <full_name>GetFieldsForTable</full_name>
        <argument line="311">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="338" package="DatabaseAdapters">
        <name>InsertId</name>
        <full_name>InsertId</full_name>
        <argument line="338">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="338">
          <name>$strColumnName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="345" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="352" package="DatabaseAdapters">
        <name>ExecuteTransactionBegin</name>
        <full_name>ExecuteTransactionBegin</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="356" package="DatabaseAdapters">
        <name>ExecuteTransactionCommit</name>
        <full_name>ExecuteTransactionCommit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="360" package="DatabaseAdapters">
        <name>ExecuteTransactionRollBack</name>
        <full_name>ExecuteTransactionRollBack</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="364" package="DatabaseAdapters">
        <name>GetIndexesForTable</name>
        <full_name>GetIndexesForTable</full_name>
        <argument line="364">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="383" package="DatabaseAdapters">
        <name>GetForeignKeysForTable</name>
        <full_name>GetForeignKeysForTable</full_name>
        <argument line="383">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="469" package="DatabaseAdapters">
      <extends>\QDatabaseExceptionBase</extends>
      <name>QSqlServerDatabaseException</name>
      <full_name>\QSqlServerDatabaseException</full_name>
      <docblock line="465">
        <description/>
        <long-description/>
        <tag line="465" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="470" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="470">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
        <argument line="470">
          <name>$intNumber</name>
          <default/>
          <type/>
        </argument>
        <argument line="470">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="481" package="DatabaseAdapters">
      <extends>\QDatabaseResultBase</extends>
      <name>QSqlServerDatabaseResult</name>
      <full_name>\QSqlServerDatabaseResult</full_name>
      <docblock line="477">
        <description/>
        <long-description/>
        <tag line="477" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="482" namespace="global" package="Default">
        <name>$objMsSqlResult</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="483" namespace="global" package="Default">
        <name>$objDb</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="485" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="485">
          <name>$objResult</name>
          <default/>
          <type/>
        </argument>
        <argument line="485">
          <name>$objDb</name>
          <default/>
          <type>\QSqlServerDatabase</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="490" package="DatabaseAdapters">
        <name>FetchArray</name>
        <full_name>FetchArray</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="494" package="DatabaseAdapters">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="501" package="DatabaseAdapters">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="506" package="DatabaseAdapters">
        <name>FetchRow</name>
        <full_name>FetchRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="510" package="DatabaseAdapters">
        <name>CountRows</name>
        <full_name>CountRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="514" package="DatabaseAdapters">
        <name>CountFields</name>
        <full_name>CountFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="518" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="522" package="DatabaseAdapters">
        <name>GetNextRow</name>
        <full_name>GetNextRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="531" package="DatabaseAdapters">
        <name>GetRows</name>
        <full_name>GetRows</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="543" package="DatabaseAdapters">
      <extends>\QDatabaseRowBase</extends>
      <name>QSqlServerDatabaseRow</name>
      <full_name>\QSqlServerDatabaseRow</full_name>
      <docblock line="539">
        <description/>
        <long-description/>
        <tag line="539" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="544" namespace="global" package="Default">
        <name>$strColumnArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="546" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="546">
          <name>$strColumnArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="550" package="DatabaseAdapters">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="550">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="550">
          <name>$strColumnType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="583" package="DatabaseAdapters">
        <name>ColumnExists</name>
        <full_name>ColumnExists</full_name>
        <argument line="583">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="587" package="DatabaseAdapters">
        <name>GetColumnNameArray</name>
        <full_name>GetColumnNameArray</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="596" package="DatabaseAdapters">
      <extends>\QDatabaseFieldBase</extends>
      <name>QSqlServerDatabaseField</name>
      <full_name>\QSqlServerDatabaseField</full_name>
      <docblock line="592">
        <description/>
        <long-description/>
        <tag line="592" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="597" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="597">
          <name>$mixFieldData</name>
          <default/>
          <type/>
        </argument>
        <argument line="597">
          <name>$objDb</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/database/QSqlServerDatabase.class.php</error>
      <error line="34" code="50018">No DocBlock was found for property $objMsSql</error>
      <error line="36" code="50018">No DocBlock was found for property $strEscapeIdentifierBegin</error>
      <error line="37" code="50018">No DocBlock was found for property $strEscapeIdentifierEnd</error>
      <error line="38" code="50018">No DocBlock was found for property $blnOnlyFullGroupBy</error>
      <error line="120" code="50010">No DocBlock was found for method SqlLimitVariablePrefix()</error>
      <error line="149" code="50010">No DocBlock was found for method SqlLimitVariableSuffix()</error>
      <error line="153" code="50010">No DocBlock was found for method SqlSortByVariable()</error>
      <error line="167" code="50010">No DocBlock was found for method Connect()</error>
      <error line="217" code="50010">No DocBlock was found for method __get()</error>
      <error line="231" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <error line="270" code="50010">No DocBlock was found for method ExecuteNonQuery()</error>
      <error line="283" code="50010">No DocBlock was found for method GetTables()</error>
      <error line="295" code="50010">No DocBlock was found for method GetTableForId()</error>
      <error line="311" code="50010">No DocBlock was found for method GetFieldsForTable()</error>
      <error line="338" code="50010">No DocBlock was found for method InsertId()</error>
      <error line="345" code="50010">No DocBlock was found for method Close()</error>
      <error line="352" code="50010">No DocBlock was found for method ExecuteTransactionBegin()</error>
      <error line="356" code="50010">No DocBlock was found for method ExecuteTransactionCommit()</error>
      <error line="360" code="50010">No DocBlock was found for method ExecuteTransactionRollBack()</error>
      <error line="364" code="50010">No DocBlock was found for method GetIndexesForTable()</error>
      <error line="383" code="50010">No DocBlock was found for method GetForeignKeysForTable()</error>
      <critical line="465" code="50005">No short description for class \QSqlServerDatabaseException</critical>
      <error line="470" code="50010">No DocBlock was found for method __construct()</error>
      <critical line="477" code="50005">No short description for class \QSqlServerDatabaseResult</critical>
      <error line="482" code="50018">No DocBlock was found for property $objMsSqlResult</error>
      <error line="483" code="50018">No DocBlock was found for property $objDb</error>
      <error line="485" code="50010">No DocBlock was found for method __construct()</error>
      <error line="490" code="50010">No DocBlock was found for method FetchArray()</error>
      <error line="494" code="50010">No DocBlock was found for method FetchFields()</error>
      <error line="501" code="50010">No DocBlock was found for method FetchField()</error>
      <error line="506" code="50010">No DocBlock was found for method FetchRow()</error>
      <error line="510" code="50010">No DocBlock was found for method CountRows()</error>
      <error line="514" code="50010">No DocBlock was found for method CountFields()</error>
      <error line="518" code="50010">No DocBlock was found for method Close()</error>
      <error line="522" code="50010">No DocBlock was found for method GetNextRow()</error>
      <error line="531" code="50010">No DocBlock was found for method GetRows()</error>
      <critical line="539" code="50005">No short description for class \QSqlServerDatabaseRow</critical>
      <error line="544" code="50018">No DocBlock was found for property $strColumnArray</error>
      <error line="546" code="50010">No DocBlock was found for method __construct()</error>
      <error line="550" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="583" code="50010">No DocBlock was found for method ColumnExists()</error>
      <error line="587" code="50010">No DocBlock was found for method GetColumnNameArray()</error>
      <critical line="592" code="50005">No short description for class \QSqlServerDatabaseField</critical>
      <error line="597" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/database/QOracleDatabase.class.php" hash="cae65bce6646ff9a39bff1521001864b" package="Default">
    <class final="false" abstract="false" namespace="global" line="12" package="DatabaseAdapters">
      <extends>\QDatabaseBase</extends>
      <name>QOracleDatabase</name>
      <full_name>\QOracleDatabase</full_name>
      <docblock line="2">
        <description>EXPERIMENTAL Oracle database adapter.</description>
        <long-description>&lt;p&gt;Tested on: Qcodo Development Framework 0.3.32 (Qcodo Beta 3)&lt;/p&gt;</long-description>
        <tag line="2" name="package" description="DatabaseAdapters"/>
        <tag line="2" name="author" description="Riccardo Tacconi, Ago Luberg, enzo - Eduardo Garcia"/>
      </docblock>
      <constant namespace="global" line="13" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'Oracle Database Adapter'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="14" namespace="global" package="Default">
        <name>$objOracle</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="16" namespace="global" package="Default">
        <name>$EscapeIdentifierBegin</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="protected" line="17" namespace="global" package="Default">
        <name>$EscapeIdentifierEnd</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$blnOnlyFullGroupBy</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$debug</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Default">
        <name>$commitMode</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="DatabaseAdapters">
        <name>SqlLimitVariablePrefix</name>
        <full_name>SqlLimitVariablePrefix</full_name>
        <argument line="22">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="DatabaseAdapters">
        <name>SqlLimitVariableSuffix</name>
        <full_name>SqlLimitVariableSuffix</full_name>
        <argument line="28">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="62" package="DatabaseAdapters">
        <name>SqlSortByVariable</name>
        <full_name>SqlSortByVariable</full_name>
        <argument line="62">
          <name>$strSortByInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="DatabaseAdapters">
        <name>Connect</name>
        <full_name>Connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="DatabaseAdapters">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="107">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="131" package="DatabaseAdapters">
        <name>Parse</name>
        <full_name>Parse</full_name>
        <docblock line="125">
          <description>Prepares Oracle statement for execution</description>
          <long-description/>
          <tag line="125" name="param" description="" type="string" variable="$strQuery">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="return" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="144" package="DatabaseAdapters">
        <name>Execute</name>
        <full_name>Execute</full_name>
        <docblock line="138">
          <description>Executes prepared statement and returns usable object</description>
          <long-description/>
          <tag line="138" name="param" description="" type="resource" variable="$objResult">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="138" name="return" description="" type="\QOracleDatabaseResult">
            <type by_reference="false">\QOracleDatabaseResult</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$objResult</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="168" package="DatabaseAdapters">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="168">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="239" package="DatabaseAdapters">
        <name>ExecuteNonQuery</name>
        <full_name>ExecuteNonQuery</full_name>
        <argument line="239">
          <name>$strNonQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="273" package="DatabaseAdapters">
        <name>GetTables</name>
        <full_name>GetTables</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="284" package="DatabaseAdapters">
        <name>GetFieldsForTable</name>
        <full_name>GetFieldsForTable</full_name>
        <argument line="284">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="296" package="DatabaseAdapters">
        <name>InsertId</name>
        <full_name>InsertId</full_name>
        <argument line="296">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="296">
          <name>$strColumnName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="303" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="310" package="DatabaseAdapters">
        <name>ExecuteTransactionBegin</name>
        <full_name>ExecuteTransactionBegin</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="316" package="DatabaseAdapters">
        <name>ExecuteTransactionCommit</name>
        <full_name>ExecuteTransactionCommit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="323" package="DatabaseAdapters">
        <name>ExecuteTransactionRollBack</name>
        <full_name>ExecuteTransactionRollBack</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="330" package="DatabaseAdapters">
        <name>GetIndexesForTable</name>
        <full_name>GetIndexesForTable</full_name>
        <argument line="330">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="355" package="DatabaseAdapters">
        <name>GetForeignKeysForTable</name>
        <full_name>GetForeignKeysForTable</full_name>
        <argument line="355">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="392" package="DatabaseAdapters">
        <name>ParseNameFromKeyDefinition</name>
        <full_name>ParseNameFromKeyDefinition</full_name>
        <argument line="392">
          <name>$strKeyDefinition</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="415" package="DatabaseAdapters">
        <name>ParseColumnNameArrayFromKeyDefinition</name>
        <full_name>ParseColumnNameArrayFromKeyDefinition</full_name>
        <argument line="415">
          <name>$strKeyDefinition</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="446" package="DatabaseAdapters">
        <name>ParseForIndexes</name>
        <full_name>ParseForIndexes</full_name>
        <argument line="446">
          <name>$strCreateStatement</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="494" package="DatabaseAdapters">
        <name>ParseForInnoDbForeignKeys</name>
        <full_name>ParseForInnoDbForeignKeys</full_name>
        <argument line="494">
          <name>$strCreateStatement</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="548" package="DatabaseAdapters">
        <name>GetCreateStatementForTable</name>
        <full_name>GetCreateStatementForTable</full_name>
        <argument line="548">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="557" package="DatabaseAdapters">
        <name>GetTableTypeForCreateStatement</name>
        <full_name>GetTableTypeForCreateStatement</full_name>
        <argument line="557">
          <name>$strCreateStatement</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="570" package="DatabaseAdapters">
        <name>ExplainStatement</name>
        <full_name>ExplainStatement</full_name>
        <argument line="570">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="575" package="Default">
      <extends>\QDatabaseExceptionBase</extends>
      <name>QOracleDatabaseException</name>
      <full_name>\QOracleDatabaseException</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="576" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="576">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
        <argument line="576">
          <name>$intNumber</name>
          <default/>
          <type/>
        </argument>
        <argument line="576">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="583" package="Default">
      <extends>\QDatabaseResultBase</extends>
      <name>QOracleDatabaseResult</name>
      <full_name>\QOracleDatabaseResult</full_name>
      <property final="false" static="false" visibility="protected" line="584" namespace="global" package="Default">
        <name>$objOracleResult</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="585" namespace="global" package="Default">
        <name>$objDb</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="587" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="587">
          <name>$objResult</name>
          <default/>
          <type/>
        </argument>
        <argument line="587">
          <name>$objDb</name>
          <default/>
          <type>\QOracleDatabase</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="592" package="Default">
        <name>FetchArray</name>
        <full_name>FetchArray</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="596" package="Default">
        <name>FetchObject</name>
        <full_name>FetchObject</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="600" package="Default">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="604" package="Default">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="608" package="Default">
        <name>FetchRow</name>
        <full_name>FetchRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="612" package="Default">
        <name>CountRows</name>
        <full_name>CountRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="620" package="Default">
        <name>CountFields</name>
        <full_name>CountFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="624" package="Default">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="628" package="Default">
        <name>GetNextRow</name>
        <full_name>GetNextRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="637" package="Default">
        <name>GetRows</name>
        <full_name>GetRows</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="645" package="Default">
      <extends>\QDatabaseRowBase</extends>
      <name>QOracleDatabaseRow</name>
      <full_name>\QOracleDatabaseRow</full_name>
      <property final="false" static="false" visibility="protected" line="646" namespace="global" package="Default">
        <name>$strColumnArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="648" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="648">
          <name>$strColumnArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="652" package="Default">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="652">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="652">
          <name>$strColumnType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="692" package="Default">
        <name>ColumnExists</name>
        <full_name>ColumnExists</full_name>
        <argument line="692">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="696" package="Default">
        <name>GetColumnNameArray</name>
        <full_name>GetColumnNameArray</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="701" package="Default">
      <extends>\QDatabaseFieldBase</extends>
      <name>QOracleDatabaseField</name>
      <full_name>\QOracleDatabaseField</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="702" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="702">
          <name>$mixFieldData</name>
          <default/>
          <type/>
        </argument>
        <argument line="702">
          <name>$objDb</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="745" package="Default">
        <name>SetFieldType</name>
        <full_name>SetFieldType</full_name>
        <argument line="745">
          <name>$OracleFieldType</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="430">Current method doesn't support key names with commas or parenthesis in them!</todo>
      <todo line="725">unique and primary?</todo>
      <todo line="726">auto number (sequence)</todo>
      <todo line="727">not null?</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/database/QOracleDatabase.class.php</error>
      <error line="14" code="50018">No DocBlock was found for property $objOracle</error>
      <error line="16" code="50018">No DocBlock was found for property $EscapeIdentifierBegin</error>
      <error line="17" code="50018">No DocBlock was found for property $EscapeIdentifierEnd</error>
      <error line="18" code="50018">No DocBlock was found for property $blnOnlyFullGroupBy</error>
      <error line="19" code="50018">No DocBlock was found for property $debug</error>
      <error line="20" code="50018">No DocBlock was found for property $commitMode</error>
      <error line="22" code="50010">No DocBlock was found for method SqlLimitVariablePrefix()</error>
      <error line="28" code="50010">No DocBlock was found for method SqlLimitVariableSuffix()</error>
      <error line="62" code="50010">No DocBlock was found for method SqlSortByVariable()</error>
      <error line="76" code="50010">No DocBlock was found for method Connect()</error>
      <error line="107" code="50010">No DocBlock was found for method __get()</error>
      <error line="168" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <error line="239" code="50010">No DocBlock was found for method ExecuteNonQuery()</error>
      <error line="273" code="50010">No DocBlock was found for method GetTables()</error>
      <error line="284" code="50010">No DocBlock was found for method GetFieldsForTable()</error>
      <error line="296" code="50010">No DocBlock was found for method InsertId()</error>
      <error line="303" code="50010">No DocBlock was found for method Close()</error>
      <error line="310" code="50010">No DocBlock was found for method ExecuteTransactionBegin()</error>
      <error line="316" code="50010">No DocBlock was found for method ExecuteTransactionCommit()</error>
      <error line="323" code="50010">No DocBlock was found for method ExecuteTransactionRollBack()</error>
      <error line="330" code="50010">No DocBlock was found for method GetIndexesForTable()</error>
      <error line="355" code="50010">No DocBlock was found for method GetForeignKeysForTable()</error>
      <error line="392" code="50010">No DocBlock was found for method ParseNameFromKeyDefinition()</error>
      <error line="415" code="50010">No DocBlock was found for method ParseColumnNameArrayFromKeyDefinition()</error>
      <error line="446" code="50010">No DocBlock was found for method ParseForIndexes()</error>
      <error line="494" code="50010">No DocBlock was found for method ParseForInnoDbForeignKeys()</error>
      <error line="548" code="50010">No DocBlock was found for method GetCreateStatementForTable()</error>
      <error line="557" code="50010">No DocBlock was found for method GetTableTypeForCreateStatement()</error>
      <error line="570" code="50010">No DocBlock was found for method ExplainStatement()</error>
      <error line="575" code="50000">No DocBlock was found for \QOracleDatabaseException</error>
      <error line="576" code="50010">No DocBlock was found for method __construct()</error>
      <error line="583" code="50000">No DocBlock was found for \QOracleDatabaseResult</error>
      <error line="584" code="50018">No DocBlock was found for property $objOracleResult</error>
      <error line="585" code="50018">No DocBlock was found for property $objDb</error>
      <error line="587" code="50010">No DocBlock was found for method __construct()</error>
      <error line="592" code="50010">No DocBlock was found for method FetchArray()</error>
      <error line="596" code="50010">No DocBlock was found for method FetchObject()</error>
      <error line="600" code="50010">No DocBlock was found for method FetchFields()</error>
      <error line="604" code="50010">No DocBlock was found for method FetchField()</error>
      <error line="608" code="50010">No DocBlock was found for method FetchRow()</error>
      <error line="612" code="50010">No DocBlock was found for method CountRows()</error>
      <error line="620" code="50010">No DocBlock was found for method CountFields()</error>
      <error line="624" code="50010">No DocBlock was found for method Close()</error>
      <error line="628" code="50010">No DocBlock was found for method GetNextRow()</error>
      <error line="637" code="50010">No DocBlock was found for method GetRows()</error>
      <error line="645" code="50000">No DocBlock was found for \QOracleDatabaseRow</error>
      <error line="646" code="50018">No DocBlock was found for property $strColumnArray</error>
      <error line="648" code="50010">No DocBlock was found for method __construct()</error>
      <error line="652" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="692" code="50010">No DocBlock was found for method ColumnExists()</error>
      <error line="696" code="50010">No DocBlock was found for method GetColumnNameArray()</error>
      <error line="701" code="50000">No DocBlock was found for \QOracleDatabaseField</error>
      <error line="702" code="50010">No DocBlock was found for method __construct()</error>
      <error line="745" code="50010">No DocBlock was found for method SetFieldType()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/database/QPdoDatabase.class.php" hash="dbba49784ceea224716a5f9a01df2297" package="Default">
    <class final="false" abstract="true" namespace="global" line="8" package="DatabaseAdapters">
      <extends>\QDatabaseBase</extends>
      <name>QPdoDatabase</name>
      <full_name>\QPdoDatabase</full_name>
      <docblock line="2">
        <description>PDO Generic database driver</description>
        <long-description/>
        <tag line="2" name="abstract" description=""/>
        <tag line="2" name="author" description="Marcos Sanchez [marcosdsanchez at thinkclear dot com dot ar]"/>
        <tag line="2" name="package" description="DatabaseAdapters"/>
      </docblock>
      <constant namespace="global" line="9" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'Generic PDO Adapter (Abstract)'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$objPdo</name>
        <default/>
        <docblock line="11">
          <description/>
          <long-description/>
          <tag line="11" name="var" description="connection handler" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
          <tag line="11" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Default">
        <name>$objMostRecentResult</name>
        <default/>
        <docblock line="16">
          <description/>
          <long-description/>
          <tag line="16" name="var" description="most recent query result" type="\PDOStatement">
            <type by_reference="false">\PDOStatement</type>
          </tag>
          <tag line="16" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="23" package="DatabaseAdapters">
        <name>ExecuteNonQuery</name>
        <full_name>ExecuteNonQuery</full_name>
        <argument line="23">
          <name>$strNonQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="DatabaseAdapters">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="31">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="50" package="DatabaseAdapters">
        <name>ExecuteTransactionBegin</name>
        <full_name>ExecuteTransactionBegin</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="57" package="DatabaseAdapters">
        <name>ExecuteTransactionCommit</name>
        <full_name>ExecuteTransactionCommit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="61" package="DatabaseAdapters">
        <name>ExecuteTransactionRollBack</name>
        <full_name>ExecuteTransactionRollBack</full_name>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="71" package="Default">
      <extends>\QDatabaseResultBase</extends>
      <name>QPdoDatabaseResult</name>
      <full_name>\QPdoDatabaseResult</full_name>
      <docblock line="66">
        <description>QPdoDatabaseResult</description>
        <long-description/>
        <tag line="66" name="abstract" description=""/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$objPdoResult</name>
        <default/>
        <docblock line="72">
          <description/>
          <long-description/>
          <tag line="72" name="var" description="Query result" type="\PDOStatement">
            <type by_reference="false">\PDOStatement</type>
          </tag>
          <tag line="72" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="81" namespace="global" package="Default">
        <name>$objPdo</name>
        <default/>
        <docblock line="77">
          <description/>
          <long-description/>
          <tag line="77" name="var" description="Connection object" type="\PDO">
            <type by_reference="false">\PDO</type>
          </tag>
          <tag line="77" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="83">
          <name>$objResult</name>
          <default/>
          <type/>
        </argument>
        <argument line="83">
          <name>$objDb</name>
          <default/>
          <type>\QPdoDatabase</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="Default">
        <name>FetchArray</name>
        <full_name>FetchArray</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="Default">
        <name>FetchRow</name>
        <full_name>FetchRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="Default">
        <name>CountRows</name>
        <full_name>CountRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Default">
        <name>CountFields</name>
        <full_name>CountFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="Default">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Default">
        <name>GetRows</name>
        <full_name>GetRows</full_name>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="120" package="Default">
      <extends>\QDatabaseExceptionBase</extends>
      <name>QPdoDatabaseException</name>
      <full_name>\QPdoDatabaseException</full_name>
      <docblock line="115">
        <description>PdoDatabaseException</description>
        <long-description/>
        <tag line="115" name="abstract" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="121">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
        <argument line="121">
          <name>$intNumber</name>
          <default/>
          <type/>
        </argument>
        <argument line="121">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/database/QPdoDatabase.class.php</error>
      <error line="23" code="50010">No DocBlock was found for method ExecuteNonQuery()</error>
      <error line="31" code="50010">No DocBlock was found for method __get()</error>
      <error line="45" code="50010">No DocBlock was found for method Close()</error>
      <error line="50" code="50010">No DocBlock was found for method ExecuteTransactionBegin()</error>
      <error line="57" code="50010">No DocBlock was found for method ExecuteTransactionCommit()</error>
      <error line="61" code="50010">No DocBlock was found for method ExecuteTransactionRollBack()</error>
      <error line="83" code="50010">No DocBlock was found for method __construct()</error>
      <error line="88" code="50010">No DocBlock was found for method FetchArray()</error>
      <error line="92" code="50010">No DocBlock was found for method FetchRow()</error>
      <error line="96" code="50010">No DocBlock was found for method CountRows()</error>
      <error line="100" code="50010">No DocBlock was found for method CountFields()</error>
      <error line="104" code="50010">No DocBlock was found for method Close()</error>
      <error line="108" code="50010">No DocBlock was found for method GetRows()</error>
      <error line="121" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/database/QSqLite3PdoDatabase.class.php" hash="c87e0fbfeddf6c5f56ac3d829b72fbe8" package="Default">
    <class final="false" abstract="false" namespace="global" line="9" package="DatabaseAdapters">
      <extends>\QPdoDatabase</extends>
      <name>QSqLite3PdoDatabase</name>
      <full_name>\QSqLite3PdoDatabase</full_name>
      <docblock line="2">
        <description>PDO_SqLite3 database driver</description>
        <long-description/>
        <tag line="2" name="package" description="DatabaseAdapters"/>
        <tag line="2" name="author" description="Christophe Damour [sigeal at sigeal dot com dot fr]&#10;Adapted from PDO_PGSQL database driver by Marcos S�nchez [marcosdsanchez at thinkclear dot com dot ar]"/>
      </docblock>
      <constant namespace="global" line="10" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'SqLite3 PDO Database Adapter'</value>
      </constant>
      <constant namespace="global" line="11" package="DatabaseAdapters">
        <name>PDO_SQLITE3_DSN_IDENTIFIER</name>
        <full_name>PDO_SQLITE3_DSN_IDENTIFIER</full_name>
        <value>'sqlite'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="13" namespace="global" package="Default">
        <name>$strEscapeIdentifierBegin</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="protected" line="14" namespace="global" package="Default">
        <name>$strEscapeIdentifierEnd</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="protected" line="16" namespace="global" package="Default">
        <name>$strEscapeIdentifierBeginInternal</name>
        <default>'\''</default>
      </property>
      <property final="false" static="false" visibility="protected" line="17" namespace="global" package="Default">
        <name>$strEscapeIdentifierEndInternal</name>
        <default>'\''</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="DatabaseAdapters">
        <name>InsertOrUpdate</name>
        <full_name>InsertOrUpdate</full_name>
        <argument line="19">
          <name>$strTable</name>
          <default/>
          <type/>
        </argument>
        <argument line="19">
          <name>$mixColumnsAndValuesArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="19">
          <name>$strPKNames</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="DatabaseAdapters">
        <name>Connect</name>
        <full_name>Connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="DatabaseAdapters">
        <name>SqlVariable</name>
        <full_name>SqlVariable</full_name>
        <argument line="49">
          <name>$mixData</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$blnIncludeEquality</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="49">
          <name>$blnReverseEquality</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="DatabaseAdapters">
        <name>SqlLimitVariablePrefix</name>
        <full_name>SqlLimitVariablePrefix</full_name>
        <argument line="122">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="DatabaseAdapters">
        <name>SqlLimitVariableSuffix</name>
        <full_name>SqlLimitVariableSuffix</full_name>
        <argument line="128">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="DatabaseAdapters">
        <name>SqlSortByVariable</name>
        <full_name>SqlSortByVariable</full_name>
        <argument line="151">
          <name>$strSortByInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="164" package="DatabaseAdapters">
        <name>GetTables</name>
        <full_name>GetTables</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="173" package="DatabaseAdapters">
        <name>GetFieldsForTable</name>
        <full_name>GetFieldsForTable</full_name>
        <argument line="173">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="189" package="DatabaseAdapters">
        <name>InsertId</name>
        <full_name>InsertId</full_name>
        <argument line="189">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="189">
          <name>$strColumnName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="194" package="DatabaseAdapters">
        <name>ParseColumnNameArrayFromKeyDefinition</name>
        <full_name>ParseColumnNameArrayFromKeyDefinition</full_name>
        <argument line="194">
          <name>$strKeyDefinition</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="225" package="DatabaseAdapters">
        <name>GetIndexesForTable</name>
        <full_name>GetIndexesForTable</full_name>
        <argument line="225">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="261" package="DatabaseAdapters">
        <name>GetForeignKeysForTable</name>
        <full_name>GetForeignKeysForTable</full_name>
        <argument line="261">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="295" package="DatabaseAdapters">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="295">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="311" package="Default">
      <extends>\QPdoDatabaseResult</extends>
      <name>QSqLite3PdoDatabaseResult</name>
      <full_name>\QSqLite3PdoDatabaseResult</full_name>
      <docblock line="308">
        <description>QSqLite3PdoDatabaseResult</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="313" package="Default">
        <name>GetNextRow</name>
        <full_name>GetNextRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="322" package="Default">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="330" package="Default">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="339" package="Default">
      <extends>\QDatabaseRowBase</extends>
      <name>QSqLite3PdoDatabaseRow</name>
      <full_name>\QSqLite3PdoDatabaseRow</full_name>
      <docblock line="336">
        <description>QSqLite3PdoDatabaseRow</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="340" namespace="global" package="Default">
        <name>$strColumnArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="342" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="342">
          <name>$strColumnArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="346" package="Default">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="346">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="346">
          <name>$strColumnType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="383" package="Default">
        <name>ColumnExists</name>
        <full_name>ColumnExists</full_name>
        <argument line="383">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="387" package="Default">
        <name>GetColumnNameArray</name>
        <full_name>GetColumnNameArray</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="395" package="Default">
      <extends>\QDatabaseFieldBase</extends>
      <name>QSqLite3PdoDatabaseField</name>
      <full_name>\QSqLite3PdoDatabaseField</full_name>
      <docblock line="392">
        <description>QSqLite3PdoDatabaseField</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="397" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="397">
          <name>$mixFieldData</name>
          <default/>
          <type/>
        </argument>
        <argument line="397">
          <name>$objDb</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="397">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="456" package="Default">
        <name>SetFieldType</name>
        <full_name>SetFieldType</full_name>
        <argument line="456">
          <name>$strSqlite3FieldType</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="526" package="Default">
      <extends>\QPdoDatabaseException</extends>
      <name>QSqLite3PdoDatabaseException</name>
      <full_name>\QSqLite3PdoDatabaseException</full_name>
      <docblock line="523">
        <description>QSqLite3PdoDatabaseException</description>
        <long-description/>
      </docblock>
    </class>
    <markers>
      <todo line="210">Current method doesn't support key names with commas or parenthesis in them!</todo>
      <todo line="396">Tables and Unique</todo>
      <todo line="404">table</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/database/QSqLite3PdoDatabase.class.php</error>
      <error line="13" code="50018">No DocBlock was found for property $strEscapeIdentifierBegin</error>
      <error line="14" code="50018">No DocBlock was found for property $strEscapeIdentifierEnd</error>
      <error line="16" code="50018">No DocBlock was found for property $strEscapeIdentifierBeginInternal</error>
      <error line="17" code="50018">No DocBlock was found for property $strEscapeIdentifierEndInternal</error>
      <error line="19" code="50010">No DocBlock was found for method InsertOrUpdate()</error>
      <error line="29" code="50010">No DocBlock was found for method Connect()</error>
      <error line="42" code="50010">No DocBlock was found for method Close()</error>
      <error line="49" code="50010">No DocBlock was found for method SqlVariable()</error>
      <error line="122" code="50010">No DocBlock was found for method SqlLimitVariablePrefix()</error>
      <error line="128" code="50010">No DocBlock was found for method SqlLimitVariableSuffix()</error>
      <error line="151" code="50010">No DocBlock was found for method SqlSortByVariable()</error>
      <error line="164" code="50010">No DocBlock was found for method GetTables()</error>
      <error line="173" code="50010">No DocBlock was found for method GetFieldsForTable()</error>
      <error line="189" code="50010">No DocBlock was found for method InsertId()</error>
      <error line="194" code="50010">No DocBlock was found for method ParseColumnNameArrayFromKeyDefinition()</error>
      <error line="225" code="50010">No DocBlock was found for method GetIndexesForTable()</error>
      <error line="261" code="50010">No DocBlock was found for method GetForeignKeysForTable()</error>
      <error line="295" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <error line="313" code="50010">No DocBlock was found for method GetNextRow()</error>
      <error line="322" code="50010">No DocBlock was found for method FetchFields()</error>
      <error line="330" code="50010">No DocBlock was found for method FetchField()</error>
      <error line="340" code="50018">No DocBlock was found for property $strColumnArray</error>
      <error line="342" code="50010">No DocBlock was found for method __construct()</error>
      <error line="346" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="383" code="50010">No DocBlock was found for method ColumnExists()</error>
      <error line="387" code="50010">No DocBlock was found for method GetColumnNameArray()</error>
      <error line="397" code="50010">No DocBlock was found for method __construct()</error>
      <error line="456" code="50010">No DocBlock was found for method SetFieldType()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/database/QMySqliDatabase.class.php" hash="c37516a2ed7019c7e859efc0e14db301" package="Default">
    <class final="false" abstract="false" namespace="global" line="6" package="DatabaseAdapters">
      <extends>\QDatabaseBase</extends>
      <name>QMySqliDatabase</name>
      <full_name>\QMySqliDatabase</full_name>
      <docblock line="2">
        <description/>
        <long-description/>
        <tag line="2" name="package" description="DatabaseAdapters"/>
      </docblock>
      <constant namespace="global" line="7" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'MySql Improved Database Adapter for MySQL 4'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="9" namespace="global" package="Default">
        <name>$objMySqli</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="11" namespace="global" package="Default">
        <name>$strEscapeIdentifierBegin</name>
        <default>'`'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="12" namespace="global" package="Default">
        <name>$strEscapeIdentifierEnd</name>
        <default>'`'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="14" package="DatabaseAdapters">
        <name>SqlLimitVariablePrefix</name>
        <full_name>SqlLimitVariablePrefix</full_name>
        <argument line="14">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="DatabaseAdapters">
        <name>SqlLimitVariableSuffix</name>
        <full_name>SqlLimitVariableSuffix</full_name>
        <argument line="24">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="DatabaseAdapters">
        <name>SqlSortByVariable</name>
        <full_name>SqlSortByVariable</full_name>
        <argument line="37">
          <name>$strSortByInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="DatabaseAdapters">
        <name>InsertOrUpdate</name>
        <full_name>InsertOrUpdate</full_name>
        <argument line="51">
          <name>$strTable</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$mixColumnsAndValuesArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$strPKNames</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="DatabaseAdapters">
        <name>Connect</name>
        <full_name>Connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="DatabaseAdapters">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="88">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="102" package="DatabaseAdapters">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="102">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="113" package="DatabaseAdapters">
        <name>ExecuteNonQuery</name>
        <full_name>ExecuteNonQuery</full_name>
        <argument line="113">
          <name>$strNonQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="DatabaseAdapters">
        <name>GetTables</name>
        <full_name>GetTables</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="DatabaseAdapters">
        <name>GetFieldsForTable</name>
        <full_name>GetFieldsForTable</full_name>
        <argument line="129">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="134" package="DatabaseAdapters">
        <name>InsertId</name>
        <full_name>InsertId</full_name>
        <argument line="134">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="134">
          <name>$strColumnName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="145" package="DatabaseAdapters">
        <name>ExecuteTransactionBegin</name>
        <full_name>ExecuteTransactionBegin</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="150" package="DatabaseAdapters">
        <name>ExecuteTransactionCommit</name>
        <full_name>ExecuteTransactionCommit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="156" package="DatabaseAdapters">
        <name>ExecuteTransactionRollBack</name>
        <full_name>ExecuteTransactionRollBack</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="DatabaseAdapters">
        <name>GetFoundRows</name>
        <full_name>GetFoundRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="DatabaseAdapters">
        <name>GetIndexesForTable</name>
        <full_name>GetIndexesForTable</full_name>
        <argument line="171">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="192" package="DatabaseAdapters">
        <name>GetForeignKeysForTable</name>
        <full_name>GetForeignKeysForTable</full_name>
        <argument line="192">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="220" package="DatabaseAdapters">
        <name>ParseNameFromKeyDefinition</name>
        <full_name>ParseNameFromKeyDefinition</full_name>
        <argument line="220">
          <name>$strKeyDefinition</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="243" package="DatabaseAdapters">
        <name>ParseColumnNameArrayFromKeyDefinition</name>
        <full_name>ParseColumnNameArrayFromKeyDefinition</full_name>
        <argument line="243">
          <name>$strKeyDefinition</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="274" package="DatabaseAdapters">
        <name>ParseForIndexes</name>
        <full_name>ParseForIndexes</full_name>
        <argument line="274">
          <name>$strCreateStatement</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="324" package="DatabaseAdapters">
        <name>ParseForInnoDbForeignKeys</name>
        <full_name>ParseForInnoDbForeignKeys</full_name>
        <argument line="324">
          <name>$strCreateStatement</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="378" package="DatabaseAdapters">
        <name>GetCreateStatementForTable</name>
        <full_name>GetCreateStatementForTable</full_name>
        <argument line="378">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="387" package="DatabaseAdapters">
        <name>GetTableTypeForCreateStatement</name>
        <full_name>GetTableTypeForCreateStatement</full_name>
        <argument line="387">
          <name>$strCreateStatement</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="405" package="DatabaseAdapters">
        <name>ExplainStatement</name>
        <full_name>ExplainStatement</full_name>
        <docblock line="400">
          <description/>
          <long-description/>
          <tag line="400" name="param" description="" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="400" name="return" description="" type="\QMySqliDatabaseResult">
            <type by_reference="false">\QMySqliDatabaseResult</type>
          </tag>
        </docblock>
        <argument line="405">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="478" package="DatabaseAdapters">
      <extends>\QDatabaseExceptionBase</extends>
      <name>QMySqliDatabaseException</name>
      <full_name>\QMySqliDatabaseException</full_name>
      <docblock line="474">
        <description/>
        <long-description/>
        <tag line="474" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="479" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="479">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
        <argument line="479">
          <name>$intNumber</name>
          <default/>
          <type/>
        </argument>
        <argument line="479">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="490" package="DatabaseAdapters">
      <extends>\QDatabaseResultBase</extends>
      <name>QMySqliDatabaseResult</name>
      <full_name>\QMySqliDatabaseResult</full_name>
      <docblock line="486">
        <description/>
        <long-description/>
        <tag line="486" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="491" namespace="global" package="Default">
        <name>$objMySqliResult</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="492" namespace="global" package="Default">
        <name>$objDb</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="494" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="494">
          <name>$objResult</name>
          <default/>
          <type>\mysqli_result</type>
        </argument>
        <argument line="494">
          <name>$objDb</name>
          <default/>
          <type>\QMySqliDatabase</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="499" package="DatabaseAdapters">
        <name>FetchArray</name>
        <full_name>FetchArray</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="503" package="DatabaseAdapters">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="510" package="DatabaseAdapters">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="515" package="DatabaseAdapters">
        <name>FetchRow</name>
        <full_name>FetchRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="519" package="DatabaseAdapters">
        <name>MySqlFetchField</name>
        <full_name>MySqlFetchField</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="523" package="DatabaseAdapters">
        <name>CountRows</name>
        <full_name>CountRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="527" package="DatabaseAdapters">
        <name>CountFields</name>
        <full_name>CountFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="531" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="535" package="DatabaseAdapters">
        <name>GetNextRow</name>
        <full_name>GetNextRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="544" package="DatabaseAdapters">
        <name>GetRows</name>
        <full_name>GetRows</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="556" package="DatabaseAdapters">
      <extends>\QDatabaseRowBase</extends>
      <name>QMySqliDatabaseRow</name>
      <full_name>\QMySqliDatabaseRow</full_name>
      <docblock line="552">
        <description/>
        <long-description/>
        <tag line="552" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="557" namespace="global" package="Default">
        <name>$strColumnArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="559" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="559">
          <name>$strColumnArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="563" package="DatabaseAdapters">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="563">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="563">
          <name>$strColumnType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="604" package="DatabaseAdapters">
        <name>ColumnExists</name>
        <full_name>ColumnExists</full_name>
        <argument line="604">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="608" package="DatabaseAdapters">
        <name>GetColumnNameArray</name>
        <full_name>GetColumnNameArray</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="617" package="DatabaseAdapters">
      <extends>\QDatabaseFieldBase</extends>
      <name>QMySqliDatabaseField</name>
      <full_name>\QMySqliDatabaseField</full_name>
      <docblock line="613">
        <description/>
        <long-description/>
        <tag line="613" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="618" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="618">
          <name>$mixFieldData</name>
          <default/>
          <type/>
        </argument>
        <argument line="618">
          <name>$objDb</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="671" package="DatabaseAdapters">
        <name>SetFieldType</name>
        <full_name>SetFieldType</full_name>
        <argument line="671">
          <name>$intMySqlFieldType</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="258">Current method doesn't support key names with commas or parenthesis in them!</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/database/QMySqliDatabase.class.php</error>
      <critical line="2" code="50005">No short description for class \QMySqliDatabase</critical>
      <error line="9" code="50018">No DocBlock was found for property $objMySqli</error>
      <error line="11" code="50018">No DocBlock was found for property $strEscapeIdentifierBegin</error>
      <error line="12" code="50018">No DocBlock was found for property $strEscapeIdentifierEnd</error>
      <error line="14" code="50010">No DocBlock was found for method SqlLimitVariablePrefix()</error>
      <error line="24" code="50010">No DocBlock was found for method SqlLimitVariableSuffix()</error>
      <error line="37" code="50010">No DocBlock was found for method SqlSortByVariable()</error>
      <error line="51" code="50010">No DocBlock was found for method InsertOrUpdate()</error>
      <error line="67" code="50010">No DocBlock was found for method Connect()</error>
      <error line="88" code="50010">No DocBlock was found for method __get()</error>
      <error line="102" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <error line="113" code="50010">No DocBlock was found for method ExecuteNonQuery()</error>
      <error line="120" code="50010">No DocBlock was found for method GetTables()</error>
      <error line="129" code="50010">No DocBlock was found for method GetFieldsForTable()</error>
      <error line="134" code="50010">No DocBlock was found for method InsertId()</error>
      <error line="138" code="50010">No DocBlock was found for method Close()</error>
      <error line="145" code="50010">No DocBlock was found for method ExecuteTransactionBegin()</error>
      <error line="150" code="50010">No DocBlock was found for method ExecuteTransactionCommit()</error>
      <error line="156" code="50010">No DocBlock was found for method ExecuteTransactionRollBack()</error>
      <error line="162" code="50010">No DocBlock was found for method GetFoundRows()</error>
      <error line="171" code="50010">No DocBlock was found for method GetIndexesForTable()</error>
      <error line="192" code="50010">No DocBlock was found for method GetForeignKeysForTable()</error>
      <error line="220" code="50010">No DocBlock was found for method ParseNameFromKeyDefinition()</error>
      <error line="243" code="50010">No DocBlock was found for method ParseColumnNameArrayFromKeyDefinition()</error>
      <error line="274" code="50010">No DocBlock was found for method ParseForIndexes()</error>
      <error line="324" code="50010">No DocBlock was found for method ParseForInnoDbForeignKeys()</error>
      <error line="378" code="50010">No DocBlock was found for method GetCreateStatementForTable()</error>
      <error line="387" code="50010">No DocBlock was found for method GetTableTypeForCreateStatement()</error>
      <error line="400" code="50012">No short description for method ExplainStatement()</error>
      <critical line="474" code="50005">No short description for class \QMySqliDatabaseException</critical>
      <error line="479" code="50010">No DocBlock was found for method __construct()</error>
      <critical line="486" code="50005">No short description for class \QMySqliDatabaseResult</critical>
      <error line="491" code="50018">No DocBlock was found for property $objMySqliResult</error>
      <error line="492" code="50018">No DocBlock was found for property $objDb</error>
      <error line="494" code="50010">No DocBlock was found for method __construct()</error>
      <error line="499" code="50010">No DocBlock was found for method FetchArray()</error>
      <error line="503" code="50010">No DocBlock was found for method FetchFields()</error>
      <error line="510" code="50010">No DocBlock was found for method FetchField()</error>
      <error line="515" code="50010">No DocBlock was found for method FetchRow()</error>
      <error line="519" code="50010">No DocBlock was found for method MySqlFetchField()</error>
      <error line="523" code="50010">No DocBlock was found for method CountRows()</error>
      <error line="527" code="50010">No DocBlock was found for method CountFields()</error>
      <error line="531" code="50010">No DocBlock was found for method Close()</error>
      <error line="535" code="50010">No DocBlock was found for method GetNextRow()</error>
      <error line="544" code="50010">No DocBlock was found for method GetRows()</error>
      <critical line="552" code="50005">No short description for class \QMySqliDatabaseRow</critical>
      <error line="557" code="50018">No DocBlock was found for property $strColumnArray</error>
      <error line="559" code="50010">No DocBlock was found for method __construct()</error>
      <error line="563" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="604" code="50010">No DocBlock was found for method ColumnExists()</error>
      <error line="608" code="50010">No DocBlock was found for method GetColumnNameArray()</error>
      <critical line="613" code="50005">No short description for class \QMySqliDatabaseField</critical>
      <error line="618" code="50010">No DocBlock was found for method __construct()</error>
      <error line="671" code="50010">No DocBlock was found for method SetFieldType()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/database/QMySqli5Database.class.php" hash="fe17251f7333b4b6de199a23c319f534" package="Default">
    <include line="4" type="Require" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="8" package="Default">
      <name>MYSQLI_TYPE_NEWDECIMAL</name>
      <full_name>\MYSQLI_TYPE_NEWDECIMAL</full_name>
      <value>246</value>
    </constant>
    <constant namespace="global" line="10" package="Default">
      <name>MYSQLI_TYPE_BIT</name>
      <full_name>\MYSQLI_TYPE_BIT</full_name>
      <value>16</value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="16" package="DatabaseAdapters">
      <extends>\QMySqliDatabase</extends>
      <name>QMySqli5Database</name>
      <full_name>\QMySqli5Database</full_name>
      <docblock line="12">
        <description/>
        <long-description/>
        <tag line="12" name="package" description="DatabaseAdapters"/>
      </docblock>
      <constant namespace="global" line="17" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'MySql Improved Database Adapter for MySQL 5'</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="DatabaseAdapters">
        <name>GetTables</name>
        <full_name>GetTables</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="43" package="DatabaseAdapters">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="43">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="DatabaseAdapters">
        <name>MultiQuery</name>
        <full_name>MultiQuery</full_name>
        <docblock line="54">
          <description>Performs a Multi Result-Set Query, which is available with Stored Procs in MySQL 5
Written by Mike Hostetler</description>
          <long-description/>
          <tag line="54" name="param" description="" type="string" variable="$strQuery">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="return" description="array of results" type="\QMySqli5DatabaseResult[]">
            <type by_reference="false">\QMySqli5DatabaseResult[]</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="85" package="DatabaseAdapters">
      <extends>\QMySqliDatabaseResult</extends>
      <name>QMySqli5DatabaseResult</name>
      <full_name>\QMySqli5DatabaseResult</full_name>
      <docblock line="81">
        <description/>
        <long-description/>
        <tag line="81" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="86" package="DatabaseAdapters">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="DatabaseAdapters">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="103" package="DatabaseAdapters">
      <extends>\QMySqliDatabaseField</extends>
      <name>QMySqli5DatabaseField</name>
      <full_name>\QMySqli5DatabaseField</full_name>
      <docblock line="99">
        <description/>
        <long-description/>
        <tag line="99" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="104" package="DatabaseAdapters">
        <name>SetFieldType</name>
        <full_name>SetFieldType</full_name>
        <argument line="104">
          <name>$intMySqlFieldType</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/database/QMySqli5Database.class.php</error>
      <critical line="12" code="50005">No short description for class \QMySqli5Database</critical>
      <error line="19" code="50010">No DocBlock was found for method GetTables()</error>
      <error line="43" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <critical line="81" code="50005">No short description for class \QMySqli5DatabaseResult</critical>
      <error line="86" code="50010">No DocBlock was found for method FetchFields()</error>
      <error line="93" code="50010">No DocBlock was found for method FetchField()</error>
      <critical line="99" code="50005">No short description for class \QMySqli5DatabaseField</critical>
      <error line="104" code="50010">No DocBlock was found for method SetFieldType()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/database/QMySqlDatabase.class.php" hash="427120403da6c934d75920df64dd643e" package="Default">
    <include line="4" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="10" package="DatabaseAdapters">
      <extends>\QMySqliDatabase</extends>
      <name>QMySqlDatabase</name>
      <full_name>\QMySqlDatabase</full_name>
      <docblock line="6">
        <description/>
        <long-description/>
        <tag line="6" name="package" description="DatabaseAdapters"/>
      </docblock>
      <constant namespace="global" line="11" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'MySql Legacy Database Adapter for MySQL 4'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="13" namespace="global" package="Default">
        <name>$objDb</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="15" package="DatabaseAdapters">
        <name>Connect</name>
        <full_name>Connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="DatabaseAdapters">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="50">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="64" package="DatabaseAdapters">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="64">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="75" package="DatabaseAdapters">
        <name>ExecuteNonQuery</name>
        <full_name>ExecuteNonQuery</full_name>
        <argument line="75">
          <name>$strNonQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="DatabaseAdapters">
        <name>InsertId</name>
        <full_name>InsertId</full_name>
        <argument line="82">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="82">
          <name>$strColumnName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="DatabaseAdapters">
        <name>GetFieldsForTable</name>
        <full_name>GetFieldsForTable</full_name>
        <argument line="96">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="102" package="Default">
      <extends>\QMySqliDatabaseResult</extends>
      <name>QMySqlDatabaseResult</name>
      <full_name>\QMySqlDatabaseResult</full_name>
      <property final="false" static="false" visibility="protected" line="103" namespace="global" package="Default">
        <name>$objMySqlResult</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="104" namespace="global" package="Default">
        <name>$objDb</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="106">
          <name>$objResult</name>
          <default/>
          <type/>
        </argument>
        <argument line="106">
          <name>$objDb</name>
          <default/>
          <type>\QMySqlDatabase</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="Default">
        <name>FetchArray</name>
        <full_name>FetchArray</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="115" package="Default">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Default">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="Default">
        <name>FetchRow</name>
        <full_name>FetchRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="Default">
        <name>MySqlFetchField</name>
        <full_name>MySqlFetchField</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="Default">
        <name>CountRows</name>
        <full_name>CountRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="Default">
        <name>CountFields</name>
        <full_name>CountFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="Default">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="153" package="DatabaseAdapters">
      <extends>\QMySqliDatabaseField</extends>
      <name>QMySqlDatabaseField</name>
      <full_name>\QMySqlDatabaseField</full_name>
      <docblock line="149">
        <description/>
        <long-description/>
        <tag line="149" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="154" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="154">
          <name>$mixFieldData</name>
          <default/>
          <type/>
        </argument>
        <argument line="154">
          <name>$objDb</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/database/QMySqlDatabase.class.php</error>
      <critical line="6" code="50005">No short description for class \QMySqlDatabase</critical>
      <error line="13" code="50018">No DocBlock was found for property $objDb</error>
      <error line="15" code="50010">No DocBlock was found for method Connect()</error>
      <error line="50" code="50010">No DocBlock was found for method __get()</error>
      <error line="64" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <error line="75" code="50010">No DocBlock was found for method ExecuteNonQuery()</error>
      <error line="82" code="50010">No DocBlock was found for method InsertId()</error>
      <error line="89" code="50010">No DocBlock was found for method Close()</error>
      <error line="96" code="50010">No DocBlock was found for method GetFieldsForTable()</error>
      <error line="102" code="50000">No DocBlock was found for \QMySqlDatabaseResult</error>
      <error line="103" code="50018">No DocBlock was found for property $objMySqlResult</error>
      <error line="104" code="50018">No DocBlock was found for property $objDb</error>
      <error line="106" code="50010">No DocBlock was found for method __construct()</error>
      <error line="111" code="50010">No DocBlock was found for method FetchArray()</error>
      <error line="115" code="50010">No DocBlock was found for method FetchFields()</error>
      <error line="123" code="50010">No DocBlock was found for method FetchField()</error>
      <error line="128" code="50010">No DocBlock was found for method FetchRow()</error>
      <error line="132" code="50010">No DocBlock was found for method MySqlFetchField()</error>
      <error line="136" code="50010">No DocBlock was found for method CountRows()</error>
      <error line="140" code="50010">No DocBlock was found for method CountFields()</error>
      <error line="144" code="50010">No DocBlock was found for method Close()</error>
      <critical line="149" code="50005">No short description for class \QMySqlDatabaseField</critical>
      <error line="154" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/database/QInformixPdoDatabase.class.php" hash="4f8f5db3c7b81f37d4a58a0a9db5bf94" package="Default">
    <docblock line="2">
      <description>EXPERIMENTAL Informix database driver, based on PDO.</description>
      <long-description>&lt;p&gt;04/18/2010 BG NonQuery new, because Query-String contans to much  "
04/18/2010 BG mostly working
04/16/2010 BG start to change&lt;/p&gt;

&lt;p&gt;Known bugs
04/18/2010 BG numbers / dates not working with german setting (DMY4.), only US/english with (DBDATA / DBMONEY)&lt;/p&gt;

&lt;p&gt;programming completly based on
- generic PDO adapter    (Marcos Sanchez)  --&gt; unchanged base
- PostgreSql PDO adapater (Marcos Sanchez)  --&gt; base of this file
- InformixSql adapter (PHP-ifx_xxx   functions ) Josue Balbuena --&gt; copied SQLs and some PHP-Lines&lt;/p&gt;

&lt;p&gt;the old Postgres-Code remains, but commented
the copies from the InformixSql is signed&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="66" package="DatabaseAdapters">
      <extends>\QPdoDatabase</extends>
      <name>QInformixPdoDatabase</name>
      <full_name>\QInformixPdoDatabase</full_name>
      <docblock line="53">
        <description>EXPERIMENTAL Informix database driver bases (via copy) on this work:</description>
        <long-description>&lt;p&gt;Copyright (C) 2009
Josue Balbuena - Ajusco Technology Developers, S.C. &lt;a href="&amp;#x6d;&amp;#97;&amp;#x69;&amp;#108;t&amp;#x6f;&amp;#58;&amp;#x6a;&amp;#111;&amp;#115;&amp;#x75;&amp;#101;&amp;#x2e;&amp;#98;&amp;#97;&amp;#x6c;&amp;#98;&amp;#x75;&amp;#x65;&amp;#110;&amp;#x61;&amp;#64;g&amp;#x6d;&amp;#97;&amp;#x69;&amp;#108;.&amp;#x63;&amp;#111;&amp;#x6d;"&gt;&amp;#x6a;&amp;#111;&amp;#115;&amp;#x75;&amp;#101;&amp;#x2e;&amp;#98;&amp;#97;&amp;#x6c;&amp;#98;&amp;#x75;&amp;#x65;&amp;#110;&amp;#x61;&amp;#64;g&amp;#x6d;&amp;#97;&amp;#x69;&amp;#108;.&amp;#x63;&amp;#111;&amp;#x6d;&lt;/a&gt;
This file is an update of the old IfxSqlDatabase.inc found @ qcodo.com&lt;/p&gt;

&lt;p&gt;Database Adapter for Informix SQL Server
Utilizes the Informix extension : ESQL/C is now part of the Informix Client SDK&lt;/p&gt;</long-description>
        <tag line="53" name="author" description="BG = Bernhard Gramberg [qcubed@gramberg.de]"/>
        <tag line="53" name="package" description="DatabaseAdapters"/>
      </docblock>
      <constant namespace="global" line="67" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'Informix PDO Database Adapter'</value>
      </constant>
      <constant namespace="global" line="68" package="DatabaseAdapters">
        <name>PDO_INFORMXIX_DSN_IDENTIFIER</name>
        <full_name>PDO_INFORMXIX_DSN_IDENTIFIER</full_name>
        <value>'informix'</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="DatabaseAdapters">
        <name>Connect</name>
        <full_name>Connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="DatabaseAdapters">
        <name>getInformixPdoDsn</name>
        <full_name>getInformixPdoDsn</full_name>
        <argument line="99">
          <name>$database</name>
          <default/>
          <type/>
        </argument>
        <argument line="99">
          <name>$host</name>
          <default/>
          <type/>
        </argument>
        <argument line="99">
          <name>$server</name>
          <default/>
          <type/>
        </argument>
        <argument line="99">
          <name>$service</name>
          <default/>
          <type/>
        </argument>
        <argument line="99">
          <name>$protocol</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="115" package="DatabaseAdapters">
        <name>SqlVariable</name>
        <full_name>SqlVariable</full_name>
        <argument line="115">
          <name>$mixData</name>
          <default/>
          <type/>
        </argument>
        <argument line="115">
          <name>$blnIncludeEquality</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="115">
          <name>$blnReverseEquality</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="190" package="DatabaseAdapters">
        <name>SqlLimitVariableSuffix</name>
        <full_name>SqlLimitVariableSuffix</full_name>
        <argument line="190">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="196" package="DatabaseAdapters">
        <name>SqlLimitVariablePrefix</name>
        <full_name>SqlLimitVariablePrefix</full_name>
        <argument line="196">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="DatabaseAdapters">
        <name>SqlSortByVariable</name>
        <full_name>SqlSortByVariable</full_name>
        <argument line="221">
          <name>$strSortByInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="235" package="DatabaseAdapters">
        <name>GetTables</name>
        <full_name>GetTables</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="254" package="DatabaseAdapters">
        <name>GetTableForId</name>
        <full_name>GetTableForId</full_name>
        <argument line="254">
          <name>$intTableId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="270" package="DatabaseAdapters">
        <name>GetFieldsForTable</name>
        <full_name>GetFieldsForTable</full_name>
        <argument line="270">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="312" package="DatabaseAdapters">
        <name>InsertId</name>
        <full_name>InsertId</full_name>
        <argument line="312">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="312">
          <name>$strColumnName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="326" package="DatabaseAdapters">
        <name>ParseColumnNameArrayFromKeyDefinition</name>
        <full_name>ParseColumnNameArrayFromKeyDefinition</full_name>
        <argument line="326">
          <name>$strKeyDefinition</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="358" package="DatabaseAdapters">
        <name>GetIndexesForTable</name>
        <full_name>GetIndexesForTable</full_name>
        <argument line="358">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="423" package="DatabaseAdapters">
        <name>GetColumnsForConstraint</name>
        <full_name>GetColumnsForConstraint</full_name>
        <argument line="423">
          <name>$intConstraintId</name>
          <default/>
          <type/>
        </argument>
        <argument line="423">
          <name>$intTableId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="452" package="DatabaseAdapters">
        <name>GetForeignKeysForTable</name>
        <full_name>GetForeignKeysForTable</full_name>
        <argument line="452">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="565" package="DatabaseAdapters">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="565">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="595" package="DatabaseAdapters">
        <name>ExecuteNonQuery</name>
        <full_name>ExecuteNonQuery</full_name>
        <argument line="595">
          <name>$strNonQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="605" package="DatabaseAdapters">
        <name>QueryStringToInformixSyntax</name>
        <full_name>QueryStringToInformixSyntax</full_name>
        <argument line="605">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="624" package="Default">
      <extends>\QPdoDatabaseResult</extends>
      <name>QInformixPdoDatabaseResult</name>
      <full_name>\QInformixPdoDatabaseResult</full_name>
      <docblock line="621">
        <description>QInformixPdoDatabaseResult</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="626" package="Default">
        <name>GetNextRow</name>
        <full_name>GetNextRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="635" package="Default">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="643" package="Default">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="652" package="Default">
      <extends>\QDatabaseRowBase</extends>
      <name>QInformixPdoDatabaseRow</name>
      <full_name>\QInformixPdoDatabaseRow</full_name>
      <docblock line="649">
        <description>QInformixPdoDatabaseRow</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="653" namespace="global" package="Default">
        <name>$strColumnArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="655" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="655">
          <name>$strColumnArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="659" package="Default">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="659">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="659">
          <name>$strColumnType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="696" package="Default">
        <name>ColumnExists</name>
        <full_name>ColumnExists</full_name>
        <argument line="696">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="700" package="Default">
        <name>GetColumnNameArray</name>
        <full_name>GetColumnNameArray</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="711" package="Default">
      <extends>\QDatabaseFieldBase</extends>
      <name>QInformixPdoDatabaseField</name>
      <full_name>\QInformixPdoDatabaseField</full_name>
      <docblock line="704">
        <description>QInformixPdoDatabaseField</description>
        <long-description>&lt;p&gt;BG complete copy from InformixSql&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="712" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="712">
          <name>$mixFieldData</name>
          <default/>
          <type/>
        </argument>
        <argument line="712">
          <name>$objDb</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="992" package="Default">
      <extends>\QPdoDatabaseException</extends>
      <name>QInformixPdoDatabaseException</name>
      <full_name>\QInformixPdoDatabaseException</full_name>
      <docblock line="989">
        <description>QInformixPdoDatabaseException</description>
        <long-description/>
      </docblock>
    </class>
    <markers>
      <todo line="342">Current method doesn't support key names with commas or parenthesis in them!</todo>
    </markers>
    <parse_markers>
      <error line="70" code="50010">No DocBlock was found for method Connect()</error>
      <error line="91" code="50010">No DocBlock was found for method Close()</error>
      <error line="99" code="50010">No DocBlock was found for method getInformixPdoDsn()</error>
      <error line="115" code="50010">No DocBlock was found for method SqlVariable()</error>
      <error line="190" code="50010">No DocBlock was found for method SqlLimitVariableSuffix()</error>
      <error line="196" code="50010">No DocBlock was found for method SqlLimitVariablePrefix()</error>
      <error line="221" code="50010">No DocBlock was found for method SqlSortByVariable()</error>
      <error line="235" code="50010">No DocBlock was found for method GetTables()</error>
      <error line="254" code="50010">No DocBlock was found for method GetTableForId()</error>
      <error line="270" code="50010">No DocBlock was found for method GetFieldsForTable()</error>
      <error line="312" code="50010">No DocBlock was found for method InsertId()</error>
      <error line="326" code="50010">No DocBlock was found for method ParseColumnNameArrayFromKeyDefinition()</error>
      <error line="358" code="50010">No DocBlock was found for method GetIndexesForTable()</error>
      <error line="423" code="50010">No DocBlock was found for method GetColumnsForConstraint()</error>
      <error line="452" code="50010">No DocBlock was found for method GetForeignKeysForTable()</error>
      <error line="565" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <error line="595" code="50010">No DocBlock was found for method ExecuteNonQuery()</error>
      <error line="605" code="50010">No DocBlock was found for method QueryStringToInformixSyntax()</error>
      <error line="626" code="50010">No DocBlock was found for method GetNextRow()</error>
      <error line="635" code="50010">No DocBlock was found for method FetchFields()</error>
      <error line="643" code="50010">No DocBlock was found for method FetchField()</error>
      <error line="653" code="50018">No DocBlock was found for property $strColumnArray</error>
      <error line="655" code="50010">No DocBlock was found for method __construct()</error>
      <error line="659" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="696" code="50010">No DocBlock was found for method ColumnExists()</error>
      <error line="700" code="50010">No DocBlock was found for method GetColumnNameArray()</error>
      <error line="712" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/database/QPostgreSqlDatabase.class.php" hash="ebea53c547cacdaf0bf42816435baf5c" package="Default">
    <class final="false" abstract="false" namespace="global" line="32" package="Default">
      <extends>\QDatabaseBase</extends>
      <name>QPostgreSqlDatabase</name>
      <full_name>\QPostgreSqlDatabase</full_name>
      <constant namespace="global" line="33" package="Default">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'PostgreSQL Database Adapter'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$objPgSql</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$objMostRecentResult</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$blnOnlyFullGroupBy</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Default">
        <name>SqlVariable</name>
        <full_name>SqlVariable</full_name>
        <argument line="39">
          <name>$mixData</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$blnIncludeEquality</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="39">
          <name>$blnReverseEquality</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="112" package="Default">
        <name>SqlLimitVariablePrefix</name>
        <full_name>SqlLimitVariablePrefix</full_name>
        <argument line="112">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Default">
        <name>SqlLimitVariableSuffix</name>
        <full_name>SqlLimitVariableSuffix</full_name>
        <argument line="118">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="Default">
        <name>SqlSortByVariable</name>
        <full_name>SqlSortByVariable</full_name>
        <argument line="142">
          <name>$strSortByInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="Default">
        <name>InsertOrUpdate</name>
        <full_name>InsertOrUpdate</full_name>
        <argument line="156">
          <name>$strTable</name>
          <default/>
          <type/>
        </argument>
        <argument line="156">
          <name>$mixColumnsAndValuesArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="156">
          <name>$strPKNames</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="Default">
        <name>Connect</name>
        <full_name>Connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="213">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="227" package="Default">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="227">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="239" package="Default">
        <name>ExecuteNonQuery</name>
        <full_name>ExecuteNonQuery</full_name>
        <argument line="239">
          <name>$strNonQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="247" package="Default">
        <name>GetTables</name>
        <full_name>GetTables</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="255" package="Default">
        <name>GetFieldsForTable</name>
        <full_name>GetFieldsForTable</full_name>
        <argument line="255">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="291" package="Default">
        <name>InsertId</name>
        <full_name>InsertId</full_name>
        <argument line="291">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="291">
          <name>$strColumnName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="301" package="Default">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="308" package="Default">
        <name>ExecuteTransactionBegin</name>
        <full_name>ExecuteTransactionBegin</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="312" package="Default">
        <name>ExecuteTransactionCommit</name>
        <full_name>ExecuteTransactionCommit</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="316" package="Default">
        <name>ExecuteTransactionRollBack</name>
        <full_name>ExecuteTransactionRollBack</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="320" package="Default">
        <name>ParseColumnNameArrayFromKeyDefinition</name>
        <full_name>ParseColumnNameArrayFromKeyDefinition</full_name>
        <argument line="320">
          <name>$strKeyDefinition</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="352" package="Default">
        <name>GetIndexesForTable</name>
        <full_name>GetIndexesForTable</full_name>
        <argument line="352">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="391" package="Default">
        <name>GetForeignKeysForTable</name>
        <full_name>GetForeignKeysForTable</full_name>
        <argument line="391">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="466" package="Default">
        <name>ExplainStatement</name>
        <full_name>ExplainStatement</full_name>
        <argument line="466">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="475" package="DatabaseAdapters">
      <extends>\QDatabaseExceptionBase</extends>
      <name>QPostgreSqlDatabaseException</name>
      <full_name>\QPostgreSqlDatabaseException</full_name>
      <docblock line="471">
        <description/>
        <long-description/>
        <tag line="471" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="476" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="476">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
        <argument line="476">
          <name>$intNumber</name>
          <default/>
          <type/>
        </argument>
        <argument line="476">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="487" package="DatabaseAdapters">
      <extends>\QDatabaseResultBase</extends>
      <name>QPostgreSqlDatabaseResult</name>
      <full_name>\QPostgreSqlDatabaseResult</full_name>
      <docblock line="483">
        <description/>
        <long-description/>
        <tag line="483" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="488" namespace="global" package="Default">
        <name>$objPgSqlResult</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="489" namespace="global" package="Default">
        <name>$objDb</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="491" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="491">
          <name>$objResult</name>
          <default/>
          <type/>
        </argument>
        <argument line="491">
          <name>$objDb</name>
          <default/>
          <type>\QPostgreSqlDatabase</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="496" package="DatabaseAdapters">
        <name>FetchArray</name>
        <full_name>FetchArray</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="500" package="DatabaseAdapters">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="504" package="DatabaseAdapters">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="508" package="DatabaseAdapters">
        <name>FetchRow</name>
        <full_name>FetchRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="512" package="DatabaseAdapters">
        <name>CountRows</name>
        <full_name>CountRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="516" package="DatabaseAdapters">
        <name>CountFields</name>
        <full_name>CountFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="520" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="524" package="DatabaseAdapters">
        <name>GetNextRow</name>
        <full_name>GetNextRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="533" package="DatabaseAdapters">
        <name>GetRows</name>
        <full_name>GetRows</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="545" package="DatabaseAdapters">
      <extends>\QDatabaseRowBase</extends>
      <name>QPostgreSqlDatabaseRow</name>
      <full_name>\QPostgreSqlDatabaseRow</full_name>
      <docblock line="541">
        <description/>
        <long-description/>
        <tag line="541" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="546" namespace="global" package="Default">
        <name>$strColumnArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="548" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="548">
          <name>$strColumnArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="552" package="DatabaseAdapters">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="552">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="552">
          <name>$strColumnType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="590" package="DatabaseAdapters">
        <name>ColumnExists</name>
        <full_name>ColumnExists</full_name>
        <argument line="590">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="594" package="DatabaseAdapters">
        <name>GetColumnNameArray</name>
        <full_name>GetColumnNameArray</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="603" package="DatabaseAdapters">
      <extends>\QDatabaseFieldBase</extends>
      <name>QPostgreSqlDatabaseField</name>
      <full_name>\QPostgreSqlDatabaseField</full_name>
      <docblock line="599">
        <description/>
        <long-description/>
        <tag line="599" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="604" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="604">
          <name>$mixFieldData</name>
          <default/>
          <type/>
        </argument>
        <argument line="604">
          <name>$objDb</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="336">Current method doesn't support key names with commas or parenthesis in them!</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/database/QPostgreSqlDatabase.class.php</error>
      <error line="32" code="50000">No DocBlock was found for \QPostgreSqlDatabase</error>
      <error line="35" code="50018">No DocBlock was found for property $objPgSql</error>
      <error line="36" code="50018">No DocBlock was found for property $objMostRecentResult</error>
      <error line="37" code="50018">No DocBlock was found for property $blnOnlyFullGroupBy</error>
      <error line="39" code="50010">No DocBlock was found for method SqlVariable()</error>
      <error line="112" code="50010">No DocBlock was found for method SqlLimitVariablePrefix()</error>
      <error line="118" code="50010">No DocBlock was found for method SqlLimitVariableSuffix()</error>
      <error line="142" code="50010">No DocBlock was found for method SqlSortByVariable()</error>
      <error line="156" code="50010">No DocBlock was found for method InsertOrUpdate()</error>
      <error line="195" code="50010">No DocBlock was found for method Connect()</error>
      <error line="213" code="50010">No DocBlock was found for method __get()</error>
      <error line="227" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <error line="239" code="50010">No DocBlock was found for method ExecuteNonQuery()</error>
      <error line="247" code="50010">No DocBlock was found for method GetTables()</error>
      <error line="255" code="50010">No DocBlock was found for method GetFieldsForTable()</error>
      <error line="291" code="50010">No DocBlock was found for method InsertId()</error>
      <error line="301" code="50010">No DocBlock was found for method Close()</error>
      <error line="308" code="50010">No DocBlock was found for method ExecuteTransactionBegin()</error>
      <error line="312" code="50010">No DocBlock was found for method ExecuteTransactionCommit()</error>
      <error line="316" code="50010">No DocBlock was found for method ExecuteTransactionRollBack()</error>
      <error line="320" code="50010">No DocBlock was found for method ParseColumnNameArrayFromKeyDefinition()</error>
      <error line="352" code="50010">No DocBlock was found for method GetIndexesForTable()</error>
      <error line="391" code="50010">No DocBlock was found for method GetForeignKeysForTable()</error>
      <error line="466" code="50010">No DocBlock was found for method ExplainStatement()</error>
      <critical line="471" code="50005">No short description for class \QPostgreSqlDatabaseException</critical>
      <error line="476" code="50010">No DocBlock was found for method __construct()</error>
      <critical line="483" code="50005">No short description for class \QPostgreSqlDatabaseResult</critical>
      <error line="488" code="50018">No DocBlock was found for property $objPgSqlResult</error>
      <error line="489" code="50018">No DocBlock was found for property $objDb</error>
      <error line="491" code="50010">No DocBlock was found for method __construct()</error>
      <error line="496" code="50010">No DocBlock was found for method FetchArray()</error>
      <error line="500" code="50010">No DocBlock was found for method FetchFields()</error>
      <error line="504" code="50010">No DocBlock was found for method FetchField()</error>
      <error line="508" code="50010">No DocBlock was found for method FetchRow()</error>
      <error line="512" code="50010">No DocBlock was found for method CountRows()</error>
      <error line="516" code="50010">No DocBlock was found for method CountFields()</error>
      <error line="520" code="50010">No DocBlock was found for method Close()</error>
      <error line="524" code="50010">No DocBlock was found for method GetNextRow()</error>
      <error line="533" code="50010">No DocBlock was found for method GetRows()</error>
      <critical line="541" code="50005">No short description for class \QPostgreSqlDatabaseRow</critical>
      <error line="546" code="50018">No DocBlock was found for property $strColumnArray</error>
      <error line="548" code="50010">No DocBlock was found for method __construct()</error>
      <error line="552" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="590" code="50010">No DocBlock was found for method ColumnExists()</error>
      <error line="594" code="50010">No DocBlock was found for method GetColumnNameArray()</error>
      <critical line="599" code="50005">No short description for class \QPostgreSqlDatabaseField</critical>
      <error line="604" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/database/QSqlServer2005Database.class.php" hash="08ad1a23fe0ecbd61d89aeab382bcb3d" package="DatabaseAdapters">
    <docblock line="2">
      <description>Database Adapter for Microsoft SQL Server 2005/2008
Utilizes the native Microsoft SQL Server extension php_sqlsrv.dll version 1.1 (win)
http://www.microsoft.com/sqlserver/2005/en/us/PHP-Driver.aspx</description>
      <long-description>&lt;p&gt;Requirements:
- Windows XP SP3/2003 SP1/Vista/2008/7 or later
- Microsoft SQL Server 2008 Native Client
- PHP 5.2.4 or later
- SQL Server Driver for PHP 1.1&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="DatabaseAdapters"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="58" package="DatabaseAdapters">
      <extends>\QDatabaseBase</extends>
      <name>QSqlServer2005Database</name>
      <full_name>\QSqlServer2005Database</full_name>
      <docblock line="16">
        <description>Database Adapter for Microsoft SQL Server 2005/2008</description>
        <long-description>&lt;p&gt;LimitInfo and Query utilizes an interal SQL tag QCODO_OFFSET&amp;lt;#&gt;, where # represents
the number of rows to offset for "Limit"-based queries.  The QCODO_OFFSET is added
internally by SqlLimitVariablePrefix(), and it is handled (and removed from the query)
by Query().  In error messages and DB profiling, the QCODO_OFFSET&amp;lt;#&gt; tag &lt;em&gt;WILL&lt;/em&gt; appear
(if applicable).  The framework will handle this gracefully, but obviously, if you try
and cut and paste SQL code that contains QCODO_OFFSET&amp;lt;#&gt; into QueryAnalyzer, the query
will fail, so just be aware of that.  If you want to do something like test queries
with QueryAnalyzer, just remember to manually remove any QCODO_OFFSET&amp;lt;#&gt; information.&lt;/p&gt;

&lt;p&gt;ENHANCEMENTS over MSSQL based-driver:
- varchar limit of 254 characters no longer exists, uses full varchar(8000)
- supports different date formats
- faster&lt;/p&gt;

&lt;p&gt;DATE VALUES:
If the date format of your database is different from the standard english format of
'YYYY-MM-DD hhhh:mm:ss' you have to declare it by setting the option 'dateformat'
in the database connection array in the configuration.inc.php.
For instance if your database wants german date settings you would set it to
'DD.MM.YYYY hhhh:mm:ss'.&lt;/p&gt;

&lt;p&gt;LIMITATIONS:
- GROUP BY
Using GROUP BY clause is broken because:
a) Current QQuery implementation is MySQL specific. Standard SQL wants every column
in the SELECT statement, that is not an aggregate statement, in the GROUP BY clause
and this behaviour is currently not supported. This limitation is valid too for the
MSSQL based adapter.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Datatypes currently not fully supported
sql_variant, varbinary(max), geometry, geography, hierarchyid, uniqueidentifier&lt;/li&gt;
&lt;/ul&gt;</long-description>
        <tag line="16" name="copyright" description="Copyright (C) 2009,2010 Andreas Krohn"/>
        <tag line="16" name="author" description="Andreas Krohn &lt;akrohn.pronet@googlemail.com&gt;, based on code by Mike Ho"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="16" name="package" description="DatabaseAdapters"/>
      </docblock>
      <constant namespace="global" line="59" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'Microsoft SQL Server 2005/2008 Database Adapter'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="61" namespace="global" package="Default">
        <name>$objSqlSrvConn</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="62" namespace="global" package="Default">
        <name>$objMostRecentStatement</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="global" package="Default">
        <name>$strEscapeIdentifierBegin</name>
        <default>'['</default>
      </property>
      <property final="false" static="false" visibility="protected" line="65" namespace="global" package="Default">
        <name>$strEscapeIdentifierEnd</name>
        <default>']'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="global" package="Default">
        <name>$blnOnlyFullGroupBy</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="69" namespace="global" package="Default">
        <name>$mixedOptionsArray</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="79" package="DatabaseAdapters">
        <name>GetErrorInformation</name>
        <full_name>GetErrorInformation</full_name>
        <docblock line="72">
          <description>Returns extended error information about the last sqlsrv operation performed</description>
          <long-description/>
          <tag line="72" name="param" description="strError Returns Errormessage By Reference" type="string" variable="$strError">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="param" description="strLastErrorCode Returns last ErrorCode By Reference" type="string" variable="$strLastErrorCode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="return" description="Errorinformation" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$strError</name>
          <default/>
          <type/>
        </argument>
        <argument line="79">
          <name>$strLastErrorCode</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="105" package="DatabaseAdapters">
        <name>SqlVariable</name>
        <full_name>SqlVariable</full_name>
        <docblock line="94">
          <description>Properly escapes $mixData to be used as a SQL query parameter.</description>
          <long-description>&lt;p&gt;If IncludeEquality is set (usually not), then include an equality operator.
So for most data, it would just be "=".  But, for example,
if $mixData is NULL, then most RDBMS's require the use of "IS".&lt;/p&gt;</long-description>
          <tag line="94" name="param" description="" type="mixed" variable="$mixData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="94" name="param" description="whether or not to include an equality operator" type="boolean" variable="$blnIncludeEquality">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="94" name="param" description="whether the included equality operator should be a &quot;NOT EQUAL&quot;, e.g. &quot;!=&quot;" type="boolean" variable="$blnReverseEquality">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="94" name="return" description="the properly formatted SQL variable" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$mixData</name>
          <default/>
          <type/>
        </argument>
        <argument line="105">
          <name>$blnIncludeEquality</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="105">
          <name>$blnReverseEquality</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="DatabaseAdapters">
        <name>SqlLimitVariablePrefix</name>
        <full_name>SqlLimitVariablePrefix</full_name>
        <argument line="175">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="204" package="DatabaseAdapters">
        <name>SqlLimitVariableSuffix</name>
        <full_name>SqlLimitVariableSuffix</full_name>
        <argument line="204">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="208" package="DatabaseAdapters">
        <name>SqlSortByVariable</name>
        <full_name>SqlSortByVariable</full_name>
        <argument line="208">
          <name>$strSortByInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="222" package="DatabaseAdapters">
        <name>Connect</name>
        <full_name>Connect</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="270" package="DatabaseAdapters">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="270">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="284" package="DatabaseAdapters">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="284">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="321" package="DatabaseAdapters">
        <name>ExecuteNonQuery</name>
        <full_name>ExecuteNonQuery</full_name>
        <argument line="321">
          <name>$strNonQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="334" package="DatabaseAdapters">
        <name>GetTables</name>
        <full_name>GetTables</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="351" package="DatabaseAdapters">
        <name>GetTableForId</name>
        <full_name>GetTableForId</full_name>
        <argument line="351">
          <name>$intTableId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="364" package="DatabaseAdapters">
        <name>GetFieldsForTable</name>
        <full_name>GetFieldsForTable</full_name>
        <argument line="364">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="392" package="DatabaseAdapters">
        <name>InsertId</name>
        <full_name>InsertId</full_name>
        <argument line="392">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="392">
          <name>$strColumnName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="399" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="409" package="DatabaseAdapters">
        <name>ExecuteTransactionBegin</name>
        <full_name>ExecuteTransactionBegin</full_name>
        <docblock line="406">
          <description>Begin transaction</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="420" package="DatabaseAdapters">
        <name>ExecuteTransactionCommit</name>
        <full_name>ExecuteTransactionCommit</full_name>
        <docblock line="417">
          <description>Commit transaction</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="431" package="DatabaseAdapters">
        <name>ExecuteTransactionRollBack</name>
        <full_name>ExecuteTransactionRollBack</full_name>
        <docblock line="428">
          <description>Rollback transaction</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="439" package="DatabaseAdapters">
        <name>GetIndexesForTable</name>
        <full_name>GetIndexesForTable</full_name>
        <argument line="439">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="458" package="DatabaseAdapters">
        <name>GetForeignKeysForTable</name>
        <full_name>GetForeignKeysForTable</full_name>
        <argument line="458">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="528" package="DatabaseAdapters">
      <extends>\QDatabaseExceptionBase</extends>
      <name>QSqlServer2005DatabaseException</name>
      <full_name>\QSqlServer2005DatabaseException</full_name>
      <docblock line="524">
        <description/>
        <long-description/>
        <tag line="524" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="529" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="529">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
        <argument line="529">
          <name>$intNumber</name>
          <default/>
          <type/>
        </argument>
        <argument line="529">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="540" package="DatabaseAdapters">
      <extends>\QDatabaseResultBase</extends>
      <name>QSqlServer2005DatabaseResult</name>
      <full_name>\QSqlServer2005DatabaseResult</full_name>
      <docblock line="536">
        <description/>
        <long-description/>
        <tag line="536" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="541" namespace="global" package="Default">
        <name>$objSqlSrvResult</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="542" namespace="global" package="Default">
        <name>$objDb</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="544" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="544">
          <name>$objResult</name>
          <default/>
          <type/>
        </argument>
        <argument line="544">
          <name>$objDb</name>
          <default/>
          <type>\QSqlServer2005Database</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="549" package="DatabaseAdapters">
        <name>FetchArray</name>
        <full_name>FetchArray</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="563" package="DatabaseAdapters">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
        <docblock line="559">
          <description>Function is never used</description>
          <long-description/>
          <tag line="559" name="todo" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="571" package="DatabaseAdapters">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
        <docblock line="567">
          <description>Function is never used</description>
          <long-description/>
          <tag line="567" name="todo" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="575" package="DatabaseAdapters">
        <name>FetchRow</name>
        <full_name>FetchRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="579" package="DatabaseAdapters">
        <name>CountRows</name>
        <full_name>CountRows</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="583" package="DatabaseAdapters">
        <name>CountFields</name>
        <full_name>CountFields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="587" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="591" package="DatabaseAdapters">
        <name>GetNextRow</name>
        <full_name>GetNextRow</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="600" package="DatabaseAdapters">
        <name>GetRows</name>
        <full_name>GetRows</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="612" package="DatabaseAdapters">
      <extends>\QDatabaseRowBase</extends>
      <name>QSqlServer2005DatabaseRow</name>
      <full_name>\QSqlServer2005DatabaseRow</full_name>
      <docblock line="608">
        <description/>
        <long-description/>
        <tag line="608" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="613" namespace="global" package="Default">
        <name>$strColumnArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="615" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="615">
          <name>$strColumnArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="619" package="DatabaseAdapters">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="619">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="619">
          <name>$strColumnType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="652" package="DatabaseAdapters">
        <name>ColumnExists</name>
        <full_name>ColumnExists</full_name>
        <argument line="652">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="656" package="DatabaseAdapters">
        <name>GetColumnNameArray</name>
        <full_name>GetColumnNameArray</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="665" package="DatabaseAdapters">
      <extends>\QDatabaseFieldBase</extends>
      <name>QSqlServer2005DatabaseField</name>
      <full_name>\QSqlServer2005DatabaseField</full_name>
      <docblock line="661">
        <description/>
        <long-description/>
        <tag line="661" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="666" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="666">
          <name>$mixFieldData</name>
          <default/>
          <type/>
        </argument>
        <argument line="666">
          <name>$objDb</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="61" code="50018">No DocBlock was found for property $objSqlSrvConn</error>
      <error line="62" code="50018">No DocBlock was found for property $objMostRecentStatement</error>
      <error line="64" code="50018">No DocBlock was found for property $strEscapeIdentifierBegin</error>
      <error line="65" code="50018">No DocBlock was found for property $strEscapeIdentifierEnd</error>
      <error line="66" code="50018">No DocBlock was found for property $blnOnlyFullGroupBy</error>
      <error line="69" code="50018">No DocBlock was found for property $mixedOptionsArray</error>
      <error line="175" code="50010">No DocBlock was found for method SqlLimitVariablePrefix()</error>
      <error line="204" code="50010">No DocBlock was found for method SqlLimitVariableSuffix()</error>
      <error line="208" code="50010">No DocBlock was found for method SqlSortByVariable()</error>
      <error line="222" code="50010">No DocBlock was found for method Connect()</error>
      <error line="270" code="50010">No DocBlock was found for method __get()</error>
      <error line="284" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <error line="321" code="50010">No DocBlock was found for method ExecuteNonQuery()</error>
      <error line="334" code="50010">No DocBlock was found for method GetTables()</error>
      <error line="351" code="50010">No DocBlock was found for method GetTableForId()</error>
      <error line="364" code="50010">No DocBlock was found for method GetFieldsForTable()</error>
      <error line="392" code="50010">No DocBlock was found for method InsertId()</error>
      <error line="399" code="50010">No DocBlock was found for method Close()</error>
      <error line="439" code="50010">No DocBlock was found for method GetIndexesForTable()</error>
      <error line="458" code="50010">No DocBlock was found for method GetForeignKeysForTable()</error>
      <critical line="524" code="50005">No short description for class \QSqlServer2005DatabaseException</critical>
      <error line="529" code="50010">No DocBlock was found for method __construct()</error>
      <critical line="536" code="50005">No short description for class \QSqlServer2005DatabaseResult</critical>
      <error line="541" code="50018">No DocBlock was found for property $objSqlSrvResult</error>
      <error line="542" code="50018">No DocBlock was found for property $objDb</error>
      <error line="544" code="50010">No DocBlock was found for method __construct()</error>
      <error line="549" code="50010">No DocBlock was found for method FetchArray()</error>
      <error line="575" code="50010">No DocBlock was found for method FetchRow()</error>
      <error line="579" code="50010">No DocBlock was found for method CountRows()</error>
      <error line="583" code="50010">No DocBlock was found for method CountFields()</error>
      <error line="587" code="50010">No DocBlock was found for method Close()</error>
      <error line="591" code="50010">No DocBlock was found for method GetNextRow()</error>
      <error line="600" code="50010">No DocBlock was found for method GetRows()</error>
      <critical line="608" code="50005">No short description for class \QSqlServer2005DatabaseRow</critical>
      <error line="613" code="50018">No DocBlock was found for property $strColumnArray</error>
      <error line="615" code="50010">No DocBlock was found for method __construct()</error>
      <error line="619" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="652" code="50010">No DocBlock was found for method ColumnExists()</error>
      <error line="656" code="50010">No DocBlock was found for method GetColumnNameArray()</error>
      <critical line="661" code="50005">No short description for class \QSqlServer2005DatabaseField</critical>
      <error line="666" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/tests/qcubed-unit/QTestControl.class.php" hash="8ff40acd8b1146001cf17632063d376a" package="Default">
    <class final="false" abstract="false" namespace="global" line="9" package="Default">
      <extends>\QControl</extends>
      <name>QTestControl</name>
      <full_name>\QTestControl</full_name>
      <property final="false" static="false" visibility="public" line="10" namespace="global" package="Default">
        <name>$savedValue1</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="public" line="11" namespace="global" package="Default">
        <name>$savedValue2</name>
        <default>0</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="13" package="Default">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Default">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>GetWrapperStyleAttributes</name>
        <full_name>GetWrapperStyleAttributes</full_name>
        <argument line="25">
          <name>$blnIsBlockElement</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/tests/qcubed-unit/QTestControl.class.php</error>
      <error line="9" code="50000">No DocBlock was found for \QTestControl</error>
      <error line="10" code="50018">No DocBlock was found for property $savedValue1</error>
      <error line="11" code="50018">No DocBlock was found for property $savedValue2</error>
      <error line="13" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="17" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="21" code="50010">No DocBlock was found for method Validate()</error>
      <error line="25" code="50010">No DocBlock was found for method GetWrapperStyleAttributes()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QActionControl.class.php" hash="1ec0a323a0014bb5845fba76798b471b" package="Controls">
    <docblock line="2">
      <description>This file contains the QActionControl</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="13" package="Default">
      <extends>\QControl</extends>
      <name>QActionControl</name>
      <full_name>\QActionControl</full_name>
      <docblock line="7">
        <description>Abstract class which is extended by things like Buttons.</description>
        <long-description>&lt;p&gt;It basically pre-sets CausesValidation to be true (b/c most of the time,
when a button is clicked we'd assume that we want the validation to kick off)
And it pre-defines ParsePostData and Validate.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
        <docblock line="21">
          <description>This function should contain the POST data parsing mechanism</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="27">
          <description>Checks whether the value submitted via POST for the control was valid or not
The code to test the validity will have to reside in this function</description>
          <long-description/>
          <tag line="27" name="return" description="Whether or not the validation succeeded" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="qcubed/_core/base_controls/QListControl.class.php" hash="a7c5e700e0e2bd911381fc6f2f9d6ded" package="Controls">
    <docblock line="2">
      <description>This file contains the QListControl class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="24" package="Controls">
      <extends>\QControl</extends>
      <name>QListControl</name>
      <full_name>\QListControl</full_name>
      <docblock line="8">
        <description>Abstract object which is extended by anything which involves lists of selectable items.</description>
        <long-description>&lt;p&gt;This object is the foundation for the ListBox, CheckBoxList, RadioButtonList
and TreeNav.&lt;/p&gt;</long-description>
        <tag line="8" name="property" description="the current count of ListItems in the control." type="integer" variable="$ItemCount">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="is the index number of the control that is selected. &quot;-1&quot; means that nothing is selected. If multiple items are selected, it will return the lowest index number of all ListItems that are currently selected. Set functionality: selects that specific ListItem and will unselect all other currently selected ListItems." type="integer" variable="$SelectedIndex">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="simply returns ListControl::SelectedItem-&gt;Name, or null if nothing is selected." type="string" variable="$SelectedName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-read" description="(readonly!) returns the ListItem object, itself, that is selected (or the ListItem with the lowest index number of a ListItems that are currently selected if multiple items are selected). It will return null if nothing is selected." type="\QListItem" variable="$SelectedItem">
          <type by_reference="false">\QListItem</type>
        </tag>
        <tag line="8" name="property-read" description="returns an array of selected ListItems (if any)." type="array" variable="$SelectedItems">
          <type by_reference="false">array</type>
        </tag>
        <tag line="8" name="property" description="simply returns ListControl::SelectedItem-&gt;Value, or null if nothing is selected." type="mixed" variable="$SelectedValue">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property" description="returns an array of all selected names" type="array" variable="$SelectedNames">
          <type by_reference="false">array</type>
        </tag>
        <tag line="8" name="property" description="returns an array of all selected values" type="array" variable="$SelectedValues">
          <type by_reference="false">array</type>
        </tag>
        <tag line="8" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$objItemsArray</name>
        <default>array()</default>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="access" description="protected"/>
          <tag line="29" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="Controls">
        <name>AddItem</name>
        <full_name>AddItem</full_name>
        <docblock line="40">
          <description>Add one ListItem to the ListControl</description>
          <long-description>&lt;p&gt;Allows you to add a ListItem to the ListItem array within the ListControl. Items are appended to
the array. This method exhibits polymorphism: you can either pass in a ListItem object or you
can pass in three strings.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; // Method 1: adding a created ListItem
 $objListItem = new QListItem($name, $value, $blnIsSelected);
 $lstList-&gt;AddItem($objListItem);

 // Method 2: adding a list item using direct strings
 $lstList-&gt;AddItem($name, $value, $blnIsSelected);

&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="40" name="see" description="\QListItem::__construct()" refers="\QListItem::__construct()"/>
          <tag line="40" name="param" description="QListItem or Name of the ListItem" type="mixed" variable="$mixListItemOrName">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="40" name="param" description="Value of the ListItem" type="string" variable="$strValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="param" description="set the html selected attribute for the ListItem" type="boolean" variable="$blnSelected">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="40" name="param" description="allows you to apply grouping (&lt;optgroup&gt; tag)" type="string" variable="$strItemGroup">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="param" description="OverrideParameters for ListItemStyle" type="string" variable="$strOverrideParameters">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$mixListItemOrName</name>
          <default/>
          <type/>
        </argument>
        <argument line="64">
          <name>$strValue</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="64">
          <name>$blnSelected</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="64">
          <name>$strItemGroup</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="64">
          <name>$strOverrideParameters</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="Controls">
        <name>AddItemAt</name>
        <full_name>AddItemAt</full_name>
        <docblock line="77">
          <description>Allows you to add a ListItem at a certain index
Unlike AddItem, this will insert the ListItem at whatever index is passed to the function.</description>
          <long-description>&lt;p&gt;Additionally,
only a ListItem object can be passed (as opposed to an object or strings)&lt;/p&gt;</long-description>
          <tag line="77" name="param" description="index at which the item should be inserted" type="integer" variable="$intIndex">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="77" name="param" description="the ListItem which shall be inserted" type="\QListItem" variable="$objListItem">
            <type by_reference="false">\QListItem</type>
          </tag>
          <tag line="77" name="throws" description="" type="\QIndexOutOfRangeException">
            <type by_reference="false">\QIndexOutOfRangeException</type>
          </tag>
          <tag line="77" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
        <argument line="88">
          <name>$objListItem</name>
          <default/>
          <type>\QListItem</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="Controls">
        <name>AddItems</name>
        <full_name>AddItems</full_name>
        <docblock line="106">
          <description>Adds an array of items, or an array of key=&gt;value pairs.</description>
          <long-description>&lt;p&gt;Convenient for adding a list from a type table.
When passing key=&gt;val pairs, mixSelectedValues can be an array, or just a single value to compare against to indicate what is selected.&lt;/p&gt;</long-description>
          <tag line="106" name="param" description="Array of QListItems or key=&gt;val pairs." type="array" variable="$mixItemArray">
            <type by_reference="false">array</type>
          </tag>
          <tag line="106" name="param" description="Array of selected values, or value of one selection" type="mixed" variable="$mixSelectedValues">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="106" name="param" description="allows you to apply grouping (&lt;optgroup&gt; tag)" type="string" variable="$strItemGroup">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="OverrideParameters for ListItemStyle" type="string" variable="$strOverrideParameters">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$mixItemArray</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="117">
          <name>$mixSelectedValues</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="117">
          <name>$strItemGroup</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="117">
          <name>$strOverrideParameters</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="Controls">
        <name>GetItem</name>
        <full_name>GetItem</full_name>
        <docblock line="140">
          <description>Retrieve the ListItem at the specified index location</description>
          <long-description/>
          <tag line="140" name="param" description="" type="integer" variable="$intIndex">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="140" name="throws" description="" type="\QIndexOutOfRangeException">
            <type by_reference="false">\QIndexOutOfRangeException</type>
          </tag>
          <tag line="140" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
          <tag line="140" name="return" description="" type="\QListItem">
            <type by_reference="false">\QListItem</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Controls">
        <name>GetAllItems</name>
        <full_name>GetAllItems</full_name>
        <docblock line="163">
          <description>This will return an array of ALL the QListItems associated with this QListControl.</description>
          <long-description>&lt;p&gt;Please note that while each individual item can be altered, altering the array, itself,
will not affect any change on the QListControl.  So existing QListItems may be modified,
but to add / remove items from the QListControl, you should use AddItem() and RemoveItem().&lt;/p&gt;</long-description>
          <tag line="163" name="return" description="" type="\QListItem[]">
            <type by_reference="false">\QListItem[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="177" package="Controls">
        <name>RemoveAllItems</name>
        <full_name>RemoveAllItems</full_name>
        <docblock line="174">
          <description>Removes all the items in objItemsArray</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="190" package="Controls">
        <name>RemoveItem</name>
        <full_name>RemoveItem</full_name>
        <docblock line="182">
          <description>Removes a ListItem at the specified index location</description>
          <long-description/>
          <tag line="182" name="param" description="" type="integer" variable="$intIndex">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="182" name="throws" description="" type="\QIndexOutOfRangeException">
            <type by_reference="false">\QIndexOutOfRangeException</type>
          </tag>
          <tag line="182" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="Controls">
        <name>ReplaceItem</name>
        <full_name>ReplaceItem</full_name>
        <docblock line="209">
          <description>Replaces a QListItem at $intIndex.</description>
          <long-description>&lt;p&gt;This combines the RemoveItem() and AddItemAt() operations.&lt;/p&gt;</long-description>
          <tag line="209" name="param" description="" type="integer" variable="$intIndex">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="209" name="param" description="" type="\QListItem" variable="$objListItem">
            <type by_reference="false">\QListItem</type>
          </tag>
          <tag line="209" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
        <argument line="217">
          <name>$objListItem</name>
          <default/>
          <type>\QListItem</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="231">
          <description>PHP __get magic method implementation</description>
          <long-description/>
          <tag line="231" name="param" description="Property Name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="return" description="" type="array|bool|int|mixed|null|\QControl|\QForm|string">
            <type by_reference="false">array</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="316" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="306">
          <description>PHP __set magic method implementation</description>
          <long-description/>
          <tag line="306" name="param" description="Property Name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="306" name="param" description="Propety Value" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="306" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="306" name="throws" description="" type="\QIndexOutOfRangeException">
            <type by_reference="false">\QIndexOutOfRangeException</type>
          </tag>
          <tag line="306" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="306" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="316">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="29" code="50019">No short description for property $objItemsArray</critical>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QControlLabel.class.php" hash="d517c3c80050b76d4e29fe6d0aab6f9e" package="Controls">
    <docblock line="2">
      <description>This file contains the QControlLabel class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="Controls">
      <extends>\QControl</extends>
      <name>QControlLabel</name>
      <full_name>\QControlLabel</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ForControlId">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-write" description="" type="mixed" variable="$ForControl">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="21" namespace="global" package="Default">
        <name>$strText</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strForControlId</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="30" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="49">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="68">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QControlLabel</critical>
      <error line="21" code="50018">No DocBlock was found for property $strText</error>
      <error line="24" code="50018">No DocBlock was found for property $strForControlId</error>
      <error line="29" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="30" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="44" code="50010">No DocBlock was found for method Validate()</error>
      <error line="49" code="50010">No DocBlock was found for method __get()</error>
      <error line="68" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QControlGrouping.class.php" hash="4803caccc059a3645d372472335043ae" package="Controls">
    <docblock line="2">
      <description>This file contains the QControlGrouping class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="14" package="Controls">
      <extends>\QBaseClass</extends>
      <name>QControlGrouping</name>
      <full_name>\QControlGrouping</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property-read" description="" type="string" variable="$GroupingId">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-read" description="" type="boolean" variable="$Modified">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$strGroupingId</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="16" namespace="global" package="Default">
        <name>$objControlArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="17" namespace="global" package="Default">
        <name>$blnModified</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="19">
          <name>$objForm</name>
          <default/>
          <type>\QForm</type>
        </argument>
        <argument line="19">
          <name>$strGroupingId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="40">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="Controls">
        <name>AddControl</name>
        <full_name>AddControl</full_name>
        <argument line="55">
          <name>$objControl</name>
          <default/>
          <type>\QControl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Controls">
        <name>RemoveControl</name>
        <full_name>RemoveControl</full_name>
        <argument line="61">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Controls">
        <name>GetAllControls</name>
        <full_name>GetAllControls</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="73" package="Controls">
        <name>Render</name>
        <full_name>Render</full_name>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QControlGrouping</critical>
      <error line="15" code="50018">No DocBlock was found for property $strGroupingId</error>
      <error line="16" code="50018">No DocBlock was found for property $objControlArray</error>
      <error line="17" code="50018">No DocBlock was found for property $blnModified</error>
      <error line="19" code="50010">No DocBlock was found for method __construct()</error>
      <error line="40" code="50010">No DocBlock was found for method __get()</error>
      <error line="55" code="50010">No DocBlock was found for method AddControl()</error>
      <error line="61" code="50010">No DocBlock was found for method RemoveControl()</error>
      <error line="69" code="50010">No DocBlock was found for method GetAllControls()</error>
      <error line="73" code="50010">No DocBlock was found for method Render()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QIntegerTextBox.class.php" hash="1b1eeb0c187d9ec8adb57ac44e9c8965" package="Controls">
    <docblock line="2">
      <description>This file contains the QIntegerTextBox class</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Controls">
      <extends>\QNumericTextBox</extends>
      <name>QIntegerTextBox</name>
      <full_name>\QIntegerTextBox</full_name>
      <docblock line="8">
        <description>A subclass of TextBox with its validate method overridden -- Validate will also ensure
that the Text is a valid integer and (if applicable) is in the range of Minimum &lt;= x &lt;= Maximum</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description>Constructor</description>
          <long-description/>
          <tag line="20" name="param" description="" type="\QControl|\QForm" variable="$objParentObject">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
          </tag>
          <tag line="20" name="param" description="" type="null|string" variable="$strControlId">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="qcubed/_core/base_controls/QFileAssetBase.class.php" hash="a90e056687994ea6ebaef0576e567411" package="Controls">
    <docblock line="2">
      <description>This file contains the QFileAssetBase class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="Controls">
      <extends>\QPanel</extends>
      <name>QFileAssetBase</name>
      <full_name>\QFileAssetBase</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="string" variable="$File">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$FileName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$Size">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property-read" description="" type="string" variable="$RandomFileName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$UnacceptableMessage">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$FileAssetType">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$TemporaryUploadPath">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$ClickToView">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$DialogBoxCssClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$DialogBoxWidth">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$DialogBoxHeight">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$UploadText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$CancelText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$DialogBoxHtml">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$imgFileIcon</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$btnDelete</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$btnUpload</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$dlgFileAsset</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$strAcceptibleMimeArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$strUnacceptableMessage</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$intFileAssetType</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$strFile</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$strFileName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$intSize</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$strRandomFileName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$blnClickToView</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="global" package="Default">
        <name>$strIconFilePathArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$strTemporaryUploadPath</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="45">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="75" package="Controls">
        <name>SetupUpdateActions</name>
        <full_name>SetupUpdateActions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="81" package="Controls">
        <name>SetupIconFilePathArray</name>
        <full_name>SetupIconFilePathArray</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Controls">
        <name>dlgFileAsset_Upload</name>
        <full_name>dlgFileAsset_Upload</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="160" package="Controls">
        <name>btnDelete_Click</name>
        <full_name>btnDelete_Click</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="166" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="166">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="Controls">
        <name>GetWebUrl</name>
        <full_name>GetWebUrl</full_name>
        <docblock line="195">
          <description>If the Selected File is WebRoot Accessible, return a valid URL
Feel free to override this method.</description>
          <long-description/>
          <tag line="195" name="return" description="Web-based URL to the File (for Downloading)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="229" package="Controls">
        <name>SetFile</name>
        <full_name>SetFile</full_name>
        <argument line="229">
          <name>$strFile</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="263" package="Controls">
        <name>SetFileAssetType</name>
        <full_name>SetFileAssetType</full_name>
        <argument line="263">
          <name>$intFileAssetType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="305" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="305">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="305">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QFileAssetBase</critical>
      <error line="27" code="50018">No DocBlock was found for property $imgFileIcon</error>
      <error line="28" code="50018">No DocBlock was found for property $btnDelete</error>
      <error line="29" code="50018">No DocBlock was found for property $btnUpload</error>
      <error line="30" code="50018">No DocBlock was found for property $dlgFileAsset</error>
      <error line="32" code="50018">No DocBlock was found for property $strAcceptibleMimeArray</error>
      <error line="33" code="50018">No DocBlock was found for property $strUnacceptableMessage</error>
      <error line="34" code="50018">No DocBlock was found for property $intFileAssetType</error>
      <error line="35" code="50018">No DocBlock was found for property $strFile</error>
      <error line="36" code="50018">No DocBlock was found for property $strFileName</error>
      <error line="37" code="50018">No DocBlock was found for property $intSize</error>
      <error line="38" code="50018">No DocBlock was found for property $strRandomFileName</error>
      <error line="39" code="50018">No DocBlock was found for property $blnClickToView</error>
      <error line="41" code="50018">No DocBlock was found for property $strIconFilePathArray</error>
      <error line="43" code="50018">No DocBlock was found for property $strTemporaryUploadPath</error>
      <error line="45" code="50010">No DocBlock was found for method __construct()</error>
      <error line="75" code="50010">No DocBlock was found for method SetupUpdateActions()</error>
      <error line="81" code="50010">No DocBlock was found for method SetupIconFilePathArray()</error>
      <error line="87" code="50010">No DocBlock was found for method Validate()</error>
      <error line="103" code="50010">No DocBlock was found for method dlgFileAsset_Upload()</error>
      <error line="149" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="160" code="50010">No DocBlock was found for method btnDelete_Click()</error>
      <error line="166" code="50010">No DocBlock was found for method __get()</error>
      <error line="229" code="50010">No DocBlock was found for method SetFile()</error>
      <error line="263" code="50010">No DocBlock was found for method SetFileAssetType()</error>
      <error line="305" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QAccordionGen.class.php" hash="d640a2fb3f657c530f85de75d2906c00" package="Default">
    <docblock line="2">
      <description>QAccordionGen File</description>
      <long-description>&lt;p&gt;The abstract QAccordionGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QAccordionBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QAccordion class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="44" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAccordion_ActivateEvent</name>
      <full_name>\QAccordion_ActivateEvent</full_name>
      <docblock line="30">
        <description>Triggered after a panel has been activated (after animation completes).</description>
        <long-description>&lt;p&gt;If
        the accordion was previously collapsed,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.oldHeader&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.oldPanel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be empty jQuery objects. If the accordion is
        collapsing,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.newHeader&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.newPanel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be
        empty jQuery objects.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt;
        &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;ul&gt;&lt;li&gt;&lt;strong&gt;newHeader&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The header that was
        just activated.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;oldHeader&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The
        header that was just deactivated.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;newPanel&lt;/strong&gt; Type:
        &lt;a&gt;jQuery&lt;/a&gt; The panel that was just activated.&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;oldPanel&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The panel that was just
        deactivated.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="45" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'accordionactivate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="62" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAccordion_BeforeActivateEvent</name>
      <full_name>\QAccordion_BeforeActivateEvent</full_name>
      <docblock line="47">
        <description>Triggered directly before a panel is activated.</description>
        <long-description>&lt;p&gt;Can be canceled to prevent
        the panel from activating. If the accordion is currently collapsed,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.oldHeader&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.oldPanel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be empty jQuery
        objects. If the accordion is collapsing,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.newHeader&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.newPanel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be empty jQuery
        objects.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;ul&gt;&lt;li&gt;&lt;strong&gt;newHeader&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The header that is
        about to be activated.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;oldHeader&lt;/strong&gt; Type:
        &lt;a&gt;jQuery&lt;/a&gt; The header that is about to be deactivated.&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;newPanel&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The panel that is about
        to be activated.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;oldPanel&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The
        panel that is about to be deactivated.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="63" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'accordionbeforeactivate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="74" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAccordion_CreateEvent</name>
      <full_name>\QAccordion_CreateEvent</full_name>
      <docblock line="65">
        <description>Triggered when the accordion is created.</description>
        <long-description>&lt;p&gt;If the accordion is collapsed,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.header&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.panel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be empty jQuery
        objects.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;ul&gt;&lt;li&gt;&lt;strong&gt;header&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The active header.&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;panel&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The active
        panel.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="75" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'accordioncreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="129" package="Controls\Base">
      <extends>\QPanel</extends>
      <name>QAccordionGen</name>
      <full_name>\QAccordionGen</full_name>
      <docblock line="80">
        <description>Generated QAccordionGen class.</description>
        <long-description>&lt;p&gt;This is the QAccordionGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QAccordionBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="80" name="see" description="\global\QAccordionBase" refers="\global\QAccordionBase"/>
        <tag line="80" name="package" description="Controls\Base"/>
        <tag line="80" name="property" description="Which panel is currently open.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: Setting&#10;&#9;&#9;&lt;code&gt;active&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will collapse all panels. This&#10;&#9;&#9;requires the &lt;a&gt;&lt;code&gt;collapsible&lt;/code&gt;&lt;/a&gt; option to be&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Integer&lt;/strong&gt;: The zero-based index&#10;&#9;&#9;of the panel that is active (open). A negative value selects panels going&#10;&#9;&#9;backward from the last panel.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Active">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="80" name="property" description="If and how to animate changing panels.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: A value of&#10;&#9;&#9;&lt;code&gt;false&lt;/code&gt; will disable animations.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: Duration in milliseconds with default&#10;&#9;&#9;easing.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: Name of &lt;a&gt;easing&lt;/a&gt; to use with&#10;&#9;&#9;default duration.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;: Animation settings with&#10;&#9;&#9;&lt;code&gt;easing&lt;/code&gt; and &lt;code&gt;duration&lt;/code&gt; properties. &#9;&#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;Can&#10;&#9;&#9;also contain a &lt;code&gt;down&lt;/code&gt; property with any of the above&#10;&#9;&#9;options.&lt;/li&gt; &#9;&#9;&#9;&#9;&#9;&#9;&lt;li&gt;&quot;Down&quot; animations occur when the panel being&#10;&#9;&#9;activated has a lower index than the currently active&#10;&#9;&#9;panel.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Animate">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="80" name="property" description="Whether all the sections can be closed at once. Allows collapsing the&#10;&#9;&#9;active section." type="boolean" variable="$Collapsible">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="80" name="property" description="Disables the accordion if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="80" name="property" description="The event that accordion headers will react to in order to activate the&#10;&#9;&#9;associated panel. Multiple events can be specificed, separated by a space." type="string" variable="$Event">
          <type by_reference="false">string</type>
        </tag>
        <tag line="80" name="property" description="&lt;p&gt;Selector for the header element, applied via &lt;code&gt;.find()&lt;/code&gt; on the&#10;&#9;&#9;main accordion element. Content panels must be the sibling immedately after&#10;&#9;&#9;their associated headers.&lt;/p&gt;" type="mixed" variable="$Header">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="80" name="property" description="&lt;p&gt;Controls the height of the accordion and each panel. Possible&#10;&#9;&#9;values:&lt;/p&gt; &#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;&lt;code&gt;&quot;auto&quot;&lt;/code&gt;: All panels will be set to the&#10;&#9;&#9;height of the tallest panel.&lt;/li&gt; &#9;&#9;&#9;&#9;&#9;&lt;li&gt;&lt;code&gt;&quot;fill&quot;&lt;/code&gt;: Expand to&#10;&#9;&#9;the available height based on the accordion's parent height.&lt;/li&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;li&gt;&lt;code&gt;&quot;content&quot;&lt;/code&gt;: Each panel will be only as tall as its&#10;&#9;&#9;content.&lt;/li&gt;&lt;/ul&gt;" type="string" variable="$HeightStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="80" name="property" description="&lt;p&gt;Icons to use for headers, matching an icon defined by the jQuery UI CSS&#10;&#9;&#9;Framework. Set to &lt;code&gt;false&lt;/code&gt; to have no icons displayed.&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;header (string, default: &quot;ui-icon-triangle-1-e&quot;)&lt;/li&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;li&gt;activeHeader (string, default: &quot;ui-icon-triangle-1-s&quot;)&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Icons">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="130" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="131" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="133" namespace="global" package="Default">
        <name>$mixActive</name>
        <default/>
        <docblock line="132">
          <description/>
          <long-description/>
          <tag line="132" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="135" namespace="global" package="Default">
        <name>$mixAnimate</name>
        <default>null</default>
        <docblock line="134">
          <description/>
          <long-description/>
          <tag line="134" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="137" namespace="global" package="Default">
        <name>$blnCollapsible</name>
        <default>null</default>
        <docblock line="136">
          <description/>
          <long-description/>
          <tag line="136" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="139" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="138">
          <description/>
          <long-description/>
          <tag line="138" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="141" namespace="global" package="Default">
        <name>$strEvent</name>
        <default>null</default>
        <docblock line="140">
          <description/>
          <long-description/>
          <tag line="140" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="143" namespace="global" package="Default">
        <name>$mixHeader</name>
        <default>null</default>
        <docblock line="142">
          <description/>
          <long-description/>
          <tag line="142" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="145" namespace="global" package="Default">
        <name>$strHeightStyle</name>
        <default>null</default>
        <docblock line="144">
          <description/>
          <long-description/>
          <tag line="144" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="147" namespace="global" package="Default">
        <name>$mixIcons</name>
        <default>null</default>
        <docblock line="146">
          <description/>
          <long-description/>
          <tag line="146" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="149" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="149">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="149">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="158" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="172" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="180" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
        <docblock line="176">
          <description>Returns the Javascript needed as the part of control's behavior</description>
          <long-description/>
          <tag line="176" name="return" description="The control's JS" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
        <docblock line="184">
          <description>Returns the finalized Javascript needed as the part of control's behavior</description>
          <long-description/>
          <tag line="184" name="return" description="The control's JS" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="208" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="199">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="199" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="199" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="199" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="208">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="225" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="220">
          <description>Removes the accordion functionality completely.</description>
          <long-description>&lt;p&gt;This will return the
element back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="228">
          <description>Disables the accordion.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="239" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="235">
          <description>Enables the accordion.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="248" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="242">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="242" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="248">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="256" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="251">
          <description>Gets an object containing key/value pairs representing the current
accordion options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="268" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="259">
          <description>Sets the value of the accordion option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="259" name="param" description="" type="\" variable="$optionName"/>
          <tag line="259" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="268">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="268">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="276" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="271">
          <description>Sets one or more options for the accordion.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="271" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="276">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="284" package="Controls\Base">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="279">
          <description>Recompute the height of the accordion panels.</description>
          <long-description>&lt;p&gt;Results depend on the content
and the &lt;a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heightStyle&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/a&gt; option.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not
accept any arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="289">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="309" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="309">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="309">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="130" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="131" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="132" code="50019">No short description for property $mixActive</critical>
      <critical line="134" code="50019">No short description for property $mixAnimate</critical>
      <critical line="136" code="50019">No short description for property $blnCollapsible</critical>
      <critical line="138" code="50019">No short description for property $blnDisabled</critical>
      <critical line="140" code="50019">No short description for property $strEvent</critical>
      <critical line="142" code="50019">No short description for property $mixHeader</critical>
      <critical line="144" code="50019">No short description for property $strHeightStyle</critical>
      <critical line="146" code="50019">No short description for property $mixIcons</critical>
      <error line="149" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="158" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="172" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="289" code="50010">No DocBlock was found for method __get()</error>
      <error line="309" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QJqCheckBoxBase.class.php" hash="cb874b87c827e8a8b5a5eb05ffe7aed7" package="Default">
    <docblock line="2">
      <description>JqButtonCheckBox Base File</description>
      <long-description>&lt;p&gt;The  QJqCheckBoxBase class defined here provides an interface between the generated
QJqCheckBoxGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QJqCheckBox.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="30" package="Controls\Base">
      <extends>\QJqCheckBoxGen</extends>
      <name>QJqCheckBoxBase</name>
      <full_name>\QJqCheckBoxBase</full_name>
      <docblock line="11">
        <description>Implements a JQuery Ui Check Box</description>
        <long-description>&lt;p&gt;Use this as if you were creating a standard check box.&lt;/p&gt;

&lt;p&gt;One of the QJqCheckBoxGen properties use the same names as standard QCubed properties.
The text property is a boolean in the JqUi object that specifies whether
to show text or just icons (provided icons are defined), and the Label property overrides
the standard HTML of the button. Because of the name conflict, the JQ UI property is called
-&gt;JqText. You can also use ShowText as an alias to this as well so that your code is more readable.
    Text = standard html text of button
 Label = override of standard HTML text, if you want a button to say something different when JS is on or off
 ShowText = whether or not to hide the text of the button when icons are set&lt;/p&gt;</long-description>
        <tag line="11" name="property" description="Causes text to be shown when icons are also defined." type="boolean" variable="$ShowText">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="11" name="link" description="http://jqueryui.com/button/#checkbox" link="http://jqueryui.com/button/#checkbox"/>
        <tag line="11" name="package" description="Controls\Base"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="32">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="45">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="32" code="50010">No DocBlock was found for method __get()</error>
      <error line="45" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QSortableBase.class.php" hash="00172633a7ff568fedf81724955459b9" package="Default">
    <docblock line="2">
      <description>Sortable Base File</description>
      <long-description>&lt;p&gt;The QSortableBase class defined here provides an interface between the generated
QSortableGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QSortable.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="24" package="Controls\Base">
      <extends>\QSortableGen</extends>
      <name>QSortableBase</name>
      <full_name>\QSortableBase</full_name>
      <docblock line="11">
        <description>Impelements a JQuery UI Sortable</description>
        <long-description>&lt;p&gt;Sortable is a group of panels that can be dragged to reorder them. You will need to put
some care into the css styling of the objects so that the css allows them to be moved. It
will use the top level html objects inside the panel to decide what to sort. Make sure
they have ids so it can return the ids of the items in sort order.&lt;/p&gt;</long-description>
        <tag line="11" name="property-read" description="List of ControlIds in sort order." type="Array" variable="$ItemArray">
          <type by_reference="false">Array</type>
        </tag>
        <tag line="11" name="link" description="http://jqueryui.com/sortable/" link="http://jqueryui.com/sortable/"/>
        <tag line="11" name="package" description="Controls\Base"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$aryItemArray</name>
        <default>null</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="61">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="61">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="86" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="86">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="25" code="50019">No short description for property $aryItemArray</critical>
      <error line="30" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="46" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="61" code="50010">No DocBlock was found for method __set()</error>
      <error line="86" code="50010">No DocBlock was found for method __get()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDropZoneGrouping.class.php" hash="b25230c4eb0f01e97360a1494199cefe" package="Default">
    <class final="false" abstract="false" namespace="global" line="8" package="Controls">
      <extends>\QControlGrouping</extends>
      <name>QDropZoneGrouping</name>
      <full_name>\QDropZoneGrouping</full_name>
      <docblock line="2">
        <description>This file contains the QDropZoneGrouping class.</description>
        <long-description/>
        <tag line="2" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="9" namespace="global" package="Default">
        <name>$blnAllowSelf</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="10" namespace="global" package="Default">
        <name>$blnAllowSelfParent</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="12">
          <name>$objForm</name>
          <default/>
          <type>\QForm</type>
        </argument>
        <argument line="12">
          <name>$strGroupingId</name>
          <default/>
          <type/>
        </argument>
        <argument line="12">
          <name>$blnAllowSelfParent</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="12">
          <name>$blnAllowSelf</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="Controls">
        <name>Render</name>
        <full_name>Render</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/base_controls/QDropZoneGrouping.class.php</error>
      <error line="9" code="50018">No DocBlock was found for property $blnAllowSelf</error>
      <error line="10" code="50018">No DocBlock was found for property $blnAllowSelfParent</error>
      <error line="12" code="50010">No DocBlock was found for method __construct()</error>
      <error line="19" code="50010">No DocBlock was found for method Render()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QJqRadioButtonBase.class.php" hash="5320f5ac09805e34e879b7351aef733f" package="Default">
    <docblock line="2">
      <description>QRadioButton Base File</description>
      <long-description>&lt;p&gt;The QJqRadioButtonBase class defined here provides an interface between the generated
QJqRadioButtonGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QJqRadioButton.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="32" package="Default">
      <extends>\QJqRadioButtonGen</extends>
      <name>QJqRadioButtonBase</name>
      <full_name>\QJqRadioButtonBase</full_name>
      <docblock line="11">
        <description>Implements a JQuery UI Radio Button</description>
        <long-description>&lt;p&gt;Use in the same way you would use a standard radio button&lt;/p&gt;

&lt;p&gt;One of the QJqRadioButtonGen properties use the same names as standard QCubed properties.
The text property is a boolean in the JqUi object that specifies whether
to show text or just icons (provided icons are defined), and the Label property overrides
the standard HTML of the button. Because of the name conflict, the JQ UI property is called
-&gt;JqText. You can also use ShowText as an alias to this as well so that your code is more readable.
    Text = standard html text of button
 Label = override of standard HTML text, if you want a button to say something different when JS is on or off
 ShowText = whether or not to hide the text of the button when icons are set&lt;/p&gt;</long-description>
        <tag line="11" name="property" description="Causes text to be shown when icons are also defined.&#10; @link http://jqueryui.com/button/#radio&#10; @package Controls\Base" type="boolean" variable="$ShowText">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="34">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="48">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="48">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="34" code="50010">No DocBlock was found for method __get()</error>
      <error line="48" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QControlBase.class.php" hash="a22cefd9cf063bdc7f3d222e5d4f5a5a" package="Default">
    <class final="false" abstract="true" namespace="global" line="74" package="Controls">
      <extends>\QBaseClass</extends>
      <name>QControlBase</name>
      <full_name>\QControlBase</full_name>
      <docblock line="2">
        <description>QControlBase is the base class of all QControls and shares their common properties</description>
        <long-description>&lt;p&gt;Please note that not every control will utilize every single one of these properties.
Keep in mind that Controls that are not Enabled or not Visible will not go through the form's
Validation routine.
All Controls must implement the following abstract functions:&lt;/p&gt;

&lt;ul&gt;
        &lt;li&gt;{@link QControlBase::GetControlHtml()}&lt;/li&gt;
        &lt;li&gt;{@link QControlBase::ParsePostData()}&lt;/li&gt;
        &lt;li&gt;{@link QControlBase::Validate()}&lt;/li&gt;
&lt;/ul&gt;</long-description>
        <tag line="2" name="package" description="Controls"/>
        <tag line="2" name="property" description="allows you to specify what Alt-Letter combination will automatically focus that control on the form" type="string" variable="$AccessKey">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="Prevent the default action from happenning upon an event trigger. See documentation for &quot;protected $blnActionsMustTerminate&quot; below." type="boolean" variable="$ActionsMustTerminate">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="This property allows you to pass your own parameters to the handlers for actions applied to this control.&#10;&#9;&#9; this can be a string or an object of type QJsClosure. If you pass in a QJsClosure it is possible to return javascript objects/arrays&#10;&#9;&#9; when using an ajax or server action." type="mixed" variable="$ActionParameter">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="2" name="property" description="sets the CSS background-color of the control" type="string" variable="$BackColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="sets the CSS border-color of the control" type="string" variable="$BorderColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="sets the CSS border-width of the control" type="string" variable="$BorderWidth">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="is used to set CSS border-style by {@link QBorderStyle}" type="string" variable="$BorderStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="flag says whether or not the form should run through its validation routine if this control has an action defined and is acted upon" type="mixed" variable="$CausesValidation">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="2" name="property-read" description="returns the id of this control" type="string" variable="$ControlId">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="sets or returns the CSS class for this control" type="string" variable="$CssClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="is used to set CSS cursor property by {@link QCursor}" type="string" variable="$Cursor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="shows or hides the control using the CSS display property.  In either case, the control is still rendered on the page. See the Visible property if you wish to not render a control." type="boolean" variable="$Display">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="is used to set CSS display property by {@link QDisplayStyle}" type="string" variable="$DisplayStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="specifies whether or not this is enabled (it will grey out the control and make it inoperable if set to true)" type="boolean" variable="$Enabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="sets the font bold or normal" type="boolean" variable="$FontBold">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="sets the Font italic or normal" type="boolean" variable="$FontItalic">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="sets the name of used fonts" type="string" variable="$FontNames">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="" type="boolean" variable="$FontOverline">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="sets the font-size of the control" type="string" variable="$FontSize">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="" type="boolean" variable="$FontStrikeout">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="sets the font underlined" type="boolean" variable="$FontUnderline">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="sets the forecolor of the control (like fontcolor)" type="string" variable="$ForeColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="returns the parent form object" type="\QForm" variable="$Form">
          <type by_reference="false">\QForm</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$FormAttributes">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="" type="string" variable="$Height">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="HTML that is shown after the control {@link QControl::RenderWithName}" type="string" variable="$HtmlAfter">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="HTML that is shown before the control {@link QControl::RenderWithName}" type="string" variable="$HtmlBefore">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="instructions that is shown next to the control's name label {@link QControl::RenderWithName}" type="string" variable="$Instructions">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$JavaScripts">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="CSS left property" type="string" variable="$Left">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="indicates if the control has been changed. Used to tell Qcubed to rerender the control or not (Ajax calls)." type="boolean" variable="$Modified">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="" type="boolean" variable="$Moveable">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="" type="boolean" variable="$Resizable">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="sets the Name of the Control (see {@link QControl::RenderWithName})" type="string" variable="$Name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="is true if the control is connected to the form" type="boolean" variable="$OnPage">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="sets the opacity of the control (0-100)" type="integer" variable="$Opacity">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="2" name="property" description="is used to set CSS overflow property by {@link QOverflow}" type="string" variable="$Overflow">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="returns the parent control" type="\QForm|\QControl" variable="$ParentControl">
          <type by_reference="false">\QForm</type>
          <type by_reference="false">\QControl</type>
        </tag>
        <tag line="2" name="property" description="is used to set CSS position property by {@link QPosition}" type="string" variable="$Position">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="boolean" variable="$Rendered">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property-read" description="" type="boolean" variable="$Rendering">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property-read" description="carries the name of the function, which were initially used for rendering" type="string" variable="$RenderMethod">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="specifies whether or not this is required (will cause a validation error if the form is trying to be validated and this control is left blank)" type="boolean" variable="$Required">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$StyleSheets">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="specifies the index/tab order on a form" type="integer" variable="$TabIndex">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="2" name="property" description="specifies the text to be displayed when the mouse is hovering over the control" type="string" variable="$ToolTip">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="" type="string" variable="$Top">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="is the string that contains the validation error (if applicable) or will be blank if (1) the form did not undergo its validation routine or (2) this control had no error" type="string" variable="$ValidationError">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="specifies whether or not the control should be rendered in the page.  This is in contrast to Display, which will just hide the control via CSS styling." type="boolean" variable="$Visible">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="is warning text (looks like an error, but it can be user defined) that will be shown next to the control's name label {@link QControl::RenderWithName}" type="string" variable="$Warning">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="" type="string" variable="$Width">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property" description="defaults to true" type="boolean" variable="$UseWrapper">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property-read" description="" type="boolean" variable="$WrapperModified">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property" description="" type="string" variable="$WrapperCssClass">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="81" namespace="global" package="Default">
        <name>$strBackColor</name>
        <default>null</default>
        <docblock line="80">
          <description/>
          <long-description/>
          <tag line="80" name="var" description="Background color for the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="83" namespace="global" package="Default">
        <name>$strBorderColor</name>
        <default>null</default>
        <docblock line="82">
          <description/>
          <long-description/>
          <tag line="82" name="var" description="Border color for the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="85" namespace="global" package="Default">
        <name>$strBorderStyle</name>
        <default>\QBorderStyle::NotSet</default>
        <docblock line="84">
          <description/>
          <long-description/>
          <tag line="84" name="var" description="The border style for the control" type="\QBorderStyle|string">
            <type by_reference="false">\QBorderStyle</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="87" namespace="global" package="Default">
        <name>$strBorderWidth</name>
        <default>null</default>
        <docblock line="86">
          <description/>
          <long-description/>
          <tag line="86" name="var" description="Border width - can be specified in numbers(will add pixels for that) or a number with unit attached to it" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="89" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default>null</default>
        <docblock line="88">
          <description/>
          <long-description/>
          <tag line="88" name="var" description="CSS class for the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="91" namespace="global" package="Default">
        <name>$blnDisplay</name>
        <default>true</default>
        <docblock line="90">
          <description/>
          <long-description/>
          <tag line="90" name="var" description="should the control be displayed?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="93" namespace="global" package="Default">
        <name>$strDisplayStyle</name>
        <default>\QDisplayStyle::NotSet</default>
        <docblock line="92">
          <description/>
          <long-description/>
          <tag line="92" name="var" description="Display style (CSS) for the control" type="\QDisplayStyle|string">
            <type by_reference="false">\QDisplayStyle</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="95" namespace="global" package="Default">
        <name>$blnFontBold</name>
        <default>false</default>
        <docblock line="94">
          <description/>
          <long-description/>
          <tag line="94" name="var" description="Will the text font for the control be bold" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="97" namespace="global" package="Default">
        <name>$blnFontItalic</name>
        <default>false</default>
        <docblock line="96">
          <description/>
          <long-description/>
          <tag line="96" name="var" description="Will the text font for the control be italisized" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="99" namespace="global" package="Default">
        <name>$strFontNames</name>
        <default>null</default>
        <docblock line="98">
          <description/>
          <long-description/>
          <tag line="98" name="var" description="Names of the fonts to be used for the control's text" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="101" namespace="global" package="Default">
        <name>$blnFontOverline</name>
        <default>false</default>
        <docblock line="100">
          <description/>
          <long-description/>
          <tag line="100" name="var" description="Line above the text (strTextDecoration will store the value)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="103" namespace="global" package="Default">
        <name>$strFontSize</name>
        <default>null</default>
        <docblock line="102">
          <description/>
          <long-description/>
          <tag line="102" name="var" description="Font-size: Can be specified in numbers (will add 'px' for that) or a number with a unit attached with it" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="105" namespace="global" package="Default">
        <name>$blnFontStrikeout</name>
        <default>false</default>
        <docblock line="104">
          <description/>
          <long-description/>
          <tag line="104" name="var" description="Line over the text, striking it through (strTextDecoration will store the value)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="107" namespace="global" package="Default">
        <name>$blnFontUnderline</name>
        <default>false</default>
        <docblock line="106">
          <description/>
          <long-description/>
          <tag line="106" name="var" description="Line under the text (strTextDecoration will store the value)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="109" namespace="global" package="Default">
        <name>$strForeColor</name>
        <default>null</default>
        <docblock line="108">
          <description/>
          <long-description/>
          <tag line="108" name="var" description="the 'color' CSS property of the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="111" namespace="global" package="Default">
        <name>$intOpacity</name>
        <default>null</default>
        <docblock line="110">
          <description/>
          <long-description/>
          <tag line="110" name="var" description="Opacity of the control. Range from 0 to 100 (is converted to float automatically)" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="115" namespace="global" package="Default">
        <name>$strAccessKey</name>
        <default>null</default>
        <docblock line="114">
          <description/>
          <long-description/>
          <tag line="114" name="var" description="The 'accesskey' attribute of the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="117" namespace="global" package="Default">
        <name>$mixCausesValidation</name>
        <default>false</default>
        <docblock line="116">
          <description/>
          <long-description/>
          <tag line="116" name="var" description="How will this control cause validations to trigger" type="bool|string|\QControl|array">
            <type by_reference="false">bool</type>
            <type by_reference="false">string</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="119" namespace="global" package="Default">
        <name>$strCursor</name>
        <default>\QCursor::NotSet</default>
        <docblock line="118">
          <description/>
          <long-description/>
          <tag line="118" name="var" description="Cursor that should appear when hovering on the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="121" namespace="global" package="Default">
        <name>$blnEnabled</name>
        <default>true</default>
        <docblock line="120">
          <description/>
          <long-description/>
          <tag line="120" name="var" description="Is the control Enabled or Disabled" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="123" namespace="global" package="Default">
        <name>$blnRequired</name>
        <default>false</default>
        <docblock line="122">
          <description/>
          <long-description/>
          <tag line="122" name="var" description="Is it mandatory for the control to recive data on a POST back for the control to be called valid?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="125" namespace="global" package="Default">
        <name>$intTabIndex</name>
        <default>0</default>
        <docblock line="124">
          <description/>
          <long-description/>
          <tag line="124" name="var" description="Tab-index" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="127" namespace="global" package="Default">
        <name>$strToolTip</name>
        <default>null</default>
        <docblock line="126">
          <description/>
          <long-description/>
          <tag line="126" name="var" description="the 'title' HTML attribute for the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="129" namespace="global" package="Default">
        <name>$strValidationError</name>
        <default>null</default>
        <docblock line="128">
          <description/>
          <long-description/>
          <tag line="128" name="var" description="The validation error to be shown" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="131" namespace="global" package="Default">
        <name>$blnVisible</name>
        <default>true</default>
        <docblock line="130">
          <description/>
          <long-description/>
          <tag line="130" name="var" description="Should the control be visible or not (it normally effects whether Render method will be called or not)" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="133" namespace="global" package="Default">
        <name>$strPreferedRenderMethod</name>
        <default>'Render'</default>
        <docblock line="132">
          <description/>
          <long-description/>
          <tag line="132" name="var" description="Preferred method to be used for rendering e.g. Render, RenderWithName, RenderWithError" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="137" namespace="global" package="Default">
        <name>$strHeight</name>
        <default>null</default>
        <docblock line="136">
          <description/>
          <long-description/>
          <tag line="136" name="var" description="Height of the control. If numeric, 'px' is attached; otherwise used as it is" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="139" namespace="global" package="Default">
        <name>$strWidth</name>
        <default>null</default>
        <docblock line="138">
          <description/>
          <long-description/>
          <tag line="138" name="var" description="Width of the control. If numeric, 'px' is attached; otherwise used as it is" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="142" namespace="global" package="Default">
        <name>$strHtmlBefore</name>
        <default>null</default>
        <docblock line="141">
          <description/>
          <long-description/>
          <tag line="141" name="var" description="HTML to rendered before the actual control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="144" namespace="global" package="Default">
        <name>$strHtmlAfter</name>
        <default>null</default>
        <docblock line="143">
          <description/>
          <long-description/>
          <tag line="143" name="var" description="HTML to rendered after the actual control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="146" namespace="global" package="Default">
        <name>$strInstructions</name>
        <default>null</default>
        <docblock line="145">
          <description/>
          <long-description/>
          <tag line="145" name="var" description="the Instructions for the control (useful for controls used in data entry)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="148" namespace="global" package="Default">
        <name>$strWarning</name>
        <default>null</default>
        <docblock line="147">
          <description/>
          <long-description/>
          <tag line="147" name="var" description="Same as validation error message but is supposed to contain custom messages" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="151" namespace="global" package="Default">
        <name>$strOverflow</name>
        <default>\QOverflow::NotSet</default>
        <docblock line="150">
          <description/>
          <long-description/>
          <tag line="150" name="var" description="Overflow property for the control" type="\QOverflow|string">
            <type by_reference="false">\QOverflow</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="153" namespace="global" package="Default">
        <name>$strPosition</name>
        <default>\QPosition::NotSet</default>
        <docblock line="152">
          <description/>
          <long-description/>
          <tag line="152" name="var" description="Position of the control" type="\QPosition|string">
            <type by_reference="false">\QPosition</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="155" namespace="global" package="Default">
        <name>$strTop</name>
        <default>null</default>
        <docblock line="154">
          <description/>
          <long-description/>
          <tag line="154" name="var" description="The margin from the top for 'fixed' element. Is used only with the control's wrapper enabled" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="157" namespace="global" package="Default">
        <name>$strLeft</name>
        <default>null</default>
        <docblock line="156">
          <description/>
          <long-description/>
          <tag line="156" name="var" description="The margin from the left for 'fixed' element. Is used only with the control's wrapper enabled" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="160" namespace="global" package="Default">
        <name>$objDraggable</name>
        <default>null</default>
        <docblock line="159">
          <description/>
          <long-description/>
          <tag line="159" name="var" description="When initialized, it implements the jQuery UI Draggable capabilities on to this control." type="\QDraggable|null">
            <type by_reference="false">\QDraggable</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="162" namespace="global" package="Default">
        <name>$objResizable</name>
        <default>null</default>
        <docblock line="161">
          <description/>
          <long-description/>
          <tag line="161" name="var" description="When initialized, it implements the jQuery UI Resizable capabilities on to this control." type="\QResizable|null">
            <type by_reference="false">\QResizable</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="164" namespace="global" package="Default">
        <name>$objDroppable</name>
        <default>null</default>
        <docblock line="163">
          <description/>
          <long-description/>
          <tag line="163" name="var" description="When initialized, it implements the jQuery UI Droppable capabilities on to this control." type="\QDroppable|null">
            <type by_reference="false">\QDroppable</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="171" namespace="global" package="Default">
        <name>$strControlId</name>
        <default/>
        <docblock line="167">
          <description/>
          <long-description/>
          <tag line="167" name="var" description="The control ID of this control. Used to represent the control internally and used for the HTML 'id' attribute on the control." type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="176" namespace="global" package="Default">
        <name>$objForm</name>
        <default>null</default>
        <docblock line="172">
          <description/>
          <long-description/>
          <tag line="172" name="var" description="" type="\QForm">
            <type by_reference="false">\QForm</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="178" namespace="global" package="Default">
        <name>$objParentControl</name>
        <default>null</default>
        <docblock line="177">
          <description/>
          <long-description/>
          <tag line="177" name="var" description="Immediate parent of this control" type="\QControl">
            <type by_reference="false">\QControl</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="180" namespace="global" package="Default">
        <name>$objChildControlArray</name>
        <default>array()</default>
        <docblock line="179">
          <description/>
          <long-description/>
          <tag line="179" name="var" description="Controls which have this control as their parent" type="\QControl[]">
            <type by_reference="false">\QControl[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="182" namespace="global" package="Default">
        <name>$strName</name>
        <default>null</default>
        <docblock line="181">
          <description/>
          <long-description/>
          <tag line="181" name="var" description="Name of the control - used as a lable for the control when RenderWithName is used to render" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="184" namespace="global" package="Default">
        <name>$blnRendered</name>
        <default>false</default>
        <docblock line="183">
          <description/>
          <long-description/>
          <tag line="183" name="var" description="Has the control already been rendered?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="186" namespace="global" package="Default">
        <name>$blnRendering</name>
        <default>false</default>
        <docblock line="185">
          <description/>
          <long-description/>
          <tag line="185" name="var" description="Is the control mid-way the process of rendering?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="188" namespace="global" package="Default">
        <name>$blnOnPage</name>
        <default>false</default>
        <docblock line="187">
          <description/>
          <long-description/>
          <tag line="187" name="var" description="Is the control avaialble on page? Useful when 're-rendering' a control that has children" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="190" namespace="global" package="Default">
        <name>$blnModified</name>
        <default>false</default>
        <docblock line="189">
          <description/>
          <long-description/>
          <tag line="189" name="var" description="Has the control been modified? Used mostly in Ajax or Server callbacks" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="192" namespace="global" package="Default">
        <name>$blnWrapperModified</name>
        <default>false</default>
        <docblock line="191">
          <description/>
          <long-description/>
          <tag line="191" name="var" description="Has the control's wrapper been modified? Used in Ajax or Server callbacks" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="194" namespace="global" package="Default">
        <name>$strRenderMethod</name>
        <default/>
        <docblock line="193">
          <description/>
          <long-description/>
          <tag line="193" name="var" description="Render method to be used" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="196" namespace="global" package="Default">
        <name>$strCustomAttributeArray</name>
        <default>null</default>
        <docblock line="195">
          <description/>
          <long-description/>
          <tag line="195" name="var" description="Custom HTML attributes for the control" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="198" namespace="global" package="Default">
        <name>$strCustomStyleArray</name>
        <default>null</default>
        <docblock line="197">
          <description/>
          <long-description/>
          <tag line="197" name="var" description="Custom CSS style attributes for the control" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="200" namespace="global" package="Default">
        <name>$objActionArray</name>
        <default>array()</default>
        <docblock line="199">
          <description/>
          <long-description/>
          <tag line="199" name="var" description="Array containing the list of actions set on the control (for different events)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="202" namespace="global" package="Default">
        <name>$mixActionParameter</name>
        <default>null</default>
        <docblock line="201">
          <description/>
          <long-description/>
          <tag line="201" name="var" description="The action parameter (typically small amount of data) for the Ajax or Server Callback" type="string|\QJsClosure|null">
            <type by_reference="false">string</type>
            <type by_reference="false">\QJsClosure</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="204" namespace="global" package="Default">
        <name>$strWrapperCssClass</name>
        <default>null</default>
        <docblock line="203">
          <description/>
          <long-description/>
          <tag line="203" name="var" description="CSS class for the control's wrapper" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="206" namespace="global" package="Default">
        <name>$blnUseWrapper</name>
        <default>true</default>
        <docblock line="205">
          <description/>
          <long-description/>
          <tag line="205" name="var" description="Should the wrapper be used when rendering?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="210" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>null</default>
        <docblock line="209">
          <description/>
          <long-description/>
          <tag line="209" name="var" description="List of JavaScript files to be attached with the control when rendering" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="212" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>null</default>
        <docblock line="211">
          <description/>
          <long-description/>
          <tag line="211" name="var" description="List of CSS files to be attaches with the control when rendering" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="214" namespace="global" package="Default">
        <name>$strFormAttributes</name>
        <default>null</default>
        <docblock line="213">
          <description/>
          <long-description/>
          <tag line="213" name="var" description="Form attributes for the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="227" namespace="global" package="Default">
        <name>$blnActionsMustTerminate</name>
        <default>false</default>
        <docblock line="215">
          <description/>
          <long-description/>
          <tag line="215" name="var" description="Should the default action be stopped from the being triggerred when an even occurrs? e.g.: 1. When a link is clicked which has an action associated with it - the browser will try to navigate to the link. 2. When someone presses enter on a textbox - the form will try to submit. This variable stops the default behavior (navigation to link / form submission) when set to true. Modification of this variable is to be done by using 'ActionMustTerminate' property exposed as a property" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="229" namespace="global" package="Default">
        <name>$blnIsBlockElement</name>
        <default>false</default>
        <docblock line="228">
          <description/>
          <long-description/>
          <tag line="228" name="var" description="Is this control a block type element?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="247" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="234">
          <description>Creates a QControlBase object
This constructor will generally not be used to create a QControlBase object.</description>
          <long-description>&lt;p&gt;Instead it is used by the
classes which extend the class.  Only the parent object parameter is required.  If the option strControlId
parameter is not used, QCubed will generate the id.&lt;/p&gt;</long-description>
          <tag line="234" name="param" description="" type="\QControl|\QForm|\QControlBase" variable="$objParentObject">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
            <type by_reference="false">\QControlBase</type>
          </tag>
          <tag line="234" name="param" description="optional id of this Control. In html, this will be set as the value of the id attribute. The id can only&#10;               contain alphanumeric characters.  If this parameter is not passed, QCubed will generate the id" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="234" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="247">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="301" package="Controls">
        <name>CreatePersistent</name>
        <full_name>CreatePersistent</full_name>
        <docblock line="276">
          <description>This function returns a persistent control which is supposed to be created only once for the user session
The way to call this function is shown in QCubed Examples.</description>
          <long-description>&lt;p&gt;For brevity, here is how it is to be used:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ProjectPickerListBox::CreatePersistent(
    'ProjectPickerListBox', // name of the control class
    $this, // parent - the current QForm
    'ddnProjects' // id on the form - just your usual ControlID
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above code will create the control and save it into the form and the session if it does not exist.
If it exists, the control will be retrieved out of the $_SESSION&lt;/p&gt;</long-description>
          <tag line="276" name="param" description="Name of the class whose instance is to be persisted in the $_SESSION&#10;&#9;&#9;&#9;It is not necessary that this name will be the same as the current QControl using&#10;&#9;&#9;&#9;which the function is being called." type="string" variable="$strClassName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="276" name="param" description="Parent of this control" type="\QForm|\QFormBase|\QControl|\QControlBase" variable="$objParentObject">
            <type by_reference="false">\QForm</type>
            <type by_reference="false">\QFormBase</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QControlBase</type>
          </tag>
          <tag line="276" name="param" description="The ControlID it will aquire when rendered on page" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="276" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="276" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="276" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="301">
          <name>$strClassName</name>
          <default/>
          <type/>
        </argument>
        <argument line="301">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="301">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="343" package="Controls">
        <name>PersistPrepare</name>
        <full_name>PersistPrepare</full_name>
        <docblock line="339">
          <description>This function is used to prepare the current QControl for persistence.</description>
          <long-description>&lt;p&gt;It acts as a helper function for the 'Persist()' function of this same class (QControlBase)&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="358" package="Controls">
        <name>Persist</name>
        <full_name>Persist</full_name>
        <docblock line="355">
          <description>Ensure that this QControl is persistent in the User $_SESSION</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="369" package="Controls">
        <name>AddChildControl</name>
        <full_name>AddChildControl</full_name>
        <docblock line="364">
          <description>Adds a control as a child of this control.</description>
          <long-description/>
          <tag line="364" name="param" description="the control to add" type="\QControl|\QControlBase" variable="$objControl">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QControlBase</type>
          </tag>
        </docblock>
        <argument line="369">
          <name>$objControl</name>
          <default/>
          <type>\QControl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="381" package="Controls">
        <name>GetChildControls</name>
        <full_name>GetChildControls</full_name>
        <docblock line="375">
          <description>Returns all child controls as an array</description>
          <long-description/>
          <tag line="375" name="param" description="" type="boolean" variable="$blnUseNumericIndexes">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="375" name="return" description="" type="\QControl[]">
            <type by_reference="false">\QControl[]</type>
          </tag>
        </docblock>
        <argument line="381">
          <name>$blnUseNumericIndexes</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="396" package="Controls">
        <name>GetChildControl</name>
        <full_name>GetChildControl</full_name>
        <docblock line="391">
          <description>Returns the child control with the given id</description>
          <long-description/>
          <tag line="391" name="param" description="" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="391" name="return" description="" type="\QControl">
            <type by_reference="false">\QControl</type>
          </tag>
        </docblock>
        <argument line="396">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="407" package="Controls">
        <name>RemoveChildControls</name>
        <full_name>RemoveChildControls</full_name>
        <docblock line="403">
          <description>Removes all child controls</description>
          <long-description/>
          <tag line="403" name="param" description="" type="boolean" variable="$blnRemoveFromForm">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="407">
          <name>$blnRemoveFromForm</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="418" package="Controls">
        <name>RemoveChildControl</name>
        <full_name>RemoveChildControl</full_name>
        <docblock line="413">
          <description>Removes the child control with the given id</description>
          <long-description/>
          <tag line="413" name="param" description="" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="413" name="param" description="should the control be removed from the form, too?" type="boolean" variable="$blnRemoveFromForm">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="418">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="418">
          <name>$blnRemoveFromForm</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="438" package="Controls">
        <name>AddAction</name>
        <full_name>AddAction</full_name>
        <docblock line="430">
          <description>Adds an action to the control</description>
          <long-description/>
          <tag line="430" name="param" description="" type="\QEvent" variable="$objEvent">
            <type by_reference="false">\QEvent</type>
          </tag>
          <tag line="430" name="param" description="" type="\QAction" variable="$objAction">
            <type by_reference="false">\QAction</type>
          </tag>
          <tag line="430" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="438">
          <name>$objEvent</name>
          <default/>
          <type/>
        </argument>
        <argument line="438">
          <name>$objAction</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="473" package="Controls">
        <name>AddActionArray</name>
        <full_name>AddActionArray</full_name>
        <docblock line="465">
          <description>Adds an array of actions to the control</description>
          <long-description/>
          <tag line="465" name="param" description="" type="\QEvent" variable="$objEvent">
            <type by_reference="false">\QEvent</type>
          </tag>
          <tag line="465" name="param" description="" type="array" variable="$objActionArray">
            <type by_reference="false">array</type>
          </tag>
          <tag line="465" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="473">
          <name>$objEvent</name>
          <default/>
          <type/>
        </argument>
        <argument line="473">
          <name>$objActionArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="492" package="Controls">
        <name>RemoveAllActions</name>
        <full_name>RemoveAllActions</full_name>
        <docblock line="484">
          <description>Removes all events for a given event name.</description>
          <long-description>&lt;p&gt;Be sure and use a QFooEvent::EventName constant here
(QClickEvent::EventName, for example).&lt;/p&gt;</long-description>
          <tag line="484" name="param" description="" type="string" variable="$strEventName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="492">
          <name>$strEventName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="508" package="Controls">
        <name>GetAllActions</name>
        <full_name>GetAllActions</full_name>
        <docblock line="499">
          <description>Returns all actions that are connected with specific events</description>
          <long-description/>
          <tag line="499" name="param" description="the type of the event. Be sure and use a&#10; QFooEvent::EventName here. (QClickEvent::EventName, for example)" type="string" variable="$strEventType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="499" name="param" description="if given only actions of this type will be&#10; returned" type="string" variable="$strActionType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="499" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="508">
          <name>$strEventType</name>
          <default/>
          <type/>
        </argument>
        <argument line="508">
          <name>$strActionType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="544" package="Controls">
        <name>SetCustomAttribute</name>
        <full_name>SetCustomAttribute</full_name>
        <docblock line="522">
          <description>Sets one custom attribute</description>
          <long-description>&lt;p&gt;Custom Attributes refers to the html name-value pairs that can be rendered within the control that are not
covered by an explicit method. For example, on a textbox, you can render any number of additional name-value
pairs, to assign additional javascript actions, additional formatting, etc.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&lt;?php
$txtTextbox = new Textbox("txtTextbox");
$txtTextbox-&gt;SetCustomAttribute("onfocus", "alert('You are about to edit this field');");
$txtTextbox-&gt;SetCustomAttribute("nowrap", "nowrap");
$txtTextbox-&gt;SetCustomAttribute("blah", "foo");
?&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Will render:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &lt;input type="text" ...... onfocus="alert('You are about to edit this field');" nowrap="nowrap" blah="foo" /&gt;
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="522" name="param" description="" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="522" name="param" description="" type="string" variable="$strValue">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="544">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="544">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="562" package="Controls">
        <name>GetCustomAttribute</name>
        <full_name>GetCustomAttribute</full_name>
        <docblock line="554">
          <description>Returns the value of a custom attribute</description>
          <long-description/>
          <tag line="554" name="param" description="" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="554" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="554" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="562">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="576" package="Controls">
        <name>RemoveCustomAttribute</name>
        <full_name>RemoveCustomAttribute</full_name>
        <docblock line="569">
          <description>Removes the given custom attribute</description>
          <long-description/>
          <tag line="569" name="param" description="" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="569" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="576">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="604" package="Controls">
        <name>SetCustomStyle</name>
        <full_name>SetCustomStyle</full_name>
        <docblock line="585">
          <description>Adds a custom style property/value to the html style attribute</description>
          <long-description>&lt;p&gt;Sets a custom css property. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&lt;?php
$txtTextbox = new Textbox("txtTextbox");
$txtTextbox-&gt;SetCustomStyle("white-space", "nowrap");
$txtTextbox-&gt;SetCustomStyle("margin", "10px");
?&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Will render:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;     &lt;input type="text" ...... style="white-space:nowrap;margin:10px" /&gt;
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="585" name="param" description="" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="585" name="param" description="" type="string" variable="$strValue">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="604">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="604">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="622" package="Controls">
        <name>GetCustomStyle</name>
        <full_name>GetCustomStyle</full_name>
        <docblock line="614">
          <description>Returns the value of the given custom style</description>
          <long-description/>
          <tag line="614" name="param" description="" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="614" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="614" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="622">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="636" package="Controls">
        <name>RemoveCustomStyle</name>
        <full_name>RemoveCustomStyle</full_name>
        <docblock line="629">
          <description>Deletes the given custom style</description>
          <long-description/>
          <tag line="629" name="param" description="" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="629" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="636">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="649" package="Controls">
        <name>AddJavascriptFile</name>
        <full_name>AddJavascriptFile</full_name>
        <docblock line="645">
          <description>Add a JS file to this QControl.</description>
          <long-description>&lt;p&gt;It is called/fetched by browser when the control is rendered.&lt;/p&gt;</long-description>
          <tag line="645" name="param" description="Path to the JS file" type="string" variable="$strJsFileName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="649">
          <name>$strJsFileName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="662" package="Controls">
        <name>AddPluginJavascriptFile</name>
        <full_name>AddPluginJavascriptFile</full_name>
        <docblock line="657">
          <description>Add JS file for a Plugin (if there is one associated)</description>
          <long-description/>
          <tag line="657" name="param" description="Name of the plugin" type="string" variable="$strPluginName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="657" name="param" description="Path to the JS file" type="string" variable="$strJsFileName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="662">
          <name>$strPluginName</name>
          <default/>
          <type/>
        </argument>
        <argument line="662">
          <name>$strJsFileName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="671" package="Controls">
        <name>AddCssFile</name>
        <full_name>AddCssFile</full_name>
        <docblock line="667">
          <description>Add a CSS file to this QControl.</description>
          <long-description>&lt;p&gt;It is called/fetched by browser when the control is rendered.&lt;/p&gt;</long-description>
          <tag line="667" name="param" description="CSS file path" type="string" variable="$strCssFileName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="671">
          <name>$strCssFileName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="684" package="Controls">
        <name>AddPluginCssFile</name>
        <full_name>AddPluginCssFile</full_name>
        <docblock line="679">
          <description>Add CSS file for a Plugin (if there is one associated)</description>
          <long-description/>
          <tag line="679" name="param" description="Name of the plugin" type="string" variable="$strPluginName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="679" name="param" description="File path of CSS file" type="string" variable="$strCssFileName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="684">
          <name>$strPluginName</name>
          <default/>
          <type/>
        </argument>
        <argument line="684">
          <name>$strCssFileName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="694" package="Controls">
        <name>AddCssClass</name>
        <full_name>AddCssClass</full_name>
        <docblock line="689">
          <description>This will add a CssClass name to the CssClass property (if it does not yet exist),
updating the CssClass property accordingly.</description>
          <long-description/>
          <tag line="689" name="param" description="" type="string" variable="$strCssClassName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="694">
          <name>$strCssClassName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="716" package="Controls">
        <name>RemoveCssClass</name>
        <full_name>RemoveCssClass</full_name>
        <docblock line="711">
          <description>This will remove a CssClass name from the CssClass property (if it exists),
updating the CssClass property accordingly.</description>
          <long-description/>
          <tag line="711" name="param" description="" type="string" variable="$strCssClassName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="716">
          <name>$strCssClassName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="742" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
        <docblock line="727">
          <description>ParsePostData parses the value of this control from FormState</description>
          <long-description>&lt;p&gt;This abstract method must be implemented by all controls.&lt;/p&gt;

&lt;p&gt;When utilizing formgen, the programmer should never access form variables directly (e.g.
via the $_FORM array). It can be assumed that at *ANY* given time, a control's
values/properties will be "up to date" with whatever the webuser has entered in.&lt;/p&gt;

&lt;p&gt;When a Form is Created via Form::Create(string), the form will go through to check and
see if it is a first-run of a form, or if it is a post-back.  If it is a postback, it
will go through its own private array of controls and call ParsePostData on EVERY control
it has.  Each control is responsible for "knowing" how to parse the $_POST data to update
its own values/properties based on what was returned to via the postback.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="759" package="Controls">
        <name>GetAttributes</name>
        <full_name>GetAttributes</full_name>
        <docblock line="745">
          <description>Returns all attributes in the correct HTML format</description>
          <long-description>&lt;p&gt;This is utilized by Render methods to display various name-value HTML attributes for the
control.&lt;/p&gt;

&lt;p&gt;ControlBase's implementation contains the very-basic set of HTML attributes... it is expected
that most subclasses will extend this method's functionality to add Control-specific HTML
attributes (e.g. textbox will likely add the maxlength html attribute, etc.)&lt;/p&gt;</long-description>
          <tag line="745" name="param" description="Include Custom attributes?" type="boolean" variable="$blnIncludeCustom">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="745" name="param" description="Include Action attributes?" type="boolean" variable="$blnIncludeAction">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="745" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="759">
          <name>$blnIncludeCustom</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="759">
          <name>$blnIncludeAction</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="792" package="Controls">
        <name>GetCustomAttributes</name>
        <full_name>GetCustomAttributes</full_name>
        <docblock line="783">
          <description>Returns the custom attributes HTML formatted</description>
          <long-description>&lt;p&gt;All attributes will be returned as concatened the string of the form
key1="value1" key2="value2"
Note: if the the value is === false, then the key will be randered as is, without any value&lt;/p&gt;</long-description>
          <tag line="783" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="811" package="Controls">
        <name>GetActionAttributes</name>
        <full_name>GetActionAttributes</full_name>
        <docblock line="806">
          <description>Returns all action attributes for this QControl</description>
          <long-description/>
          <tag line="806" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="824" package="Controls">
        <name>GetJavaScriptForEvent</name>
        <full_name>GetJavaScriptForEvent</full_name>
        <docblock line="818">
          <description>Get the JavaScript for a given Element</description>
          <long-description/>
          <tag line="818" name="param" description="" type="string" variable="$strEventName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="818" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="824">
          <name>$strEventName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="847" package="Controls">
        <name>GetStyleAttributes</name>
        <full_name>GetStyleAttributes</full_name>
        <docblock line="828">
          <description>Returns all style-attributes</description>
          <long-description>&lt;p&gt;Similar to GetAttributes, but specifically for CSS name/value pairs that will render
within a control's HTML "style" attribute&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;pre&gt;&lt;code&gt;&lt;?php
$txtTextbox = new Textbox("txtTextbox");
$txtTextbox-&gt;SetCustomStyle("white-space", "nowrap");
$txtTextbox-&gt;SetCustomStyle("margin", "10px");
$txtTextBox-&gt;Height = 20;
$txtTextBox-&gt;GetStyleAttributes();
?&gt;
will return:
white-space:nowrap;margin:10px;height:20px;&lt;/p&gt;</long-description>
          <tag line="828" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="937" package="Controls">
        <name>GetWrapperStyleAttributes</name>
        <full_name>GetWrapperStyleAttributes</full_name>
        <docblock line="928">
          <description>Returns all wrapper-style-attributes
Similar to GetStyleAttributes, but specifically for CSS name/value pairs that will render
within a "wrapper's" HTML "style" attribute</description>
          <long-description/>
          <tag line="928" name="param" description="" type="bool" variable="$blnIsBlockElement">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="928" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="937">
          <name>$blnIsBlockElement</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="982" package="Controls">
        <name>RenderHelper</name>
        <full_name>RenderHelper</full_name>
        <docblock line="958">
          <description>RenderHelper should be called from all "Render" functions FIRST in order to check for and
perform attribute overides (if any).</description>
          <long-description>&lt;p&gt;All render methods should take in an optional first boolean parameter blnDisplayOutput
(default to true), and then any number of attribute overrides.
Any "Render" method (e.g. Render, RenderWithName, RenderWithError) should call the
RenderHelper FIRST in order to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check for and perform attribute overrides&lt;/li&gt;
&lt;li&gt;Check to see if this control is "Visible".  If it is Visible=false, then
       the renderhelper will cause the method to immediately return&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Proper usage within the first line of any Render() method is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$this-&gt;RenderHelper(func_get_args(), __FUNCTION__);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See {@link QControl::RenderWithName()} as example.&lt;/p&gt;</long-description>
          <tag line="958" name="param" description="the parameters given to the render call" type="mixed" variable="$mixParameterArray">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="958" name="param" description="the method which has been used to render the&#10;                          control. This is important for ajax rerendering" type="string" variable="$strRenderMethod">
            <type by_reference="false">string</type>
          </tag>
          <tag line="958" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="958" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="958" name="see" description="\QControlBase::RenderOutput()" refers="\QControlBase::RenderOutput()"/>
        </docblock>
        <argument line="982">
          <name>$mixParameterArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="982">
          <name>$strRenderMethod</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1043" package="Controls">
        <name>GetNonWrappedHtml</name>
        <full_name>GetNonWrappedHtml</full_name>
        <docblock line="1040">
          <description>The current use of this function is unknown at the moment.</description>
          <long-description>&lt;p&gt;Need to dig deeper.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1048" package="Controls">
        <name>Focus</name>
        <full_name>Focus</full_name>
        <docblock line="1045">
          <description>Sets focus to this control</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1055" package="Controls">
        <name>SetFocus</name>
        <full_name>SetFocus</full_name>
        <docblock line="1052">
          <description>Same as "Focus": Sets focus to this control</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1065" package="Controls">
        <name>Blink</name>
        <full_name>Blink</full_name>
        <docblock line="1059">
          <description>Let this control blink</description>
          <long-description/>
          <tag line="1059" name="param" description="start color" type="string" variable="$strFromColor">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1059" name="param" description="blink color" type="string" variable="$strToColor">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1065">
          <name>$strFromColor</name>
          <default>'#ffff66'</default>
          <type/>
        </argument>
        <argument line="1065">
          <name>$strToColor</name>
          <default>'#ffffff'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1079" package="Controls">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
        <docblock line="1069">
          <description>Returns all Javscript that needs to be executed after rendering of this control</description>
          <long-description>&lt;p&gt;For any JavaScript calls that need to be made whenever this control is rendered or
re-rendered return here your custom javascript code.&lt;/p&gt;

&lt;p&gt;Remember to call $strToReturn = parent::GetEndScript if you want to have basic moveable support.&lt;/p&gt;</long-description>
          <tag line="1069" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1114" package="Controls">
        <name>GetEndHtml</name>
        <full_name>GetEndHtml</full_name>
        <docblock line="1106">
          <description>For any HTML code that needs to be rendered at the END of the QForm when this control is
INITIALLY rendered.</description>
          <long-description>&lt;p&gt;This function is never used throughout the whole framework. So it probably should be
deprecated. Only Call to this function is in QFormBase Line 1171.&lt;/p&gt;</long-description>
          <tag line="1106" name="deprecated" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1123" package="Controls">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="1116">
          <description>Refreshes the control</description>
          <long-description>&lt;p&gt;If not yet rendered during this ajax event, will set the Modified variable to true.  This will
have the effect of forcing a refresh of this control when it is supposed to be rendered.
Otherwise, this will do nothing&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1143" package="Controls">
        <name>RenderOutput</name>
        <full_name>RenderOutput</full_name>
        <docblock line="1128">
          <description>RenderOutput should be the last call in your custom RenderMethod.</description>
          <long-description>&lt;p&gt;RenderOutput wraps your content with valid divs and control-identifiers, echos your code
to the content buffer or simply returns it. See {@link QControlBase::RenderHelper()}.&lt;/p&gt;</long-description>
          <tag line="1128" name="param" description="Your html-code which should be given out" type="string" variable="$strOutput">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1128" name="param" description="should it be given out, or just be returned?" type="boolean" variable="$blnDisplayOutput">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1128" name="param" description="should it be given out as a block element, regardless of its configured tag?" type="boolean" variable="$blnForceAsBlockElement">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1128" name="param" description="" type="string" variable="$strWrapperAttributes">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1128" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1143">
          <name>$strOutput</name>
          <default/>
          <type/>
        </argument>
        <argument line="1143">
          <name>$blnDisplayOutput</name>
          <default/>
          <type/>
        </argument>
        <argument line="1143">
          <name>$blnForceAsBlockElement</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1143">
          <name>$strWrapperAttributes</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="1229" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
        <docblock line="1222">
          <description>This method will render the control, itself, and will return the rendered HTML as a string</description>
          <long-description>&lt;p&gt;As an abstract method, any class extending QControlBase must implement it.  This ensures that
each control has its own specific html.&lt;/p&gt;</long-description>
          <tag line="1222" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1242" package="Controls">
        <name>Render</name>
        <full_name>Render</full_name>
        <docblock line="1231">
          <description>This render method is the most basic render-method available.</description>
          <long-description>&lt;p&gt;It will perform attribute overiding (if any) and will either display the rendered
HTML (if blnDisplayOutput is true, which it is by default), or it will return the
rendered HTML as a string.&lt;/p&gt;</long-description>
          <tag line="1231" name="param" description="render the control or return as string" type="boolean" variable="$blnDisplayOutput">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1231" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="1231" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1242">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1266" package="Controls">
        <name>RenderAjax</name>
        <full_name>RenderAjax</full_name>
        <docblock line="1261">
          <description>RenderAjax will be called during an Ajax-Rerendering of the controls due to it being modified</description>
          <long-description/>
          <tag line="1261" name="param" description="render the control or return as string" type="boolean" variable="$blnDisplayOutput">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1261" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1266">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1286" package="Controls">
        <name>RenderChildren</name>
        <full_name>RenderChildren</full_name>
        <docblock line="1281">
          <description>Renders all Children</description>
          <long-description/>
          <tag line="1281" name="param" description="display output (echo out) or just return as string" type="boolean" variable="$blnDisplayOutput">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1281" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1286">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1312" package="Controls">
        <name>RenderWithError</name>
        <full_name>RenderWithError</full_name>
        <docblock line="1303">
          <description>This render method will render the control with additional output of
any validation errors, that might occur</description>
          <long-description/>
          <tag line="1303" name="param" description="display output (echo out) or just return as string" type="boolean" variable="$blnDisplayOutput">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1303" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="1303" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1312">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1360" package="Controls">
        <name>RenderWithName</name>
        <full_name>RenderWithName</full_name>
        <docblock line="1348">
          <description>Renders the control with an attached name</description>
          <long-description>&lt;p&gt;This will call {@link QControlBase::GetControlHtml()} for the bulk of the work, but will add layout html as well.  It will include
the rendering of the Controls' name label, any errors or warnings, instructions, and html before/after (if specified).
As this is the parent class of all controls, this method defines how ALL controls will render when rendered with a name.
If you need certain controls to display differently, override this function in that control's class.&lt;/p&gt;</long-description>
          <tag line="1348" name="param" description="true to send to display buffer, false to just return then html" type="boolean" variable="$blnDisplayOutput">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1348" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="1348" name="return" description="HTML of rendered Control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1360">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1433" package="Controls">
        <name>RenderExtensionRenderer</name>
        <full_name>RenderExtensionRenderer</full_name>
        <docblock line="1427">
          <description>Helper method to render the control using some other class/method.</description>
          <long-description>&lt;p&gt;Useful for plugins that want to override the render behavior for the controls
without modifying the control code.&lt;/p&gt;</long-description>
        </docblock>
        <argument line="1433">
          <name>$classname</name>
          <default/>
          <type/>
        </argument>
        <argument line="1433">
          <name>$methodname</name>
          <default/>
          <type/>
        </argument>
        <argument line="1433">
          <name>$args</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="1450" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="1438">
          <description>Checks if this controls contains a valid value.</description>
          <long-description>&lt;p&gt;This abstract method defines how a control should validate itself based on the value/
properties it has. It should also include the handling of ensuring the "Required"
requirements are obeyed if this control's "Required" flag is set to true.&lt;/p&gt;

&lt;p&gt;For Controls that can't realistically be "validated" (e.g. labels, datagrids, etc.),
those controls should simply have Validate() return true.&lt;/p&gt;</long-description>
          <tag line="1438" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1460" package="Controls">
        <name>ResetFlags</name>
        <full_name>ResetFlags</full_name>
        <docblock line="1457">
          <description>Reset the control flags to default</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1469" package="Controls">
        <name>ResetOnPageStatus</name>
        <full_name>ResetOnPageStatus</full_name>
        <docblock line="1466">
          <description>Reset the On-Page status to default (false)</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1476" package="Controls">
        <name>MarkAsModified</name>
        <full_name>MarkAsModified</full_name>
        <docblock line="1473">
          <description>Marks this control as modified</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1483" package="Controls">
        <name>MarkAsWrapperModified</name>
        <full_name>MarkAsWrapperModified</full_name>
        <docblock line="1480">
          <description>Marks the wrapper of this control as modified</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1490" package="Controls">
        <name>MarkAsRendered</name>
        <full_name>MarkAsRendered</full_name>
        <docblock line="1487">
          <description>Marks this control as Rendered</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1498" package="Controls">
        <name>SetForm</name>
        <full_name>SetForm</full_name>
        <docblock line="1494">
          <description>Sets the Form of this QControl</description>
          <long-description/>
          <tag line="1494" name="param" description="" type="\QForm|\QFormBase" variable="$objForm">
            <type by_reference="false">\QForm</type>
            <type by_reference="false">\QFormBase</type>
          </tag>
        </docblock>
        <argument line="1498">
          <name>$objForm</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1506" package="Controls">
        <name>SetParentControl</name>
        <full_name>SetParentControl</full_name>
        <docblock line="1502">
          <description>Sets the parent control for this control</description>
          <long-description/>
          <tag line="1502" name="param" description="The control which has to be set as this control's parent" type="\QControl|\QControlBase" variable="$objControl">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QControlBase</type>
          </tag>
        </docblock>
        <argument line="1506">
          <name>$objControl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1522" package="Controls">
        <name>ValidationReset</name>
        <full_name>ValidationReset</full_name>
        <docblock line="1519">
          <description>Resets the validation state to default</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1535" package="Controls">
        <name>VarExport</name>
        <full_name>VarExport</full_name>
        <docblock line="1529">
          <description>Runs var_export on this QControl</description>
          <long-description/>
          <tag line="1529" name="param" description="Does the result of var_export have to be returned?" type="bool" variable="$blnReturn">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1529" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1535">
          <name>$blnReturn</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1555" package="Controls">
        <name>getJqControlId</name>
        <full_name>getJqControlId</full_name>
        <docblock line="1544">
          <description>Used by jQuery UI wrapper controls to find the element on which to apply the jQuery function</description>
          <long-description>&lt;p&gt;NOTE: Some controls that use jQuery will get wrapped with extra divs by the jQuery library.
If such a control then gets replaced by Ajax, the jQuery effects will be deleted. To solve this,
the corresponding QCubed control should set UseWrapper to true, attach the jQuery effect to
the wrapper, and override this function to return the id of the wrapper. See QDialogBase.class.php for
an exaple.&lt;/p&gt;</long-description>
          <tag line="1544" name="return" description="the DOM element id on which to apply the jQuery UI function" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1569" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="1562">
          <description>PHP __get magic method implementation</description>
          <long-description/>
          <tag line="1562" name="param" description="Property Name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1562" name="return" description="" type="array|bool|int|mixed|null|\QControl|\QForm|string">
            <type by_reference="false">array</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1562" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="1569">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1667" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="1657">
          <description>PHP __set magic method implementation</description>
          <long-description/>
          <tag line="1657" name="param" description="Property Name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1657" name="param" description="Property Value" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1657" name="return" description="" type="mixed|void">
            <type by_reference="false">mixed</type>
            <type by_reference="false">void</type>
          </tag>
          <tag line="1657" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="1657" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="1657" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="1667">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1667">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/base_controls/QControlBase.class.php</error>
      <critical line="172" code="50019">No short description for property $objForm</critical>
      <error line="1427" code="50015">Argument $classname is missing from the Docblock of RenderExtensionRenderer()</error>
      <error line="1427" code="50015">Argument $methodname is missing from the Docblock of RenderExtensionRenderer()</error>
      <error line="1427" code="50015">Argument $args is missing from the Docblock of RenderExtensionRenderer()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QImageLabelBase.class.php" hash="1772062027ce4f29115ebccc3874fe9c" package="Controls">
    <docblock line="2">
      <description>This file contains the QImageLabelBase class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="36" package="Controls">
      <extends>\QControl</extends>
      <name>QImageLabelBase</name>
      <full_name>\QImageLabelBase</full_name>
      <docblock line="8">
        <description>This class will render an Image/Bitmapped version of any Text string</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="is the Text that you want rendered as an image" type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$XCoordinate">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$YCoordinate">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$BackgroundTransparent">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ImageType">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$Quality">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$SmoothFont">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$HorizontalAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$VerticalAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$PaddingWidth">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$PaddingHeight">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$Space">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$Tightness">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$Angle">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$CacheFolder">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-read" description="" type="string" variable="$CachedImageFilePath">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-write" description="" type="string" variable="$ForeColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-write" description="" type="string" variable="$BackColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-write" description="" type="integer" variable="$FontSize">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property-write" description="" type="integer" variable="$Width">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property-write" description="" type="integer" variable="$Height">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property-write" description="" type="string" variable="$FontNames">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="42" namespace="global" package="Default">
        <name>$strForeColor</name>
        <default>'000000'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$strBackColor</name>
        <default>'ffffff'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$strFontSize</name>
        <default>12</default>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="global" package="Default">
        <name>$strText</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="global" package="Default">
        <name>$intXCoordinate</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$intYCoordinate</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="49" namespace="global" package="Default">
        <name>$blnBackgroundTransparent</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Default">
        <name>$strImageType</name>
        <default>\QImageType::Png</default>
      </property>
      <property final="false" static="false" visibility="protected" line="53" namespace="global" package="Default">
        <name>$intQuality</name>
        <default>100</default>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$blnSmoothFont</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="57" namespace="global" package="Default">
        <name>$strHorizontalAlign</name>
        <default>\QHorizontalAlign::Left</default>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$strVerticalAlign</name>
        <default>\QVerticalAlign::Top</default>
      </property>
      <property final="false" static="false" visibility="protected" line="59" namespace="global" package="Default">
        <name>$intPaddingWidth</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="60" namespace="global" package="Default">
        <name>$intPaddingHeight</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="61" namespace="global" package="Default">
        <name>$intSpace</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="62" namespace="global" package="Default">
        <name>$intTightness</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="63" namespace="global" package="Default">
        <name>$intAngle</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="global" package="Default">
        <name>$strCacheFolder</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="67" namespace="global" package="Default">
        <name>$strCachedImageFilePath</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="Controls">
        <name>GetStyleAttributes</name>
        <full_name>GetStyleAttributes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="108" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="172" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Controls">
        <name>Serialize</name>
        <full_name>Serialize</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="191" package="Controls">
        <name>Run</name>
        <full_name>Run</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="205" package="Controls">
        <name>RenderImage</name>
        <full_name>RenderImage</full_name>
        <argument line="205">
          <name>$strPath</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="398" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="398">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="439" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="439">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="439">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="357">Update Cache Parameters</todo>
    </markers>
    <parse_markers>
      <error line="42" code="50018">No DocBlock was found for property $strForeColor</error>
      <error line="43" code="50018">No DocBlock was found for property $strBackColor</error>
      <error line="44" code="50018">No DocBlock was found for property $strFontSize</error>
      <error line="46" code="50018">No DocBlock was found for property $strText</error>
      <error line="47" code="50018">No DocBlock was found for property $intXCoordinate</error>
      <error line="48" code="50018">No DocBlock was found for property $intYCoordinate</error>
      <error line="49" code="50018">No DocBlock was found for property $blnBackgroundTransparent</error>
      <error line="52" code="50018">No DocBlock was found for property $strImageType</error>
      <error line="53" code="50018">No DocBlock was found for property $intQuality</error>
      <error line="54" code="50018">No DocBlock was found for property $blnSmoothFont</error>
      <error line="57" code="50018">No DocBlock was found for property $strHorizontalAlign</error>
      <error line="58" code="50018">No DocBlock was found for property $strVerticalAlign</error>
      <error line="59" code="50018">No DocBlock was found for property $intPaddingWidth</error>
      <error line="60" code="50018">No DocBlock was found for property $intPaddingHeight</error>
      <error line="61" code="50018">No DocBlock was found for property $intSpace</error>
      <error line="62" code="50018">No DocBlock was found for property $intTightness</error>
      <error line="63" code="50018">No DocBlock was found for property $intAngle</error>
      <error line="66" code="50018">No DocBlock was found for property $strCacheFolder</error>
      <error line="67" code="50018">No DocBlock was found for property $strCachedImageFilePath</error>
      <error line="72" code="50010">No DocBlock was found for method GetStyleAttributes()</error>
      <error line="106" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="108" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="172" code="50010">No DocBlock was found for method Validate()</error>
      <error line="174" code="50010">No DocBlock was found for method Serialize()</error>
      <error line="191" code="50010">No DocBlock was found for method Run()</error>
      <error line="205" code="50010">No DocBlock was found for method RenderImage()</error>
      <error line="398" code="50010">No DocBlock was found for method __get()</error>
      <error line="439" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QMenuGen.class.php" hash="56ef3dc03736cfcbd7834b2b283d0642" package="Default">
    <docblock line="2">
      <description>QMenuGen File</description>
      <long-description>&lt;p&gt;The abstract QMenuGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QMenuBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QMenu class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="36" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QMenu_BlurEvent</name>
      <full_name>\QMenu_BlurEvent</full_name>
      <docblock line="30">
        <description>Triggered when the menu loses focus.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The currently active menu
		item.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="37" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'menublur'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="45" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QMenu_CreateEvent</name>
      <full_name>\QMenu_CreateEvent</full_name>
      <docblock line="39">
        <description>Triggered when the menu is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="46" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'menucreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="54" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QMenu_FocusEvent</name>
      <full_name>\QMenu_FocusEvent</full_name>
      <docblock line="48">
        <description>Triggered when a menu gains focus or when any menu item is
		activated.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;  &lt;ul&gt;&lt;li&gt;&lt;strong&gt;item&lt;/strong&gt;
		Type: &lt;a&gt;jQuery&lt;/a&gt; The currently active menu item.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="55" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'menufocus'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="63" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QMenu_SelectEvent</name>
      <full_name>\QMenu_SelectEvent</full_name>
      <docblock line="57">
        <description>Triggered when a menu item is selected.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The currently active menu
		item.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="64" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'menuselect'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="98" package="Controls\Base">
      <extends>\QPanel</extends>
      <name>QMenuGen</name>
      <full_name>\QMenuGen</full_name>
      <docblock line="69">
        <description>Generated QMenuGen class.</description>
        <long-description>&lt;p&gt;This is the QMenuGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QMenuBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="69" name="see" description="\global\QMenuBase" refers="\global\QMenuBase"/>
        <tag line="69" name="package" description="Controls\Base"/>
        <tag line="69" name="property" description="Disables the menu if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="69" name="property" description="Icons to use for submenus, matching an icon defined by the jQuery UI CSS&#10;&#9;&#9;Framework. &#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;submenu (string, default:&#10;&#9;&#9;&quot;ui-icon-carat-1-e&quot;)&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Icons">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="69" name="property" description="Selector for the elements that serve as the menu container, including&#10;&#9;&#9;sub-menus." type="string" variable="$Menus">
          <type by_reference="false">string</type>
        </tag>
        <tag line="69" name="property" description="Identifies the position of submenus in relation to the associated parent&#10;&#9;&#9;menu item. The &lt;code&gt;of&lt;/code&gt; option defaults to the parent menu item, but&#10;&#9;&#9;you can specify another element to position against. You can refer to the&#10;&#9;&#9;&lt;a&gt;jQuery UI Position&lt;/a&gt; utility for more details about the various&#10;&#9;&#9;options." type="mixed" variable="$Position">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="69" name="property" description="Customize the ARIA roles used for the menu and menu items. The default uses&#10;&#9;&#9;&lt;code&gt;&quot;menuitem&quot;&lt;/code&gt; for items. Setting the &lt;code&gt;role&lt;/code&gt; option to&#10;&#9;&#9;&lt;code&gt;&quot;listbox&quot;&lt;/code&gt; will use &lt;code&gt;&quot;option&quot;&lt;/code&gt; for items. If set to&#10;&#9;&#9;&lt;code&gt;null&lt;/code&gt;, no roles will be set, which is useful if the menu is&#10;&#9;&#9;being controlled by another element that is maintaining focus." type="string" variable="$Role">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="99" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="100" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="102" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="101">
          <description/>
          <long-description/>
          <tag line="101" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="104" namespace="global" package="Default">
        <name>$mixIcons</name>
        <default>null</default>
        <docblock line="103">
          <description/>
          <long-description/>
          <tag line="103" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="106" namespace="global" package="Default">
        <name>$strMenus</name>
        <default>null</default>
        <docblock line="105">
          <description/>
          <long-description/>
          <tag line="105" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="108" namespace="global" package="Default">
        <name>$mixPosition</name>
        <default>null</default>
        <docblock line="107">
          <description/>
          <long-description/>
          <tag line="107" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="110" namespace="global" package="Default">
        <name>$strRole</name>
        <default>null</default>
        <docblock line="109">
          <description/>
          <long-description/>
          <tag line="109" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="112" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="112">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="112">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="121" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="160" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="151">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="151" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="151" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="151" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="160">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Controls\Base">
        <name>Blur</name>
        <full_name>Blur</full_name>
        <docblock line="172">
          <description>Removes focus from a menu, resets any active element styles and triggers
the menu's &lt;a&gt;&lt;code&gt;blur&lt;/code&gt;&lt;/a&gt; event.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
Type: &lt;a&gt;Event&lt;/a&gt; What triggered the menu to blur.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="172" name="param" description="" type="\" variable="$event"/>
        </docblock>
        <argument line="178">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="Controls\Base">
        <name>Collapse</name>
        <full_name>Collapse</full_name>
        <docblock line="181">
          <description>Closes the currently active sub-menu.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
&lt;a&gt;Event&lt;/a&gt; What triggered the menu to collapse.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="181" name="param" description="" type="\" variable="$event"/>
        </docblock>
        <argument line="186">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="Controls\Base">
        <name>CollapseAll</name>
        <full_name>CollapseAll</full_name>
        <docblock line="189">
          <description>Closes all open sub-menus.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt;
What triggered the menu to collapse.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;all&lt;/strong&gt; Type:
&lt;a&gt;Boolean&lt;/a&gt; Indicates whether all sub-menus should be closed or only
sub-menus below and including the menu that is or contains the target of
the triggering event.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="189" name="param" description="" type="\" variable="$event"/>
          <tag line="189" name="param" description="" type="\" variable="$all"/>
        </docblock>
        <argument line="198">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="198">
          <name>$all</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="206" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="201">
          <description>Removes the menu functionality completely.</description>
          <long-description>&lt;p&gt;This will return the element
back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="209">
          <description>Disables the menu.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="220" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="216">
          <description>Enables the menu.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="229" package="Controls\Base">
        <name>Expand</name>
        <full_name>Expand</full_name>
        <docblock line="223">
          <description>Opens the sub-menu below the currently active item, if one
exists.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; What triggered the
menu to expand.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="223" name="param" description="" type="\" variable="$event"/>
        </docblock>
        <argument line="229">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="241" package="Controls\Base">
        <name>Focus</name>
        <full_name>Focus</full_name>
        <docblock line="232">
          <description>Activates a particular menu item, begins opening any sub-menu if present
and triggers the menu's &lt;a&gt;&lt;code&gt;focus&lt;/code&gt;&lt;/a&gt;
event.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; What triggered the
menu item to gain focus.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt;
The menu item to focus/activate.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="232" name="param" description="" type="\" variable="$item"/>
          <tag line="232" name="param" description="" type="\" variable="$event"/>
        </docblock>
        <argument line="241">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="241">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="249" package="Controls\Base">
        <name>IsFirstItem</name>
        <full_name>IsFirstItem</full_name>
        <docblock line="244">
          <description>Returns a boolean value stating whether or not the currently active item is
the first item in the menu.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="Controls\Base">
        <name>IsLastItem</name>
        <full_name>IsLastItem</full_name>
        <docblock line="252">
          <description>Returns a boolean value stating whether or not the currently active item is
the last item in the menu.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="265" package="Controls\Base">
        <name>Next</name>
        <full_name>Next</full_name>
        <docblock line="260">
          <description>Moves active state to next menu item.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
&lt;a&gt;Event&lt;/a&gt; What triggered the focus to move.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="260" name="param" description="" type="\" variable="$event"/>
        </docblock>
        <argument line="265">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="274" package="Controls\Base">
        <name>NextPage</name>
        <full_name>NextPage</full_name>
        <docblock line="268">
          <description>Moves active state to first menu item below the bottom of a scrollable menu
or the last item if not scrollable.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
&lt;a&gt;Event&lt;/a&gt; What triggered the focus to move.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="268" name="param" description="" type="\" variable="$event"/>
        </docblock>
        <argument line="274">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="283" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="277">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="277" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="283">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="290" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="286">
          <description>Gets an object containing key/value pairs representing the current menu
options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="302" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="293">
          <description>Sets the value of the menu option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="293" name="param" description="" type="\" variable="$optionName"/>
          <tag line="293" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="302">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="302">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="310" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="305">
          <description>Sets one or more options for the menu.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="305" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="310">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="318" package="Controls\Base">
        <name>Previous</name>
        <full_name>Previous</full_name>
        <docblock line="313">
          <description>Moves active state to previous menu item.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
Type: &lt;a&gt;Event&lt;/a&gt; What triggered the focus to move.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="313" name="param" description="" type="\" variable="$event"/>
        </docblock>
        <argument line="318">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="327" package="Controls\Base">
        <name>PreviousPage</name>
        <full_name>PreviousPage</full_name>
        <docblock line="321">
          <description>Moves active state to first menu item above the top of a scrollable menu or
the first item if not scrollable.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
&lt;a&gt;Event&lt;/a&gt; What triggered the focus to move.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="321" name="param" description="" type="\" variable="$event"/>
        </docblock>
        <argument line="327">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="337" package="Controls\Base">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="330">
          <description>Initializes sub-menus and menu items that have not already been
initialized.</description>
          <long-description>&lt;p&gt;New menu items, including sub-menus can be added to the menu
or all of the contents of the menu can be replaced and then initialized
with the&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;method.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept
any arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="347" package="Controls\Base">
        <name>Select</name>
        <full_name>Select</full_name>
        <docblock line="340">
          <description>Selects the currently active menu item, collapses all sub-menus and
triggers the menu's &lt;a&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt;
event.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; What triggered the
selection.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="340" name="param" description="" type="\" variable="$event"/>
        </docblock>
        <argument line="347">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="352" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="352">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="369" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="369">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="369">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="99" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="100" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="101" code="50019">No short description for property $blnDisabled</critical>
      <critical line="103" code="50019">No short description for property $mixIcons</critical>
      <critical line="105" code="50019">No short description for property $strMenus</critical>
      <critical line="107" code="50019">No short description for property $mixPosition</critical>
      <critical line="109" code="50019">No short description for property $strRole</critical>
      <error line="112" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="121" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="132" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="136" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="140" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="232" code="50014">Name of argument $event does not match with the DocBlock's name $item in Focus()</error>
      <error line="232" code="50014">Name of argument $item does not match with the DocBlock's name $event in Focus()</error>
      <error line="352" code="50010">No DocBlock was found for method __get()</error>
      <error line="369" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDatepickerGen.class.php" hash="c3f9f84771d63baa9468248e4db638c9" package="Default">
    <docblock line="2">
      <description>QDatepickerGen File</description>
      <long-description>&lt;p&gt;The abstract QDatepickerGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QDatepickerBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QDatepicker class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="38" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepicker_BeforeShowEvent</name>
      <full_name>\QDatepicker_BeforeShowEvent</full_name>
      <docblock line="32">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;A function that takes an input
		field and current datepicker instance and returns an options object to
		update the datepicker with.</description>
        <long-description>&lt;p&gt;It is called just before the datepicker is
        displayed.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="39" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepicker_BeforeShow'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'beforeShow'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="52" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepicker_BeforeShowDayEvent</name>
      <full_name>\QDatepicker_BeforeShowDayEvent</full_name>
      <docblock line="43">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;A function takes a date as a
		parameter and must return an array with &lt;code&gt;[0]&lt;/code&gt; equal to
		&lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; indicating whether or not this date is
		selectable, &lt;code&gt;[1]&lt;/code&gt; equal to a CSS class name or &lt;code&gt;""&lt;/code&gt;
		for the default presentation, and &lt;code&gt;[2]&lt;/code&gt; an optional popup
		tooltip for this date.</description>
        <long-description>&lt;p&gt;It is called for each day in the datepicker before
        it is displayed.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="53" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepicker_BeforeShowDay'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'beforeShowDay'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="63" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepicker_CalculateWeekEvent</name>
      <full_name>\QDatepicker_CalculateWeekEvent</full_name>
      <docblock line="57">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;jQuery.datepicker.iso8601Week&lt;/code&gt;A
		function to calculate the week of the year for a given date.</description>
        <long-description>&lt;p&gt;The default
        implementation uses the ISO 8601 definition: weeks start on a Monday; the
        first week of the year contains the first Thursday of the year.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="64" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepicker_CalculateWeek'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="65" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'calculateWeek'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="74" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepicker_ChangeMonthYearEvent</name>
      <full_name>\QDatepicker_ChangeMonthYearEvent</full_name>
      <docblock line="68">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker moves
		to a new month and/or year.</description>
        <long-description>&lt;p&gt;The function receives the selected year, month
        (1-12), and the datepicker instance as parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;refers
        to the associated input field.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="75" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepicker_ChangeMonthYear'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'onChangeMonthYear'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="85" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepicker_CloseEvent</name>
      <full_name>\QDatepicker_CloseEvent</full_name>
      <docblock line="79">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker is
		closed, whether or not a date is selected.</description>
        <long-description>&lt;p&gt;The function receives the
        selected date as text (&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;""&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if none) and the datepicker instance
        as parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;refers to the associated input field.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="86" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepicker_Close'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="87" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'onClose'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="96" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepicker_SelectEvent</name>
      <full_name>\QDatepicker_SelectEvent</full_name>
      <docblock line="90">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker is
		selected.</description>
        <long-description>&lt;p&gt;The function receives the selected date as text and the
        datepicker instance as parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;refers to the
        associated input field.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="97" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepicker_Select'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="98" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'onSelect'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="295" package="Controls\Base">
      <extends>\QPanel</extends>
      <name>QDatepickerGen</name>
      <full_name>\QDatepickerGen</full_name>
      <docblock line="102">
        <description>Generated QDatepickerGen class.</description>
        <long-description>&lt;p&gt;This is the QDatepickerGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QDatepickerBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="102" name="see" description="\global\QDatepickerBase" refers="\global\QDatepickerBase"/>
        <tag line="102" name="package" description="Controls\Base"/>
        <tag line="102" name="property" description="An input element that is to be updated with the selected date from the&#10;&#9;&#9;datepicker. Use the &lt;a&gt;&lt;code&gt;altFormat&lt;/code&gt;&lt;/a&gt; option to change the&#10;&#9;&#9;format of the date within this field. Leave as blank for no alternate&#10;&#9;&#9;field." type="mixed" variable="$AltField">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="The &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; to be used for the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;altField&lt;/code&gt;&lt;/a&gt; option. This allows one date format to be&#10;&#9;&#9;shown to the user for selection purposes, while a different format is&#10;&#9;&#9;actually sent behind the scenes. For a full list of the possible formats&#10;&#9;&#9;see the [[UI/Datepicker/formatDate|formatDate]] function" type="string" variable="$AltFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="The text to display after each date field, e.g., to show the required&#10;&#9;&#9;format." type="string" variable="$AppendText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="Set to &lt;code&gt;true&lt;/code&gt; to automatically resize the input field to&#10;&#9;&#9;accommodate dates in the current &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt;." type="boolean" variable="$AutoSize">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;A function that takes an input&#10;&#9;&#9;field and current datepicker instance and returns an options object to&#10;&#9;&#9;update the datepicker with. It is called just before the datepicker is&#10;&#9;&#9;displayed." type="\QJsClosure" variable="$OnBeforeShow">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;A function takes a date as a&#10;&#9;&#9;parameter and must return an array with &lt;code&gt;[0]&lt;/code&gt; equal to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; indicating whether or not this date is&#10;&#9;&#9;selectable, &lt;code&gt;[1]&lt;/code&gt; equal to a CSS class name or &lt;code&gt;&quot;&quot;&lt;/code&gt;&#10;&#9;&#9;for the default presentation, and &lt;code&gt;[2]&lt;/code&gt; an optional popup&#10;&#9;&#9;tooltip for this date. It is called for each day in the datepicker before&#10;&#9;&#9;it is displayed." type="\QJsClosure" variable="$OnBeforeShowDay">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="The URL for the popup button image. If set, the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;buttonText&lt;/code&gt;&lt;/a&gt; option becomes the &lt;code&gt;alt&lt;/code&gt; value&#10;&#9;&#9;and is not directly displayed." type="string" variable="$ButtonImage">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="Whether the button image should be rendered by itself instead of inside a&#10;&#9;&#9;button element." type="boolean" variable="$ButtonImageOnly">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The text to display on the trigger button. Use in conjunction with the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;showOn&lt;/code&gt;&lt;/a&gt; option set to &lt;code&gt;&quot;button&quot;&lt;/code&gt; or&#10;&#9;&#9;&lt;code&gt;&quot;both&quot;&lt;/code&gt;." type="string" variable="$ButtonText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;jQuery.datepicker.iso8601Week&lt;/code&gt;A&#10;&#9;&#9;function to calculate the week of the year for a given date. The default&#10;&#9;&#9;implementation uses the ISO 8601 definition: weeks start on a Monday; the&#10;&#9;&#9;first week of the year contains the first Thursday of the year." type="\QJsClosure" variable="$OnCalculateWeek">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="Whether the month should be rendered as a dropdown instead of text." type="boolean" variable="$ChangeMonth">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="Whether the year should be rendered as a dropdown instead of text. Use the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;yearRange&lt;/code&gt;&lt;/a&gt; option to control which years are made&#10;&#9;&#9;available for selection." type="boolean" variable="$ChangeYear">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The text to display for the close link. Use the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;showButtonPanel&lt;/code&gt;&lt;/a&gt; option to display this button." type="string" variable="$CloseText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="When &lt;code&gt;true&lt;/code&gt;, entry in the input field is constrained to those&#10;&#9;&#9;characters allowed by the current &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option." type="boolean" variable="$ConstrainInput">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The text to display for the current day link. Use the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;showButtonPanel&lt;/code&gt;&lt;/a&gt; option to display this button." type="string" variable="$CurrentText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="The format for parsed and displayed dates. For a full list of the possible&#10;&#9;&#9;formats see the &lt;code&gt;[[UI/Datepicker/formatDate|formatDate]]&lt;/code&gt;&#10;&#9;&#9;function." type="string" variable="$JqDateFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="The list of long day names, starting from Sunday, for use as requested via&#10;&#9;&#9;the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option." type="array" variable="$DayNames">
          <type by_reference="false">array</type>
        </tag>
        <tag line="102" name="property" description="The list of minimised day names, starting from Sunday, for use as column&#10;&#9;&#9;headers within the datepicker." type="array" variable="$DayNamesMin">
          <type by_reference="false">array</type>
        </tag>
        <tag line="102" name="property" description="The list of abbreviated day names, starting from Sunday, for use as&#10;&#9;&#9;requested via the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option." type="array" variable="$DayNamesShort">
          <type by_reference="false">array</type>
        </tag>
        <tag line="102" name="property" description="Set the date to highlight on first opening if the field is blank. Specify&#10;&#9;&#9;either an actual date via a Date object or as a string in the current&#10;&#9;&#9;&lt;code&gt;[[UI/Datepicker#option-dateFormat|dateFormat]]&lt;/code&gt;, or a number of&#10;&#9;&#9;days from today (e.g. +7) or a string of values and periods ('y' for years,&#10;&#9;&#9;'m' for months, 'w' for weeks, 'd' for days, e.g. '+1m +7d'), or null for&#10;&#9;&#9;today.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Date&lt;/strong&gt;: A date object containing&#10;&#9;&#9;the default date.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: A number of days from&#10;&#9;&#9;today. For example &lt;code&gt;2&lt;/code&gt; represents two days from today and&#10;&#9;&#9;&lt;code&gt;-1&lt;/code&gt; represents yesterday.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A&#10;&#9;&#9;string in the format defined by the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option,&#10;&#9;&#9;or a relative date. Relative dates must contain value and period pairs;&#10;&#9;&#9;valid periods are &lt;code&gt;&quot;y&quot;&lt;/code&gt; for years, &lt;code&gt;&quot;m&quot;&lt;/code&gt; for months,&#10;&#9;&#9;&lt;code&gt;&quot;w&quot;&lt;/code&gt; for weeks, and &lt;code&gt;&quot;d&quot;&lt;/code&gt; for days. For example,&#10;&#9;&#9;&lt;code&gt;&quot;+1m +7d&quot;&lt;/code&gt; represents one month and seven days from&#10;&#9;&#9;today.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$DefaultDate">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="Control the speed at which the datepicker appears, it may be a time in&#10;&#9;&#9;milliseconds or a string representing one of the three predefined speeds&#10;&#9;&#9;(&quot;slow&quot;, &quot;normal&quot;, &quot;fast&quot;)." type="mixed" variable="$Duration">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="Set the first day of the week: Sunday is &lt;code&gt;0&lt;/code&gt;, Monday is&#10;&#9;&#9;&lt;code&gt;1&lt;/code&gt;, etc." type="integer" variable="$FirstDay">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="102" name="property" description="When &lt;code&gt;true&lt;/code&gt;, the current day link moves to the currently&#10;&#9;&#9;selected date instead of today." type="boolean" variable="$GotoCurrent">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="Normally the previous and next links are disabled when not applicable (see&#10;&#9;&#9;the &lt;a&gt;&lt;code&gt;minDate&lt;/code&gt;&lt;/a&gt; and &lt;a&gt;&lt;code&gt;maxDate&lt;/code&gt;&lt;/a&gt; options).&#10;&#9;&#9;You can hide them altogether by setting this attribute to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$HideIfNoPrevNext">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="Whether the current language is drawn from right to left." type="boolean" variable="$IsRTL">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The maximum selectable date. When set to &lt;code&gt;null&lt;/code&gt;, there is no&#10;&#9;&#9;maximum.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Date&lt;/strong&gt;: A date object containing&#10;&#9;&#9;the maximum date.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: A number of days from&#10;&#9;&#9;today. For example &lt;code&gt;2&lt;/code&gt; represents two days from today and&#10;&#9;&#9;&lt;code&gt;-1&lt;/code&gt; represents yesterday.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A&#10;&#9;&#9;string in the format defined by the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option,&#10;&#9;&#9;or a relative date. Relative dates must contain value and period pairs;&#10;&#9;&#9;valid periods are &lt;code&gt;&quot;y&quot;&lt;/code&gt; for years, &lt;code&gt;&quot;m&quot;&lt;/code&gt; for months,&#10;&#9;&#9;&lt;code&gt;&quot;w&quot;&lt;/code&gt; for weeks, and &lt;code&gt;&quot;d&quot;&lt;/code&gt; for days. For example,&#10;&#9;&#9;&lt;code&gt;&quot;+1m +7d&quot;&lt;/code&gt; represents one month and seven days from&#10;&#9;&#9;today.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$MaxDate">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="The minimum selectable date. When set to &lt;code&gt;null&lt;/code&gt;, there is no&#10;&#9;&#9;minimum.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Date&lt;/strong&gt;: A date object containing&#10;&#9;&#9;the minimum date.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: A number of days from&#10;&#9;&#9;today. For example &lt;code&gt;2&lt;/code&gt; represents two days from today and&#10;&#9;&#9;&lt;code&gt;-1&lt;/code&gt; represents yesterday.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A&#10;&#9;&#9;string in the format defined by the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option,&#10;&#9;&#9;or a relative date. Relative dates must contain value and period pairs;&#10;&#9;&#9;valid periods are &lt;code&gt;&quot;y&quot;&lt;/code&gt; for years, &lt;code&gt;&quot;m&quot;&lt;/code&gt; for months,&#10;&#9;&#9;&lt;code&gt;&quot;w&quot;&lt;/code&gt; for weeks, and &lt;code&gt;&quot;d&quot;&lt;/code&gt; for days. For example,&#10;&#9;&#9;&lt;code&gt;&quot;+1m +7d&quot;&lt;/code&gt; represents one month and seven days from&#10;&#9;&#9;today.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$MinDate">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="The list of full month names, for use as requested via the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option." type="array" variable="$MonthNames">
          <type by_reference="false">array</type>
        </tag>
        <tag line="102" name="property" description="The list of abbreviated month names, as used in the month header on each&#10;&#9;&#9;datepicker and as requested via the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option." type="array" variable="$MonthNamesShort">
          <type by_reference="false">array</type>
        </tag>
        <tag line="102" name="property" description="Whether the &lt;a&gt;&lt;code&gt;prevText&lt;/code&gt;&lt;/a&gt; and &lt;a&gt;&lt;code&gt;nextText&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;options should be parsed as dates by the&#10;&#9;&#9;&lt;code&gt;[[UI/Datepicker/formatDate|formatDate]]&lt;/code&gt; function, allowing&#10;&#9;&#9;them to display the target month names for example." type="boolean" variable="$NavigationAsDateFormat">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The text to display for the next month link. With the standard ThemeRoller&#10;&#9;&#9;styling, this value is replaced by an icon." type="string" variable="$NextText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="The number of months to show at once.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: The number of months to&#10;&#9;&#9;display in a single row.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Array&lt;/strong&gt;: An array defining&#10;&#9;&#9;the number of rows and columns to display.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$NumberOfMonths">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker moves&#10;&#9;&#9;to a new month and/or year. The function receives the selected year, month&#10;&#9;&#9;(1-12), and the datepicker instance as parameters. &lt;code&gt;this&lt;/code&gt; refers&#10;&#9;&#9;to the associated input field." type="\QJsClosure" variable="$OnChangeMonthYear">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker is&#10;&#9;&#9;closed, whether or not a date is selected. The function receives the&#10;&#9;&#9;selected date as text (&lt;code&gt;&quot;&quot;&lt;/code&gt; if none) and the datepicker instance&#10;&#9;&#9;as parameters. &lt;code&gt;this&lt;/code&gt; refers to the associated input field." type="\QJsClosure" variable="$OnClose">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker is&#10;&#9;&#9;selected. The function receives the selected date as text and the&#10;&#9;&#9;datepicker instance as parameters. &lt;code&gt;this&lt;/code&gt; refers to the&#10;&#9;&#9;associated input field." type="\QJsClosure" variable="$OnSelect">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="The text to display for the previous month link. With the standard&#10;&#9;&#9;ThemeRoller styling, this value is replaced by an icon." type="string" variable="$PrevText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="Whether days in other months shown before or after the current month are&#10;&#9;&#9;selectable. This only applies if the &lt;a&gt;&lt;code&gt;showOtherMonths&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option is set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$SelectOtherMonths">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The cutoff year for determining the century for a date (used in conjunction&#10;&#9;&#9;with &lt;code&gt;[[UI/Datepicker#option-dateFormat|dateFormat]]&lt;/code&gt; 'y'). Any&#10;&#9;&#9;dates entered with a year value less than or equal to the cutoff year are&#10;&#9;&#9;considered to be in the current century, while those greater than it are&#10;&#9;&#9;deemed to be in the previous century.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: A value between&#10;&#9;&#9;&lt;code&gt;0&lt;/code&gt; and &lt;code&gt;99&lt;/code&gt; indicating the cutoff year.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A relative number of years from the current&#10;&#9;&#9;year, e.g., &lt;code&gt;&quot;+3&quot;&lt;/code&gt; or &lt;code&gt;&quot;-5&quot;&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$ShortYearCutoff">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="The name of the animation used to show and hide the datepicker. Use&#10;&#9;&#9;&lt;code&gt;&quot;show&quot;&lt;/code&gt; (the default), &lt;code&gt;&quot;slideDown&quot;&lt;/code&gt;,&#10;&#9;&#9;&lt;code&gt;&quot;fadeIn&quot;&lt;/code&gt;, any of the &lt;a&gt;jQuery UI effects&lt;/a&gt;. Set to an empty&#10;&#9;&#9;string to disable animation." type="string" variable="$ShowAnim">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="Whether to show the button panel." type="boolean" variable="$ShowButtonPanel">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="When displaying multiple months via the &lt;a&gt;&lt;code&gt;numberOfMonths&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option, the &lt;code&gt;showCurrentAtPos&lt;/code&gt; option defines which position to&#10;&#9;&#9;display the current month in." type="integer" variable="$ShowCurrentAtPos">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="102" name="property" description="Whether to show the month after the year in the header." type="boolean" variable="$ShowMonthAfterYear">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="When the datepicker should appear. The datepicker can appear when the field&#10;&#9;&#9;receives focus (&lt;code&gt;&quot;focus&quot;&lt;/code&gt;), when a button is clicked&#10;&#9;&#9;(&lt;code&gt;&quot;button&quot;&lt;/code&gt;), or when either event occurs (&lt;code&gt;&quot;both&quot;&lt;/code&gt;)." type="string" variable="$ShowOn">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="If using one of the jQuery UI effects for the &lt;a&gt;&lt;code&gt;showAnim&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option, you can provide additional settings for that animation via this&#10;&#9;&#9;option." type="mixed" variable="$ShowOptions">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="Whether to display dates in other months (non-selectable) at the start or&#10;&#9;&#9;end of the current month. To make these days selectable use the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;selectOtherMonths&lt;/code&gt;&lt;/a&gt; option." type="boolean" variable="$ShowOtherMonths">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="When &lt;code&gt;true&lt;/code&gt;, a column is added to show the week of the year. The&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;calculateWeek&lt;/code&gt;&lt;/a&gt; option determines how the week of the&#10;&#9;&#9;year is calculated. You may also want to change the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;firstDay&lt;/code&gt;&lt;/a&gt; option." type="boolean" variable="$ShowWeek">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="Set how many months to move when clicking the previous/next links." type="integer" variable="$StepMonths">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="102" name="property" description="The text to display for the week of the year column heading. Use the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;showWeek&lt;/code&gt;&lt;/a&gt; option to display this column." type="string" variable="$WeekHeader">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="The range of years displayed in the year drop-down: either relative to&#10;&#9;&#9;today's year (&lt;code&gt;&quot;-nn:+nn&quot;&lt;/code&gt;), relative to the currently selected&#10;&#9;&#9;year (&lt;code&gt;&quot;c-nn:c+nn&quot;&lt;/code&gt;), absolute (&lt;code&gt;&quot;nnnn:nnnn&quot;&lt;/code&gt;), or&#10;&#9;&#9;combinations of these formats (&lt;code&gt;&quot;nnnn:-nn&quot;&lt;/code&gt;). Note that this&#10;&#9;&#9;option only affects what appears in the drop-down, to restrict which dates&#10;&#9;&#9;may be selected use the &lt;a&gt;&lt;code&gt;minDate&lt;/code&gt;&lt;/a&gt; and/or&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;maxDate&lt;/code&gt;&lt;/a&gt; options." type="string" variable="$YearRange">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="Additional text to display after the year in the month headers." type="string" variable="$YearSuffix">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="296" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="297" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="299" namespace="global" package="Default">
        <name>$mixAltField</name>
        <default>null</default>
        <docblock line="298">
          <description/>
          <long-description/>
          <tag line="298" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="301" namespace="global" package="Default">
        <name>$strAltFormat</name>
        <default>null</default>
        <docblock line="300">
          <description/>
          <long-description/>
          <tag line="300" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="303" namespace="global" package="Default">
        <name>$strAppendText</name>
        <default>null</default>
        <docblock line="302">
          <description/>
          <long-description/>
          <tag line="302" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="305" namespace="global" package="Default">
        <name>$blnAutoSize</name>
        <default>null</default>
        <docblock line="304">
          <description/>
          <long-description/>
          <tag line="304" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="307" namespace="global" package="Default">
        <name>$mixOnBeforeShow</name>
        <default>null</default>
        <docblock line="306">
          <description/>
          <long-description/>
          <tag line="306" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="309" namespace="global" package="Default">
        <name>$mixOnBeforeShowDay</name>
        <default>null</default>
        <docblock line="308">
          <description/>
          <long-description/>
          <tag line="308" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="311" namespace="global" package="Default">
        <name>$strButtonImage</name>
        <default>null</default>
        <docblock line="310">
          <description/>
          <long-description/>
          <tag line="310" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="313" namespace="global" package="Default">
        <name>$blnButtonImageOnly</name>
        <default>null</default>
        <docblock line="312">
          <description/>
          <long-description/>
          <tag line="312" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="315" namespace="global" package="Default">
        <name>$strButtonText</name>
        <default>null</default>
        <docblock line="314">
          <description/>
          <long-description/>
          <tag line="314" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="317" namespace="global" package="Default">
        <name>$mixOnCalculateWeek</name>
        <default>null</default>
        <docblock line="316">
          <description/>
          <long-description/>
          <tag line="316" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="319" namespace="global" package="Default">
        <name>$blnChangeMonth</name>
        <default>null</default>
        <docblock line="318">
          <description/>
          <long-description/>
          <tag line="318" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="321" namespace="global" package="Default">
        <name>$blnChangeYear</name>
        <default>null</default>
        <docblock line="320">
          <description/>
          <long-description/>
          <tag line="320" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="323" namespace="global" package="Default">
        <name>$strCloseText</name>
        <default>null</default>
        <docblock line="322">
          <description/>
          <long-description/>
          <tag line="322" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="325" namespace="global" package="Default">
        <name>$blnConstrainInput</name>
        <default>null</default>
        <docblock line="324">
          <description/>
          <long-description/>
          <tag line="324" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="327" namespace="global" package="Default">
        <name>$strCurrentText</name>
        <default>null</default>
        <docblock line="326">
          <description/>
          <long-description/>
          <tag line="326" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="329" namespace="global" package="Default">
        <name>$strJqDateFormat</name>
        <default>null</default>
        <docblock line="328">
          <description/>
          <long-description/>
          <tag line="328" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="331" namespace="global" package="Default">
        <name>$arrDayNames</name>
        <default>null</default>
        <docblock line="330">
          <description/>
          <long-description/>
          <tag line="330" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="333" namespace="global" package="Default">
        <name>$arrDayNamesMin</name>
        <default>null</default>
        <docblock line="332">
          <description/>
          <long-description/>
          <tag line="332" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="335" namespace="global" package="Default">
        <name>$arrDayNamesShort</name>
        <default>null</default>
        <docblock line="334">
          <description/>
          <long-description/>
          <tag line="334" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="337" namespace="global" package="Default">
        <name>$mixDefaultDate</name>
        <default>null</default>
        <docblock line="336">
          <description/>
          <long-description/>
          <tag line="336" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="339" namespace="global" package="Default">
        <name>$mixDuration</name>
        <default>null</default>
        <docblock line="338">
          <description/>
          <long-description/>
          <tag line="338" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="341" namespace="global" package="Default">
        <name>$intFirstDay</name>
        <default/>
        <docblock line="340">
          <description/>
          <long-description/>
          <tag line="340" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="343" namespace="global" package="Default">
        <name>$blnGotoCurrent</name>
        <default>null</default>
        <docblock line="342">
          <description/>
          <long-description/>
          <tag line="342" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="345" namespace="global" package="Default">
        <name>$blnHideIfNoPrevNext</name>
        <default>null</default>
        <docblock line="344">
          <description/>
          <long-description/>
          <tag line="344" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="347" namespace="global" package="Default">
        <name>$blnIsRTL</name>
        <default>null</default>
        <docblock line="346">
          <description/>
          <long-description/>
          <tag line="346" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="349" namespace="global" package="Default">
        <name>$mixMaxDate</name>
        <default>null</default>
        <docblock line="348">
          <description/>
          <long-description/>
          <tag line="348" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="351" namespace="global" package="Default">
        <name>$mixMinDate</name>
        <default>null</default>
        <docblock line="350">
          <description/>
          <long-description/>
          <tag line="350" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="353" namespace="global" package="Default">
        <name>$arrMonthNames</name>
        <default>null</default>
        <docblock line="352">
          <description/>
          <long-description/>
          <tag line="352" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="355" namespace="global" package="Default">
        <name>$arrMonthNamesShort</name>
        <default>null</default>
        <docblock line="354">
          <description/>
          <long-description/>
          <tag line="354" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="357" namespace="global" package="Default">
        <name>$blnNavigationAsDateFormat</name>
        <default>null</default>
        <docblock line="356">
          <description/>
          <long-description/>
          <tag line="356" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="359" namespace="global" package="Default">
        <name>$strNextText</name>
        <default>null</default>
        <docblock line="358">
          <description/>
          <long-description/>
          <tag line="358" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="361" namespace="global" package="Default">
        <name>$mixNumberOfMonths</name>
        <default>null</default>
        <docblock line="360">
          <description/>
          <long-description/>
          <tag line="360" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="363" namespace="global" package="Default">
        <name>$mixOnChangeMonthYear</name>
        <default>null</default>
        <docblock line="362">
          <description/>
          <long-description/>
          <tag line="362" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="365" namespace="global" package="Default">
        <name>$mixOnClose</name>
        <default>null</default>
        <docblock line="364">
          <description/>
          <long-description/>
          <tag line="364" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="367" namespace="global" package="Default">
        <name>$mixOnSelect</name>
        <default>null</default>
        <docblock line="366">
          <description/>
          <long-description/>
          <tag line="366" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="369" namespace="global" package="Default">
        <name>$strPrevText</name>
        <default>null</default>
        <docblock line="368">
          <description/>
          <long-description/>
          <tag line="368" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="371" namespace="global" package="Default">
        <name>$blnSelectOtherMonths</name>
        <default>null</default>
        <docblock line="370">
          <description/>
          <long-description/>
          <tag line="370" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="373" namespace="global" package="Default">
        <name>$mixShortYearCutoff</name>
        <default>null</default>
        <docblock line="372">
          <description/>
          <long-description/>
          <tag line="372" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="375" namespace="global" package="Default">
        <name>$strShowAnim</name>
        <default>null</default>
        <docblock line="374">
          <description/>
          <long-description/>
          <tag line="374" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="377" namespace="global" package="Default">
        <name>$blnShowButtonPanel</name>
        <default>null</default>
        <docblock line="376">
          <description/>
          <long-description/>
          <tag line="376" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="379" namespace="global" package="Default">
        <name>$intShowCurrentAtPos</name>
        <default/>
        <docblock line="378">
          <description/>
          <long-description/>
          <tag line="378" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="381" namespace="global" package="Default">
        <name>$blnShowMonthAfterYear</name>
        <default>null</default>
        <docblock line="380">
          <description/>
          <long-description/>
          <tag line="380" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="383" namespace="global" package="Default">
        <name>$strShowOn</name>
        <default>null</default>
        <docblock line="382">
          <description/>
          <long-description/>
          <tag line="382" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="385" namespace="global" package="Default">
        <name>$mixShowOptions</name>
        <default>null</default>
        <docblock line="384">
          <description/>
          <long-description/>
          <tag line="384" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="387" namespace="global" package="Default">
        <name>$blnShowOtherMonths</name>
        <default>null</default>
        <docblock line="386">
          <description/>
          <long-description/>
          <tag line="386" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="389" namespace="global" package="Default">
        <name>$blnShowWeek</name>
        <default>null</default>
        <docblock line="388">
          <description/>
          <long-description/>
          <tag line="388" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="391" namespace="global" package="Default">
        <name>$intStepMonths</name>
        <default>null</default>
        <docblock line="390">
          <description/>
          <long-description/>
          <tag line="390" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="393" namespace="global" package="Default">
        <name>$strWeekHeader</name>
        <default>null</default>
        <docblock line="392">
          <description/>
          <long-description/>
          <tag line="392" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="395" namespace="global" package="Default">
        <name>$strYearRange</name>
        <default>null</default>
        <docblock line="394">
          <description/>
          <long-description/>
          <tag line="394" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="397" namespace="global" package="Default">
        <name>$strYearSuffix</name>
        <default>null</default>
        <docblock line="396">
          <description/>
          <long-description/>
          <tag line="396" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="399" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="399">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="399">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="408" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="464" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="468" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="472" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="492" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="483">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="483" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="483" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="483" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="492">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="509" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="504">
          <description>Removes the datepicker functionality completely.</description>
          <long-description>&lt;p&gt;This will return the
element back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="528" package="Controls\Base">
        <name>Dialog</name>
        <full_name>Dialog</full_name>
        <docblock line="512">
          <description>Opens the datepicker in a dialog box.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;date&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; or &lt;a&gt;Date&lt;/a&gt; The initial date.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;onSelect&lt;/strong&gt; Type: &lt;a&gt;Function&lt;/a&gt;() A callback function
when a date is selected.</description>
          <long-description>&lt;p&gt;The function receives the date text and date
picker instance as parameters.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;settings&lt;/strong&gt; Type:
&lt;a&gt;Options&lt;/a&gt; The new settings for the date picker.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pos&lt;/strong&gt; Type: &lt;a&gt;Number[2] or MouseEvent&lt;/a&gt; The position
of the top/left of the dialog as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[x, y]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or a&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;that contains the coordinates. If not specified the
dialog is centered on the screen.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</long-description>
          <tag line="512" name="param" description="" type="\" variable="$date"/>
          <tag line="512" name="param" description="" type="\" variable="$onSelect"/>
          <tag line="512" name="param" description="" type="\" variable="$settings"/>
          <tag line="512" name="param" description="" type="\" variable="$pos"/>
        </docblock>
        <argument line="528">
          <name>$date</name>
          <default/>
          <type/>
        </argument>
        <argument line="528">
          <name>$onSelect</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="528">
          <name>$settings</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="528">
          <name>$pos</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="536" package="Controls\Base">
        <name>GetDate</name>
        <full_name>GetDate</full_name>
        <docblock line="531">
          <description>Returns the current date for the datepicker or &lt;code&gt;null&lt;/code&gt; if no date
has been selected.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="543" package="Controls\Base">
        <name>Hide</name>
        <full_name>Hide</full_name>
        <docblock line="539">
          <description>Close a previously opened date picker.&lt;ul&gt;&lt;li&gt;This method does not accept
any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="550" package="Controls\Base">
        <name>IsDisabled</name>
        <full_name>IsDisabled</full_name>
        <docblock line="546">
          <description>Determine whether a date picker has been disabled.&lt;ul&gt;&lt;li&gt;This method does
not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="559" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="553">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="553" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="559">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="567" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="562">
          <description>Gets an object containing key/value pairs representing the current
datepicker options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="579" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="570">
          <description>Sets the value of the datepicker option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="570" name="param" description="" type="\" variable="$optionName"/>
          <tag line="570" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="579">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="579">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="588" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="582">
          <description>Sets one or more options for the
datepicker.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A map of
option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="582" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="588">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="595" package="Controls\Base">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="591">
          <description>Redraw the date picker, after having made some external
modifications.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="609" package="Controls\Base">
        <name>SetDate</name>
        <full_name>SetDate</full_name>
        <docblock line="598">
          <description>Sets the date for the datepicker.</description>
          <long-description>&lt;p&gt;The new date may be a&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;object or a string in the current &lt;a&gt;date format&lt;/a&gt; (e.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"01/26/2009"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;), a number of days from today (e.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+7&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;) or a string of values and periods (&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"y"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for
years,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"m"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for months,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"w"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for weeks,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"d"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for days, e.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"+1m +7d"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;), or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;null&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to clear the selected date.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;date&lt;/strong&gt;
Type: &lt;a&gt;String&lt;/a&gt; or &lt;a&gt;Date&lt;/a&gt; The new date.&lt;/li&gt;&lt;/ul&gt;</long-description>
          <tag line="598" name="param" description="" type="\" variable="$date"/>
        </docblock>
        <argument line="609">
          <name>$date</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="617" package="Controls\Base">
        <name>Show</name>
        <full_name>Show</full_name>
        <docblock line="612">
          <description>Open the date picker.</description>
          <long-description>&lt;p&gt;If the datepicker is attached to an input, the input
must be visible for the datepicker to be shown.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not
accept any arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="622" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="622">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="684" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="684">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="684">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="40" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="54" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="65" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="76" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="87" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="98" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="296" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="297" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="298" code="50019">No short description for property $mixAltField</critical>
      <critical line="300" code="50019">No short description for property $strAltFormat</critical>
      <critical line="302" code="50019">No short description for property $strAppendText</critical>
      <critical line="304" code="50019">No short description for property $blnAutoSize</critical>
      <critical line="306" code="50019">No short description for property $mixOnBeforeShow</critical>
      <critical line="308" code="50019">No short description for property $mixOnBeforeShowDay</critical>
      <critical line="310" code="50019">No short description for property $strButtonImage</critical>
      <critical line="312" code="50019">No short description for property $blnButtonImageOnly</critical>
      <critical line="314" code="50019">No short description for property $strButtonText</critical>
      <critical line="316" code="50019">No short description for property $mixOnCalculateWeek</critical>
      <critical line="318" code="50019">No short description for property $blnChangeMonth</critical>
      <critical line="320" code="50019">No short description for property $blnChangeYear</critical>
      <critical line="322" code="50019">No short description for property $strCloseText</critical>
      <critical line="324" code="50019">No short description for property $blnConstrainInput</critical>
      <critical line="326" code="50019">No short description for property $strCurrentText</critical>
      <critical line="328" code="50019">No short description for property $strJqDateFormat</critical>
      <critical line="330" code="50019">No short description for property $arrDayNames</critical>
      <critical line="332" code="50019">No short description for property $arrDayNamesMin</critical>
      <critical line="334" code="50019">No short description for property $arrDayNamesShort</critical>
      <critical line="336" code="50019">No short description for property $mixDefaultDate</critical>
      <critical line="338" code="50019">No short description for property $mixDuration</critical>
      <critical line="340" code="50019">No short description for property $intFirstDay</critical>
      <critical line="342" code="50019">No short description for property $blnGotoCurrent</critical>
      <critical line="344" code="50019">No short description for property $blnHideIfNoPrevNext</critical>
      <critical line="346" code="50019">No short description for property $blnIsRTL</critical>
      <critical line="348" code="50019">No short description for property $mixMaxDate</critical>
      <critical line="350" code="50019">No short description for property $mixMinDate</critical>
      <critical line="352" code="50019">No short description for property $arrMonthNames</critical>
      <critical line="354" code="50019">No short description for property $arrMonthNamesShort</critical>
      <critical line="356" code="50019">No short description for property $blnNavigationAsDateFormat</critical>
      <critical line="358" code="50019">No short description for property $strNextText</critical>
      <critical line="360" code="50019">No short description for property $mixNumberOfMonths</critical>
      <critical line="362" code="50019">No short description for property $mixOnChangeMonthYear</critical>
      <critical line="364" code="50019">No short description for property $mixOnClose</critical>
      <critical line="366" code="50019">No short description for property $mixOnSelect</critical>
      <critical line="368" code="50019">No short description for property $strPrevText</critical>
      <critical line="370" code="50019">No short description for property $blnSelectOtherMonths</critical>
      <critical line="372" code="50019">No short description for property $mixShortYearCutoff</critical>
      <critical line="374" code="50019">No short description for property $strShowAnim</critical>
      <critical line="376" code="50019">No short description for property $blnShowButtonPanel</critical>
      <critical line="378" code="50019">No short description for property $intShowCurrentAtPos</critical>
      <critical line="380" code="50019">No short description for property $blnShowMonthAfterYear</critical>
      <critical line="382" code="50019">No short description for property $strShowOn</critical>
      <critical line="384" code="50019">No short description for property $mixShowOptions</critical>
      <critical line="386" code="50019">No short description for property $blnShowOtherMonths</critical>
      <critical line="388" code="50019">No short description for property $blnShowWeek</critical>
      <critical line="390" code="50019">No short description for property $intStepMonths</critical>
      <critical line="392" code="50019">No short description for property $strWeekHeader</critical>
      <critical line="394" code="50019">No short description for property $strYearRange</critical>
      <critical line="396" code="50019">No short description for property $strYearSuffix</critical>
      <error line="399" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="408" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="464" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="468" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="472" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="622" code="50010">No DocBlock was found for method __get()</error>
      <error line="684" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QSliderBase.class.php" hash="7d95a60d975eca35ebacbbca150682bf" package="Default">
    <docblock line="2">
      <description>QSlider Base File</description>
      <long-description>&lt;p&gt;The  QSliderBase class defined here provides an interface between the generated
QSliderGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QSlider.class.php file in
the controls folder instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="25" package="Controls\Base">
      <extends>\QSliderGen</extends>
      <name>QSliderBase</name>
      <full_name>\QSliderBase</full_name>
      <docblock line="13">
        <description>Implements a JQuery UI Slider</description>
        <long-description>&lt;p&gt;A slider can have one or two handles to represent a range of things, similar to a scroll bar.&lt;/p&gt;

&lt;p&gt;Use the inherited properties to manipulate it. Call Value or Values to get the values.&lt;/p&gt;</long-description>
        <tag line="13" name="link" description="http://jqueryui.com/slider/" link="http://jqueryui.com/slider/"/>
        <tag line="13" name="package" description="Controls\Base"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="42">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="42">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="26" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="42" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QSpinnerGen.class.php" hash="54691b472101cd131dd32ace3f5da5e7" package="Default">
    <docblock line="2">
      <description>QSpinnerGen File</description>
      <long-description>&lt;p&gt;The abstract QSpinnerGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QSpinnerBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QSpinner class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="37" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSpinner_ChangeEvent</name>
      <full_name>\QSpinner_ChangeEvent</full_name>
      <docblock line="30">
        <description>Triggered when the value of the spinner has changed and the input is no
		longer focused.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The
		&lt;code&gt;ui&lt;/code&gt; object is empty but included for consistency with other
		events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="38" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'spinchange'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="46" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSpinner_CreateEvent</name>
      <full_name>\QSpinner_CreateEvent</full_name>
      <docblock line="40">
        <description>Triggered when the spinner is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="47" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'spincreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="57" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSpinner_SpinEvent</name>
      <full_name>\QSpinner_SpinEvent</full_name>
      <docblock line="49">
        <description>Triggered during increment/decrement (to determine direction of spin
		compare current value with &lt;code&gt;ui.value&lt;/code&gt;).</description>
        <long-description>&lt;p&gt;Can be canceled,
        preventing the value from being updated.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
        Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;ul&gt;&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Number&lt;/a&gt; The new value to be set,
        unless the event is cancelled.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="58" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'spin'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="67" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSpinner_StartEvent</name>
      <full_name>\QSpinner_StartEvent</full_name>
      <docblock line="60">
        <description>Triggered before a spin.</description>
        <long-description>&lt;p&gt;Can be canceled, preventing the spin from
        occurring.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note: The
        &lt;pre&gt;&lt;code&gt;ui&lt;/code&gt;&lt;/pre&gt; object is empty but included for consistency with other
        events.&lt;/em&gt;&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="68" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'spinstart'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="76" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSpinner_StopEvent</name>
      <full_name>\QSpinner_StopEvent</full_name>
      <docblock line="70">
        <description>Triggered after a spin.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt;
		&lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note:
		The &lt;code&gt;ui&lt;/code&gt; object is empty but included for consistency with other
		events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="77" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'spinstop'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="145" package="Controls\Base">
      <extends>\QTextBox</extends>
      <name>QSpinnerGen</name>
      <full_name>\QSpinnerGen</full_name>
      <docblock line="82">
        <description>Generated QSpinnerGen class.</description>
        <long-description>&lt;p&gt;This is the QSpinnerGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QSpinnerBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="82" name="see" description="\global\QSpinnerBase" refers="\global\QSpinnerBase"/>
        <tag line="82" name="package" description="Controls\Base"/>
        <tag line="82" name="property" description="Sets the culture to use for parsing and formatting the value. If&#10;&#9;&#9;&lt;code&gt;null&lt;/code&gt;, the currently set culture in &lt;code&gt;Globalize&lt;/code&gt; is&#10;&#9;&#9;used, see &lt;a&gt;Globalize docs&lt;/a&gt; for available cultures. Only relevant if&#10;&#9;&#9;the &lt;a&gt;&lt;code&gt;numberFormat&lt;/code&gt;&lt;/a&gt; option is set. Requires&#10;&#9;&#9;&lt;a&gt;Globalize&lt;/a&gt; to be included." type="string" variable="$Culture">
          <type by_reference="false">string</type>
        </tag>
        <tag line="82" name="property" description="Disables the spinner if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="82" name="property" description="Icons to use for buttons, matching an icon defined by the jQuery UI CSS&#10;&#9;&#9;Framework. &#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;up (string, default: &quot;ui-icon-triangle-1-n&quot;)&lt;/li&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;li&gt;down (string, default: &quot;ui-icon-triangle-1-s&quot;)&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Icons">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Controls the number of steps taken when holding down a spin&#10;&#9;&#9;button.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: When set to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;, the stepping delta will increase when spun incessantly.&#10;&#9;&#9;When set to &lt;code&gt;false&lt;/code&gt;, all steps are equal (as defined by the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; option).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Function&lt;/strong&gt;:&#10;&#9;&#9;Receives one parameter: the number of spins that have occurred. Must return&#10;&#9;&#9;the number of steps that should occur for the current spin.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Incremental">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="The maximum allowed value. The element's &lt;code&gt;max&lt;/code&gt; attribute is used&#10;&#9;&#9;if it exists and the option is not explicitly set. If &lt;code&gt;null&lt;/code&gt;,&#10;&#9;&#9;there is no maximum enforced.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: The maximum value.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: If &lt;a&gt;Globalize&lt;/a&gt; is included, the&#10;&#9;&#9;&lt;code&gt;max&lt;/code&gt; option can be passed as a string which will be parsed&#10;&#9;&#9;based on the &lt;a&gt;&lt;code&gt;numberFormat&lt;/code&gt;&lt;/a&gt; and&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;culture&lt;/code&gt;&lt;/a&gt; options; otherwise it will fall back to the&#10;&#9;&#9;native &lt;code&gt;parseFloat()&lt;/code&gt; method.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Max">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="The minimum allowed value. The element's &lt;code&gt;min&lt;/code&gt; attribute is used&#10;&#9;&#9;if it exists and the option is not explicitly set. If &lt;code&gt;null&lt;/code&gt;,&#10;&#9;&#9;there is no minimum enforced.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: The minimum value.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: If &lt;a&gt;Globalize&lt;/a&gt; is included, the&#10;&#9;&#9;&lt;code&gt;min&lt;/code&gt; option can be passed as a string which will be parsed&#10;&#9;&#9;based on the &lt;a&gt;&lt;code&gt;numberFormat&lt;/code&gt;&lt;/a&gt; and&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;culture&lt;/code&gt;&lt;/a&gt; options; otherwise it will fall back to the&#10;&#9;&#9;native &lt;code&gt;parseFloat()&lt;/code&gt; method.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Min">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Format of numbers passed to  &lt;a&gt;&lt;code&gt;Globalize&lt;/code&gt;&lt;/a&gt;, if available.&#10;&#9;&#9;Most common are &lt;code&gt;&quot;n&quot;&lt;/code&gt; for a decimal number and &lt;code&gt;&quot;C&quot;&lt;/code&gt;&#10;&#9;&#9;for a currency value. Also see the &lt;a&gt;&lt;code&gt;culture&lt;/code&gt;&lt;/a&gt; option." type="string" variable="$NumberFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="82" name="property" description="The number of steps to take when paging via the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;pageUp&lt;/code&gt;&lt;/a&gt;/&lt;a&gt;&lt;code&gt;pageDown&lt;/code&gt;&lt;/a&gt; methods." type="integer" variable="$Page">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="82" name="property" description="The size of the step to take when spinning via buttons or via the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;stepUp()&lt;/code&gt;&lt;/a&gt;/&lt;a&gt;&lt;code&gt;stepDown()&lt;/code&gt;&lt;/a&gt; methods. The&#10;&#9;&#9;element's &lt;code&gt;step&lt;/code&gt; attribute is used if it exists and the option&#10;&#9;&#9;is not explicitly set.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: The size of the&#10;&#9;&#9;step.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: If &lt;a&gt;Globalize&lt;/a&gt; is included,&#10;&#9;&#9;the &lt;code&gt;step&lt;/code&gt; option can be passed as a string which will be parsed&#10;&#9;&#9;based on the &lt;a&gt;&lt;code&gt;numberFormat&lt;/code&gt;&lt;/a&gt; and&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;culture&lt;/code&gt;&lt;/a&gt; options, otherwise it will fall back to the&#10;&#9;&#9;native &lt;code&gt;parseFloat&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Step">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="146" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="147" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="149" namespace="global" package="Default">
        <name>$strCulture</name>
        <default>null</default>
        <docblock line="148">
          <description/>
          <long-description/>
          <tag line="148" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="151" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="150">
          <description/>
          <long-description/>
          <tag line="150" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="153" namespace="global" package="Default">
        <name>$mixIcons</name>
        <default>null</default>
        <docblock line="152">
          <description/>
          <long-description/>
          <tag line="152" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="155" namespace="global" package="Default">
        <name>$mixIncremental</name>
        <default>null</default>
        <docblock line="154">
          <description/>
          <long-description/>
          <tag line="154" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="157" namespace="global" package="Default">
        <name>$mixMax</name>
        <default>null</default>
        <docblock line="156">
          <description/>
          <long-description/>
          <tag line="156" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="159" namespace="global" package="Default">
        <name>$mixMin</name>
        <default>null</default>
        <docblock line="158">
          <description/>
          <long-description/>
          <tag line="158" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="161" namespace="global" package="Default">
        <name>$strNumberFormat</name>
        <default>null</default>
        <docblock line="160">
          <description/>
          <long-description/>
          <tag line="160" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="163" namespace="global" package="Default">
        <name>$intPage</name>
        <default>null</default>
        <docblock line="162">
          <description/>
          <long-description/>
          <tag line="162" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="165" namespace="global" package="Default">
        <name>$mixStep</name>
        <default>null</default>
        <docblock line="164">
          <description/>
          <long-description/>
          <tag line="164" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="167" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="167">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="167">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="176" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="191" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="199" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="219" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="210">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="210" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="210" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="210" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="219">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="236" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="231">
          <description>Removes the spinner functionality completely.</description>
          <long-description>&lt;p&gt;This will return the element
back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="243" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="239">
          <description>Disables the spinner.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="250" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="246">
          <description>Enables the spinner.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="259" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="253">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="253" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="259">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="262">
          <description>Gets an object containing key/value pairs representing the current spinner
options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="278" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="269">
          <description>Sets the value of the spinner option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="269" name="param" description="" type="\" variable="$optionName"/>
          <tag line="269" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="278">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="278">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="286" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="281">
          <description>Sets one or more options for the spinner.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="281" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="286">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="296" package="Controls\Base">
        <name>PageDown</name>
        <full_name>PageDown</full_name>
        <docblock line="289">
          <description>Decrements the value by the specified number of pages, as defined by the
&lt;a&gt;&lt;code&gt;page&lt;/code&gt;&lt;/a&gt; option.</description>
          <long-description>&lt;p&gt;Without the parameter, a single page is
decremented.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;pages&lt;/strong&gt; Type: &lt;a&gt;Number&lt;/a&gt; Number of
pages to decrement, defaults to 1.&lt;/li&gt;&lt;/ul&gt;</long-description>
          <tag line="289" name="param" description="" type="\" variable="$pages"/>
        </docblock>
        <argument line="296">
          <name>$pages</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="306" package="Controls\Base">
        <name>PageUp</name>
        <full_name>PageUp</full_name>
        <docblock line="299">
          <description>Increments the value by the specified number of pages, as defined by the
&lt;a&gt;&lt;code&gt;page&lt;/code&gt;&lt;/a&gt; option.</description>
          <long-description>&lt;p&gt;Without the parameter, a single page is
incremented.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;pages&lt;/strong&gt; Type: &lt;a&gt;Number&lt;/a&gt; Number of
pages to increment, defaults to 1.&lt;/li&gt;&lt;/ul&gt;</long-description>
          <tag line="299" name="param" description="" type="\" variable="$pages"/>
        </docblock>
        <argument line="306">
          <name>$pages</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="317" package="Controls\Base">
        <name>StepDown</name>
        <full_name>StepDown</full_name>
        <docblock line="309">
          <description>Decrements the value by the specified number of steps.</description>
          <long-description>&lt;p&gt;Without the
parameter, a single step is decremented.&lt;/p&gt;

&lt;p&gt;If the resulting value is
above the max, below the min, or reuslts in a step mismatch, the value will
be adjusted to the closest valid value.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;steps&lt;/strong&gt;
Type: &lt;a&gt;Number&lt;/a&gt; Number of steps to decrement, defaults to 1.&lt;/li&gt;&lt;/ul&gt;</long-description>
          <tag line="309" name="param" description="" type="\" variable="$steps"/>
        </docblock>
        <argument line="317">
          <name>$steps</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="328" package="Controls\Base">
        <name>StepUp</name>
        <full_name>StepUp</full_name>
        <docblock line="320">
          <description>Increments the value by the specified number of steps.</description>
          <long-description>&lt;p&gt;Without the
parameter, a single step is incremented.&lt;/p&gt;

&lt;p&gt;If the resulting value is
above the max, below the min, or reuslts in a step mismatch, the value will
be adjusted to the closest valid value.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;steps&lt;/strong&gt;
Type: &lt;a&gt;Number&lt;/a&gt; Number of steps to increment, defaults to 1.&lt;/li&gt;&lt;/ul&gt;</long-description>
          <tag line="320" name="param" description="" type="\" variable="$steps"/>
        </docblock>
        <argument line="328">
          <name>$steps</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="336" package="Controls\Base">
        <name>Value</name>
        <full_name>Value</full_name>
        <docblock line="331">
          <description>Gets the current value as a number.</description>
          <long-description>&lt;p&gt;The value is parsed based on the
&lt;a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;numberFormat&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/a&gt; and &lt;a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;culture&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/a&gt;
options.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="346" package="Controls\Base">
        <name>Value1</name>
        <full_name>Value1</full_name>
        <docblock line="339">
          <description>&lt;ul&gt;&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Number&lt;/a&gt; or &lt;a&gt;String&lt;/a&gt; The
value to set.</description>
          <long-description>&lt;p&gt;If passed as a string, the value is parsed based on the
&lt;a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;numberFormat&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/a&gt; and &lt;a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;culture&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/a&gt;
options.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</long-description>
          <tag line="339" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="346">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="351" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="351">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="372" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="372">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="372">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="146" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="147" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="148" code="50019">No short description for property $strCulture</critical>
      <critical line="150" code="50019">No short description for property $blnDisabled</critical>
      <critical line="152" code="50019">No short description for property $mixIcons</critical>
      <critical line="154" code="50019">No short description for property $mixIncremental</critical>
      <critical line="156" code="50019">No short description for property $mixMax</critical>
      <critical line="158" code="50019">No short description for property $mixMin</critical>
      <critical line="160" code="50019">No short description for property $strNumberFormat</critical>
      <critical line="162" code="50019">No short description for property $intPage</critical>
      <critical line="164" code="50019">No short description for property $mixStep</critical>
      <error line="167" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="176" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="191" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="195" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="199" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="351" code="50010">No DocBlock was found for method __get()</error>
      <error line="372" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QJqButtonGen.class.php" hash="29c0c9fea81d62952683c5789fa54eae" package="Default">
    <docblock line="2">
      <description>QJqButtonGen File</description>
      <long-description>&lt;p&gt;The abstract QJqButtonGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QJqButtonBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QJqButton class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="36" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QJqButton_CreateEvent</name>
      <full_name>\QJqButton_CreateEvent</full_name>
      <docblock line="30">
        <description>Triggered when the button is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="37" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'buttoncreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="72" package="Controls\Base">
      <extends>\QButton</extends>
      <name>QJqButtonGen</name>
      <full_name>\QJqButtonGen</full_name>
      <docblock line="42">
        <description>Generated QJqButtonGen class.</description>
        <long-description>&lt;p&gt;This is the QJqButtonGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QJqButtonBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="42" name="see" description="\global\QJqButtonBase" refers="\global\QJqButtonBase"/>
        <tag line="42" name="package" description="Controls\Base"/>
        <tag line="42" name="property" description="Disables the button if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="42" name="property" description="Icons to display, with or without text (see &lt;a&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option). By default, the primary icon is displayed on the left of the label&#10;&#9;&#9;text and the secondary is displayed on the right. The positioning can be&#10;&#9;&#9;controlled via CSS. The value for the &lt;code&gt;primary&lt;/code&gt; and&#10;&#9;&#9;&lt;code&gt;secondary&lt;/code&gt; properties must be a class name, e.g.,&#10;&#9;&#9;&lt;code&gt;&quot;ui-icon-gear&quot;&lt;/code&gt;. For using only one icon: &lt;code&gt;icons: {&#10;&#9;&#9;primary: &quot;ui-icon-locked&quot; }&lt;/code&gt;. For using two icons: &lt;code&gt;icons: {&#10;&#9;&#9;primary: &quot;ui-icon-gear&quot;, secondary: &quot;ui-icon-triangle-1-s&quot; }&lt;/code&gt;." type="mixed" variable="$Icons">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="42" name="property" description="Text to show in the button. When not specified (&lt;code&gt;null&lt;/code&gt;), the&#10;&#9;&#9;element's HTML content is used, or its &lt;code&gt;value&lt;/code&gt; attribute if the&#10;&#9;&#9;element is an input element of type submit or reset, or the HTML content of&#10;&#9;&#9;the associated label element if the element is an input of type radio or&#10;&#9;&#9;checkbox." type="string" variable="$Label">
          <type by_reference="false">string</type>
        </tag>
        <tag line="42" name="property" description="Whether to show the label. When set to &lt;code&gt;false&lt;/code&gt; no text will be&#10;&#9;&#9;displayed, but the &lt;a&gt;&lt;code&gt;icons&lt;/code&gt;&lt;/a&gt; option must be enabled,&#10;&#9;&#9;otherwise the &lt;code&gt;text&lt;/code&gt; option will be ignored." type="boolean" variable="$JqText">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="73" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="74" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="75">
          <description/>
          <long-description/>
          <tag line="75" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" namespace="global" package="Default">
        <name>$mixIcons</name>
        <default>null</default>
        <docblock line="77">
          <description/>
          <long-description/>
          <tag line="77" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="80" namespace="global" package="Default">
        <name>$strLabel</name>
        <default>null</default>
        <docblock line="79">
          <description/>
          <long-description/>
          <tag line="79" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="82" namespace="global" package="Default">
        <name>$blnJqText</name>
        <default>null</default>
        <docblock line="81">
          <description/>
          <long-description/>
          <tag line="81" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="84" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="84">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="93" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="131" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="122">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="122" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="122" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="131">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="143">
          <description>Removes the button functionality completely.</description>
          <long-description>&lt;p&gt;This will return the element
back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="151">
          <description>Disables the button.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="158">
          <description>Enables the button.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="165">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="165" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="171">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="174">
          <description>Gets an object containing key/value pairs representing the current button
options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="190" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="181">
          <description>Sets the value of the button option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="181" name="param" description="" type="\" variable="$optionName"/>
          <tag line="181" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="190">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="190">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="193">
          <description>Sets one or more options for the button.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="193" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="198">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="207" package="Controls\Base">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="201">
          <description>Refreshes the visual state of the button.</description>
          <long-description>&lt;p&gt;Useful for updating button state
after the native element's checked or disabled state is changed
programmatically.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="212" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="212">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="228" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="228">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="228">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="73" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="74" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="75" code="50019">No short description for property $blnDisabled</critical>
      <critical line="77" code="50019">No short description for property $mixIcons</critical>
      <critical line="79" code="50019">No short description for property $strLabel</critical>
      <critical line="81" code="50019">No short description for property $blnJqText</critical>
      <error line="84" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="93" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="103" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="107" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="111" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="212" code="50010">No DocBlock was found for method __get()</error>
      <error line="228" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QLabel.class.php" hash="fdc9e039ab610366dfdb2916c70fa684" package="Default">
    <class final="false" abstract="false" namespace="global" line="8" package="Controls">
      <extends>\QBlockControl</extends>
      <name>QLabel</name>
      <full_name>\QLabel</full_name>
      <docblock line="2">
        <description>QLabel class is used to create text on the client side.</description>
        <long-description>&lt;p&gt;By default it will not accept raw HTML for text.
Set Htmlentities to false to enable that behavior&lt;/p&gt;</long-description>
        <tag line="2" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="13" namespace="global" package="Default">
        <name>$strTagName</name>
        <default>'span'</default>
        <docblock line="12">
          <description/>
          <long-description/>
          <tag line="12" name="var" description="HTML tag to be used when rendering this control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>true</default>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="var" description="Should htmlentities be run on the contents of this control?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/base_controls/QLabel.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QControlProxy.class.php" hash="e2415559ad515d74dfccdac264feaf9b" package="Default">
    <docblock line="2">
      <description>This file contains the QControlProxy class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="9" package="Default">
      <extends>\QControl</extends>
      <name>QControlProxy</name>
      <full_name>\QControlProxy</full_name>
      <docblock line="6">
        <description>Class QControlProxy is used to 'proxy' the actions for another control</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="10" namespace="global" package="Default">
        <name>$strTargetControlId</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>RenderAsEvents</name>
        <full_name>RenderAsEvents</full_name>
        <argument line="16">
          <name>$strActionParameter</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="16">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="16">
          <name>$strTargetControlId</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="16">
          <name>$blnRenderControlId</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Default">
        <name>RenderAsHref</name>
        <full_name>RenderAsHref</full_name>
        <argument line="35">
          <name>$strActionParameter</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="35">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="35">
          <name>$strTargetControlId</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="35">
          <name>$blnRenderControlId</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="62" package="Default">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="67">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="82">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="82">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="10" code="50018">No DocBlock was found for property $strTargetControlId</error>
      <error line="12" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="16" code="50010">No DocBlock was found for method RenderAsEvents()</error>
      <error line="35" code="50010">No DocBlock was found for method RenderAsHref()</error>
      <error line="61" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="62" code="50010">No DocBlock was found for method Validate()</error>
      <error line="67" code="50010">No DocBlock was found for method __get()</error>
      <error line="82" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QCalendar.class.php" hash="2fac11d1da787631c47dd76e7b1a243f" package="Controls">
    <docblock line="2">
      <description>This file contains the QCalendar class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="Controls">
      <extends>\QDateTimeTextBox</extends>
      <name>QCalendar</name>
      <full_name>\QCalendar</full_name>
      <docblock line="8">
        <description>This class will render a pop-up, modeless calendar control
that can be used to let the user pick a date.</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="MinDate" type="\QDateTime" variable="">
          <type by_reference="false">\QDateTime</type>
        </tag>
        <tag line="8" name="property" description="MaxDate" type="\QDateTime" variable="">
          <type by_reference="false">\QDateTime</type>
        </tag>
        <tag line="8" name="property" description="DefaultDate" type="\QDateTime" variable="">
          <type by_reference="false">\QDateTime</type>
        </tag>
        <tag line="8" name="property" description="FirstDay" type="int" variable="">
          <type by_reference="false">int</type>
        </tag>
        <tag line="8" name="property" description="NumberOfMonths" type="int|int[]" variable="">
          <type by_reference="false">int</type>
          <type by_reference="false">int[]</type>
        </tag>
        <tag line="8" name="property" description="AutoSize" type="boolean" variable="">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="GotoCurrent" type="boolean" variable="">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="IsRTL" type="boolean" variable="">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="DateFormat" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-write" description="DateTimeFormat" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="JqDateFormat" type="string" variable="">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="ShowButtonPanel" type="boolean" variable="">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$datMinDate</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$datMaxDate</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$datDefaultDate</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$intFirstDay</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$mixNumberOfMonths</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$blnAutoSize</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$blnGotoCurrent</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$blnIsRTL</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$blnModified</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$strJqDateFormat</name>
        <default>'M d yy'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$blnShowButtonPanel</name>
        <default>true</default>
      </property>
      <property final="false" static="true" visibility="private" line="55" namespace="global" package="Default">
        <name>$mapQC2JQ</name>
        <default>array('MMMM' =&gt; 'MM', 'MMM' =&gt; 'M', 'MM' =&gt; 'mm', 'M' =&gt; 'm', 'DDDD' =&gt; 'DD', 'DDD' =&gt; 'D', 'DD' =&gt; 'dd', 'D' =&gt; 'd', 'YYYY' =&gt; 'yy', 'YY' =&gt; 'y')</default>
      </property>
      <property final="false" static="true" visibility="private" line="67" namespace="global" package="Default">
        <name>$mapJQ2QC</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="69" package="Controls">
        <name>qcFrmt</name>
        <full_name>qcFrmt</full_name>
        <argument line="69">
          <name>$jqFrmt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="76" package="Controls">
        <name>jqFrmt</name>
        <full_name>jqFrmt</full_name>
        <argument line="76">
          <name>$qcFrmt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="83" package="Controls">
        <name>jsDate</name>
        <full_name>jsDate</full_name>
        <docblock line="80">
          <description/>
          <long-description/>
          <tag line="80" name="deprecated" description="Use JavaScriptHelper::toJsObject"/>
        </docblock>
        <argument line="83">
          <name>$dt</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="91" package="Controls">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="91">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="125">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="163">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="163">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="274" package="Controls">
        <name>AddAction</name>
        <full_name>AddAction</full_name>
        <argument line="274">
          <name>$objEvent</name>
          <default/>
          <type/>
        </argument>
        <argument line="274">
          <name>$objAction</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="28" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="29" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <error line="30" code="50018">No DocBlock was found for property $datMinDate</error>
      <error line="31" code="50018">No DocBlock was found for property $datMaxDate</error>
      <error line="32" code="50018">No DocBlock was found for property $datDefaultDate</error>
      <error line="33" code="50018">No DocBlock was found for property $intFirstDay</error>
      <error line="34" code="50018">No DocBlock was found for property $mixNumberOfMonths</error>
      <error line="35" code="50018">No DocBlock was found for property $blnAutoSize</error>
      <error line="36" code="50018">No DocBlock was found for property $blnGotoCurrent</error>
      <error line="37" code="50018">No DocBlock was found for property $blnIsRTL</error>
      <error line="38" code="50018">No DocBlock was found for property $blnModified</error>
      <error line="39" code="50018">No DocBlock was found for property $strJqDateFormat</error>
      <error line="40" code="50018">No DocBlock was found for property $blnShowButtonPanel</error>
      <error line="55" code="50018">No DocBlock was found for property $mapQC2JQ</error>
      <error line="67" code="50018">No DocBlock was found for property $mapJQ2QC</error>
      <error line="69" code="50010">No DocBlock was found for method qcFrmt()</error>
      <error line="76" code="50010">No DocBlock was found for method jqFrmt()</error>
      <error line="80" code="50012">No short description for method jsDate()</error>
      <error line="80" code="50015">Argument $dt is missing from the Docblock of jsDate()</error>
      <error line="87" code="50010">No DocBlock was found for method Validate()</error>
      <error line="91" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="100" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="125" code="50010">No DocBlock was found for method __get()</error>
      <error line="163" code="50010">No DocBlock was found for method __set()</error>
      <error line="274" code="50010">No DocBlock was found for method AddAction()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QListBoxBase.class.php" hash="399819081905c69e598de5a9d801a306" package="Controls">
    <docblock line="2">
      <description>contains QListBoxBase class</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="21" package="Controls">
      <extends>\QListControl</extends>
      <name>QListBoxBase</name>
      <full_name>\QListBoxBase</full_name>
      <docblock line="6">
        <description>QListBoxBase will render an HTML DropDown or MultiSelect box [SELECT] element.</description>
        <long-description>&lt;p&gt;It extends {@link QListControl}.  By default, the number of visible rows is set to 1 and
the selection mode is set to single, creating a dropdown select box.&lt;/p&gt;</long-description>
        <tag line="6" name="property" description="specifies how many rows you want to have shown." type="integer" variable="$Rows">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="6" name="property" description="" type="string" variable="$LabelForRequired">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="" type="string" variable="$LabelForRequiredUnnamed">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="{@link QListItemStyle}" type="string" variable="$ItemStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="property" description="{@link QSelectionMode} specifies if this is a &quot;Single&quot; or &quot;Multiple&quot; select control." type="string" variable="$SelectionMode">
          <type by_reference="false">string</type>
        </tag>
        <tag line="6" name="see" description="\global\QListItemStyle" refers="\global\QListItemStyle"/>
        <tag line="6" name="see" description="\global\QSelectionMode" refers="\global\QSelectionMode"/>
        <tag line="6" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="27" namespace="global" package="Default">
        <name>$intRows</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strLabelForRequired</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strLabelForRequiredUnnamed</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$objItemStyle</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$strSelectionMode</name>
        <default>\QSelectionMode::Single</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="38">
          <description>QControl-Constructor</description>
          <long-description/>
          <tag line="38" name="param" description="" type="\QControl|\QForm" variable="$objParentObject">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
          </tag>
          <tag line="38" name="param" description="" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="44">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="Controls">
        <name>GetAttributes</name>
        <full_name>GetAttributes</full_name>
        <argument line="82">
          <name>$blnIncludeCustom</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="82">
          <name>$blnIncludeAction</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="100" package="Controls">
        <name>GetItemHtml</name>
        <full_name>GetItemHtml</full_name>
        <docblock line="93">
          <description>Returns the HTML-Code for a single Item</description>
          <long-description/>
          <tag line="93" name="param" description="" type="\QListItem" variable="$objItem">
            <type by_reference="false">\QListItem</type>
          </tag>
          <tag line="93" name="param" description="" type="integer" variable="$intIndex">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="93" name="return" description="resulting HTML" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$objItem</name>
          <default/>
          <type/>
        </argument>
        <argument line="100">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="119" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="172" package="Controls">
        <name>GetResetButtonHtml</name>
        <full_name>GetResetButtonHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="200" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="200">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="224" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="224">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="224">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="27" code="50018">No DocBlock was found for property $intRows</error>
      <error line="28" code="50018">No DocBlock was found for property $strLabelForRequired</error>
      <error line="29" code="50018">No DocBlock was found for property $strLabelForRequiredUnnamed</error>
      <error line="30" code="50018">No DocBlock was found for property $objItemStyle</error>
      <error line="33" code="50018">No DocBlock was found for property $strSelectionMode</error>
      <error line="53" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="82" code="50010">No DocBlock was found for method GetAttributes()</error>
      <error line="119" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="172" code="50010">No DocBlock was found for method GetResetButtonHtml()</error>
      <error line="174" code="50010">No DocBlock was found for method Validate()</error>
      <error line="200" code="50010">No DocBlock was found for method __get()</error>
      <error line="224" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QListItemStyle.class.php" hash="a005e74ab34c22297009efb61d1752e3" package="Default">
    <class final="false" abstract="false" namespace="global" line="52" package="Controls">
      <extends>\QBaseClass</extends>
      <name>QListItemStyle</name>
      <full_name>\QListItemStyle</full_name>
      <docblock line="28">
        <description>This defines the style for an Item for a ListBox
All the appearance properties should be self-explanatory.</description>
        <long-description>&lt;p&gt;For more information about ListItem appearance, please see QListItem.class.php&lt;/p&gt;</long-description>
        <tag line="28" name="package" description="Controls"/>
        <tag line="28" name="property" description="" type="string" variable="$BackColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="28" name="property" description="" type="string" variable="$BorderColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="28" name="property" description="" type="string" variable="$BorderStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="28" name="property" description="" type="string" variable="$BorderWidth">
          <type by_reference="false">string</type>
        </tag>
        <tag line="28" name="property" description="" type="string" variable="$CssClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="28" name="property" description="" type="boolean" variable="$FontBold">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="28" name="property" description="" type="boolean" variable="$FontItalic">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="28" name="property" description="" type="string" variable="$FontNames">
          <type by_reference="false">string</type>
        </tag>
        <tag line="28" name="property" description="" type="boolean" variable="$FontOverline">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="28" name="property" description="" type="string" variable="$FontSize">
          <type by_reference="false">string</type>
        </tag>
        <tag line="28" name="property" description="" type="boolean" variable="$FontStrikeout">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="28" name="property" description="" type="boolean" variable="$FontUnderline">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="28" name="property" description="" type="string" variable="$ForeColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="28" name="property" description="" type="string" variable="$Height">
          <type by_reference="false">string</type>
        </tag>
        <tag line="28" name="property" description="" type="string" variable="$Width">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$strBackColor</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="55" namespace="global" package="Default">
        <name>$strBorderColor</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="global" package="Default">
        <name>$strBorderStyle</name>
        <default>\QBorderStyle::NotSet</default>
      </property>
      <property final="false" static="false" visibility="protected" line="57" namespace="global" package="Default">
        <name>$strBorderWidth</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="59" namespace="global" package="Default">
        <name>$blnFontBold</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="60" namespace="global" package="Default">
        <name>$blnFontItalic</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="61" namespace="global" package="Default">
        <name>$strFontNames</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="62" namespace="global" package="Default">
        <name>$blnFontOverline</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="63" namespace="global" package="Default">
        <name>$strFontSize</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="global" package="Default">
        <name>$blnFontStrikeout</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="65" namespace="global" package="Default">
        <name>$blnFontUnderline</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="global" package="Default">
        <name>$strForeColor</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="67" namespace="global" package="Default">
        <name>$strHeight</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="68" namespace="global" package="Default">
        <name>$strWidth</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Controls">
        <name>ApplyOverride</name>
        <full_name>ApplyOverride</full_name>
        <argument line="70">
          <name>$objOverrideStyle</name>
          <default/>
          <type>\QListItemStyle</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Controls">
        <name>GetAttributes</name>
        <full_name>GetAttributes</full_name>
        <argument line="110">
          <name>$blnIncludeCustom</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="110">
          <name>$blnIncludeAction</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="168">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="199" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="199">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="199">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/base_controls/QListItemStyle.class.php</error>
      <error line="54" code="50018">No DocBlock was found for property $strBackColor</error>
      <error line="55" code="50018">No DocBlock was found for property $strBorderColor</error>
      <error line="56" code="50018">No DocBlock was found for property $strBorderStyle</error>
      <error line="57" code="50018">No DocBlock was found for property $strBorderWidth</error>
      <error line="58" code="50018">No DocBlock was found for property $strCssClass</error>
      <error line="59" code="50018">No DocBlock was found for property $blnFontBold</error>
      <error line="60" code="50018">No DocBlock was found for property $blnFontItalic</error>
      <error line="61" code="50018">No DocBlock was found for property $strFontNames</error>
      <error line="62" code="50018">No DocBlock was found for property $blnFontOverline</error>
      <error line="63" code="50018">No DocBlock was found for property $strFontSize</error>
      <error line="64" code="50018">No DocBlock was found for property $blnFontStrikeout</error>
      <error line="65" code="50018">No DocBlock was found for property $blnFontUnderline</error>
      <error line="66" code="50018">No DocBlock was found for property $strForeColor</error>
      <error line="67" code="50018">No DocBlock was found for property $strHeight</error>
      <error line="68" code="50018">No DocBlock was found for property $strWidth</error>
      <error line="70" code="50010">No DocBlock was found for method ApplyOverride()</error>
      <error line="110" code="50010">No DocBlock was found for method GetAttributes()</error>
      <error line="168" code="50010">No DocBlock was found for method __get()</error>
      <error line="199" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QImageBase.class.php" hash="5306f51ef505f228e298cfc102000e17" package="Controls">
    <docblock line="2">
      <description>This file contains the QImageBase class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="17" package="Controls">
      <extends>\QControl</extends>
      <name>QImageBase</name>
      <full_name>\QImageBase</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="string" variable="$CacheFolder">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$CacheFilename">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$AlternateText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ImageType">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$JpegQuality">
          <type by_reference="false">integer</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$strAlternateText</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strImageType</name>
        <default>\QIMageType::Png</default>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$intJpegQuality</name>
        <default>100</default>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strCacheFolder</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strCacheFilename</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$strCachedActualFilePath</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$strControlClassName</name>
        <default>'QImageBase'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$strImagickTempFilePath</name>
        <default>'/tmp'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="42">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="42">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Controls">
        <name>RenderAsImgSrc</name>
        <full_name>RenderAsImgSrc</full_name>
        <argument line="47">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="106" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="Controls">
        <name>Serialize</name>
        <full_name>Serialize</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="193" package="Controls">
        <name>Run</name>
        <full_name>Run</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="207" package="Controls">
        <name>RenderImage</name>
        <full_name>RenderImage</full_name>
        <argument line="207">
          <name>$strPath</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="219" package="Controls">
        <name>RenderImageHelper</name>
        <full_name>RenderImageHelper</full_name>
        <docblock line="209">
          <description>Used by custom RenderImage method to output the final image.</description>
          <long-description>&lt;p&gt;Uses $this-&gt;strImageType to determine type of image to be rendered.
This version is to be used when rendering an image using the GD library.&lt;/p&gt;

&lt;p&gt;If strPath is not set, output to the screen.  If it is, save to strPath.&lt;/p&gt;</long-description>
          <tag line="209" name="param" description="image in GD format" type="resource" variable="$objFinalImage">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="209" name="param" description="" type="string" variable="$strPath">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$objFinalImage</name>
          <default/>
          <type/>
        </argument>
        <argument line="219">
          <name>$strPath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="280" package="Controls">
        <name>RenderImageMagickHelper</name>
        <full_name>RenderImageMagickHelper</full_name>
        <docblock line="270">
          <description>Used by custom RenderImage method to output the final image.</description>
          <long-description>&lt;p&gt;Uses $this-&gt;strImageType to determine type of image to be rendered.
This version is to be used when rendering an image using the Imagick library.&lt;/p&gt;

&lt;p&gt;If strPath is not set, output to the screen.  If it is, save to strPath.&lt;/p&gt;</long-description>
          <tag line="270" name="param" description="image as an instance of the Imagick class" type="\Imagick" variable="$objFinalImage">
            <type by_reference="false">\Imagick</type>
          </tag>
          <tag line="270" name="param" description="" type="string" variable="$strPath">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$objFinalImage</name>
          <default/>
          <type/>
        </argument>
        <argument line="280">
          <name>$strPath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="353" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="353">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="377" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="377">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="377">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QImageBase</critical>
      <error line="23" code="50018">No DocBlock was found for property $strAlternateText</error>
      <error line="24" code="50018">No DocBlock was found for property $strImageType</error>
      <error line="25" code="50018">No DocBlock was found for property $intJpegQuality</error>
      <error line="28" code="50018">No DocBlock was found for property $strCacheFolder</error>
      <error line="29" code="50018">No DocBlock was found for property $strCacheFilename</error>
      <error line="32" code="50018">No DocBlock was found for property $strCachedActualFilePath</error>
      <error line="33" code="50018">No DocBlock was found for property $strControlClassName</error>
      <error line="34" code="50018">No DocBlock was found for property $strImagickTempFilePath</error>
      <error line="39" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="40" code="50010">No DocBlock was found for method Validate()</error>
      <error line="42" code="50010">No DocBlock was found for method __construct()</error>
      <error line="47" code="50010">No DocBlock was found for method RenderAsImgSrc()</error>
      <error line="106" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="161" code="50010">No DocBlock was found for method Serialize()</error>
      <error line="193" code="50010">No DocBlock was found for method Run()</error>
      <error line="207" code="50010">No DocBlock was found for method RenderImage()</error>
      <error line="353" code="50010">No DocBlock was found for method __get()</error>
      <error line="377" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QFontFamily.class.php" hash="5dbe9a28d402b7c2c26a21352bc135d8" package="Default">
    <docblock line="2">
      <description>This file contains the QFontFamily class</description>
      <long-description/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="12" package="Controls">
      <extends/>
      <name>QFontFamily</name>
      <full_name>\QFontFamily</full_name>
      <docblock line="7">
        <description>QFontFamily class is an abstract class which arranges the commonly used font families
the the main font in the family</description>
        <long-description/>
        <tag line="7" name="package" description="Controls"/>
      </docblock>
      <constant namespace="global" line="15" package="Controls">
        <name>Arial</name>
        <full_name>Arial</full_name>
        <value>'Arial, Helvetica, sans-serif'</value>
        <docblock line="14">
          <description>Arial Family</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="17" package="Controls">
        <name>Helvetica</name>
        <full_name>Helvetica</full_name>
        <value>'Helvetica, Arial, sans-serif'</value>
        <docblock line="16">
          <description>Helvetica Family</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="19" package="Controls">
        <name>Tahoma</name>
        <full_name>Tahoma</full_name>
        <value>'Tahoma, Arial, Helvetica, sans-serif'</value>
        <docblock line="18">
          <description>Tahoma Family</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="21" package="Controls">
        <name>TrebuchetMs</name>
        <full_name>TrebuchetMs</full_name>
        <value>"'Trebuchet MS', Arial, Helvetica, sans-serif"</value>
        <docblock line="20">
          <description>TrebuchetMs Family</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="23" package="Controls">
        <name>Verdana</name>
        <full_name>Verdana</full_name>
        <value>'Verdana, Arial, Helvetica, sans-serif'</value>
        <docblock line="22">
          <description>Verdana Family</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="27" package="Controls">
        <name>TimesNewRoman</name>
        <full_name>TimesNewRoman</full_name>
        <value>"'Times New Roman', Times, serif"</value>
        <docblock line="26">
          <description>TimesNewRoman Family</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="29" package="Controls">
        <name>Georgia</name>
        <full_name>Georgia</full_name>
        <value>"Georgia, 'Times New Roman', Times, serif"</value>
        <docblock line="28">
          <description>Georgia Family</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="33" package="Controls">
        <name>LucidaConsole</name>
        <full_name>LucidaConsole</full_name>
        <value>"'Lucida Console', 'Courier New', Courier, monospaced"</value>
        <docblock line="32">
          <description>LucidaConsole Family</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="35" package="Controls">
        <name>CourierNew</name>
        <full_name>CourierNew</full_name>
        <value>"'Courier New', Courier, monospaced"</value>
        <docblock line="34">
          <description>CourierNew Family</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="37" package="Controls">
        <name>Courier</name>
        <full_name>Courier</full_name>
        <value>'Courier, monospaced'</value>
        <docblock line="36">
          <description>Courier Family</description>
          <long-description/>
        </docblock>
      </constant>
    </class>
  </file>
  <file path="qcubed/_core/base_controls/QSimpleTableColumn.class.php" hash="f75ef126569dba468417a47d9e6fabcd" package="Default">
    <class final="false" abstract="true" namespace="global" line="19" package="Default">
      <extends>\QBaseClass</extends>
      <name>QAbstractSimpleTableColumn</name>
      <full_name>\QAbstractSimpleTableColumn</full_name>
      <docblock line="3">
        <description>Represents a column for a SimpleTable.</description>
        <long-description>&lt;p&gt;Different subclasses (see below) allow accessing and fetching the data
for each cells in a variety of ways&lt;/p&gt;</long-description>
        <tag line="3" name="property" description="name of the column" type="string" variable="$Name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="3" name="property" description="css class of the column" type="string" variable="$CssClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="3" name="property" description="css class of the column when it's rendered in a table header" type="string" variable="$HeaderCssClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="3" name="property" description="if true, cell values will be converted using htmlentities()" type="boolean" variable="$HtmlEntities">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="3" name="property" description="order by clause for sorting the column in ascending order" type="\QQOrderBy" variable="$OrderByClause">
          <type by_reference="false">\QQOrderBy</type>
        </tag>
        <tag line="3" name="property" description="order by clause for sorting the column in descending order" type="\QQOrderBy" variable="$ReverseOrderByClause">
          <type by_reference="false">\QQOrderBy</type>
        </tag>
        <tag line="3" name="property" description="the default format to use for FetchCellValueFormatted().&#10;   For date columns it should be a format accepted by QDateTime::qFormat()" type="string" variable="$Format">
          <type by_reference="false">string</type>
        </tag>
        <tag line="3" name="property-write" description="after the cell object is retrieved, call this method on the obtained object" type="string" variable="$PostMethod">
          <type by_reference="false">string</type>
        </tag>
        <tag line="3" name="property-write" description="after the cell object is retrieved, call this callback on the obtained object.&#10;   If $PostMethod is also set, this will be called after that method call" type="callback" variable="$PostCallback">
          <type by_reference="false">callback</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="21" namespace="global" package="Default">
        <name>$strName</name>
        <default/>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default>null</default>
        <docblock line="22">
          <description/>
          <long-description/>
          <tag line="22" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strHeaderCssClass</name>
        <default>null</default>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>true</default>
        <docblock line="26">
          <description/>
          <long-description/>
          <tag line="26" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$objOrderByClause</name>
        <default>null</default>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="" type="\QQOrderBy">
            <type by_reference="false">\QQOrderBy</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$objReverseOrderByClause</name>
        <default>null</default>
        <docblock line="30">
          <description/>
          <long-description/>
          <tag line="30" name="var" description="" type="\QQOrderBy">
            <type by_reference="false">\QQOrderBy</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$strFormat</name>
        <default>null</default>
        <docblock line="32">
          <description/>
          <long-description/>
          <tag line="32" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$strPostMethod</name>
        <default>null</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$objPostCallback</name>
        <default>null</default>
        <docblock line="36">
          <description/>
          <long-description/>
          <tag line="36" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="param" description="Name of the column" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Default">
        <name>RenderHeaderCell</name>
        <full_name>RenderHeaderCell</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Default">
        <name>RenderCell</name>
        <full_name>RenderCell</full_name>
        <argument line="59">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$blnAsHeader</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="Default">
        <name>FetchCellValue</name>
        <full_name>FetchCellValue</full_name>
        <argument line="78">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="90" package="Default">
        <name>FetchCellObject</name>
        <full_name>FetchCellObject</full_name>
        <argument line="90">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="Default">
        <name>FetchCellValueFormatted</name>
        <full_name>FetchCellValueFormatted</full_name>
        <argument line="92">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="92">
          <name>$strFormat</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="109">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="136">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="136">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="234" package="Default">
      <extends>\QAbstractSimpleTableColumn</extends>
      <name>QSimpleTablePropertyColumn</name>
      <full_name>\QSimpleTablePropertyColumn</full_name>
      <docblock line="226">
        <description>A type of column that should be used when the cell data is given by a simple property of the objects inside the
DataSource array</description>
        <long-description/>
        <tag line="226" name="property" description="the property to use when accessing the objects in the DataSource array" type="string" variable="$Property">
          <type by_reference="false">string</type>
        </tag>
        <tag line="226" name="property" description="if true the value fetcher will check for nulls before accessing the properties" type="boolean" variable="$NullSafe">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="235" namespace="global" package="Default">
        <name>$strProperty</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="236" namespace="global" package="Default">
        <name>$strPropertiesArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="237" namespace="global" package="Default">
        <name>$blnNullSafe</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="244" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="239">
          <description/>
          <long-description/>
          <tag line="239" name="param" description="name of the column" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="param" description="the property name to use when accessing the DataSource row object" type="string" variable="$strProperty">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="param" description="if not null the OrderBy and ReverseORderBy clauses will be created using the property path and the given node" type="\QQBaseNode" variable="$objBaseNode">
            <type by_reference="false">\QQBaseNode</type>
          </tag>
        </docblock>
        <argument line="244">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="244">
          <name>$strProperty</name>
          <default/>
          <type/>
        </argument>
        <argument line="244">
          <name>$objBaseNode</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="258" package="Default">
        <name>FetchCellObject</name>
        <full_name>FetchCellObject</full_name>
        <argument line="258">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="269" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="269">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="285" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="285">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="285">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="324" package="Default">
      <extends>\QAbstractSimpleTableColumn</extends>
      <name>QSimpleTableIndexedColumn</name>
      <full_name>\QSimpleTableIndexedColumn</full_name>
      <docblock line="318">
        <description>A type of column that should be used when the DataSource items are arrays</description>
        <long-description/>
        <tag line="318" name="property" description="the index or key to use when accessing the arrays in the DataSource array" type="int|string" variable="$Index">
          <type by_reference="false">int</type>
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="325" namespace="global" package="Default">
        <name>$mixIndex</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="331" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="327">
          <description/>
          <long-description/>
          <tag line="327" name="param" description="name of the column" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="327" name="param" description="the index or key to use when accessing the DataSource row array" type="int|string" variable="$mixIndex">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="331">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="331">
          <name>$mixIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="336" package="Default">
        <name>FetchCellObject</name>
        <full_name>FetchCellObject</full_name>
        <argument line="336">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="340" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="340">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="354" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="354">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="354">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="379" package="Default">
      <extends>\QAbstractSimpleTableColumn</extends>
      <implements>\Serializable</implements>
      <name>QSimpleTableClosureColumn</name>
      <full_name>\QSimpleTableClosureColumn</full_name>
      <docblock line="372">
        <description>A type of column based on a user specified function (Closure) that can be used when a complex logic is required
to fetch the cell data from the DataSource items</description>
        <long-description/>
        <tag line="372" name="property" description="the index or key to use when accessing the arrays in the DataSource array" type="int|string" variable="$Index">
          <type by_reference="false">int</type>
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="381" namespace="global" package="Default">
        <name>$objClosure</name>
        <default/>
        <docblock line="380">
          <description/>
          <long-description/>
          <tag line="380" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="390" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="383">
          <description/>
          <long-description/>
          <tag line="383" name="param" description="name of the column" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="param" description="a callable object (e.g. Closure). It should take a single argument, and it&#10;will be called with the row of the DataSource as that single argument." type="callback" variable="$objClosure">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="383" name="throws" description="" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="390">
          <name>$objClosure</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="398" package="Default">
        <name>FetchCellObject</name>
        <full_name>FetchCellObject</full_name>
        <argument line="398">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="408" package="Default">
        <name>serialize</name>
        <full_name>serialize</full_name>
        <docblock line="402">
          <description>(PHP 5 &amp;gt;= 5.1.0)&lt;br/&gt;
String representation of object</description>
          <long-description/>
          <tag line="402" name="link" description="http://php.net/manual/en/serializable.serialize.php" link="http://php.net/manual/en/serializable.serialize.php"/>
          <tag line="402" name="return" description="the string representation of the object or &amp;null;" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="435" package="Default">
        <name>unserialize</name>
        <full_name>unserialize</full_name>
        <docblock line="425">
          <description>(PHP 5 &amp;gt;= 5.1.0)&lt;br/&gt;
Constructs the object</description>
          <long-description/>
          <tag line="425" name="link" description="http://php.net/manual/en/serializable.unserialize.php" link="http://php.net/manual/en/serializable.unserialize.php"/>
          <tag line="425" name="param" description="&lt;p&gt;&#10;The string representation of the object.&#10;&lt;/p&gt;" type="string" variable="$serialized">
            <type by_reference="false">string</type>
          </tag>
          <tag line="425" name="throws" description="" type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="425" name="return" description="the original value unserialized." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="435">
          <name>$serialized</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="460" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="460">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="474" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="474">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="474">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/base_controls/QSimpleTableColumn.class.php</error>
      <critical line="20" code="50019">No short description for property $strName</critical>
      <critical line="22" code="50019">No short description for property $strCssClass</critical>
      <critical line="24" code="50019">No short description for property $strHeaderCssClass</critical>
      <critical line="26" code="50019">No short description for property $blnHtmlEntities</critical>
      <critical line="28" code="50019">No short description for property $objOrderByClause</critical>
      <critical line="30" code="50019">No short description for property $objReverseOrderByClause</critical>
      <critical line="32" code="50019">No short description for property $strFormat</critical>
      <critical line="34" code="50019">No short description for property $strPostMethod</critical>
      <critical line="36" code="50019">No short description for property $objPostCallback</critical>
      <error line="39" code="50012">No short description for method __construct()</error>
      <error line="46" code="50010">No DocBlock was found for method RenderHeaderCell()</error>
      <error line="59" code="50010">No DocBlock was found for method RenderCell()</error>
      <error line="78" code="50010">No DocBlock was found for method FetchCellValue()</error>
      <error line="90" code="50010">No DocBlock was found for method FetchCellObject()</error>
      <error line="92" code="50010">No DocBlock was found for method FetchCellValueFormatted()</error>
      <error line="109" code="50010">No DocBlock was found for method __get()</error>
      <error line="136" code="50010">No DocBlock was found for method __set()</error>
      <error line="235" code="50018">No DocBlock was found for property $strProperty</error>
      <error line="236" code="50018">No DocBlock was found for property $strPropertiesArray</error>
      <error line="237" code="50018">No DocBlock was found for property $blnNullSafe</error>
      <error line="239" code="50012">No short description for method __construct()</error>
      <error line="258" code="50010">No DocBlock was found for method FetchCellObject()</error>
      <error line="269" code="50010">No DocBlock was found for method __get()</error>
      <error line="285" code="50010">No DocBlock was found for method __set()</error>
      <error line="325" code="50018">No DocBlock was found for property $mixIndex</error>
      <error line="327" code="50012">No short description for method __construct()</error>
      <error line="336" code="50010">No DocBlock was found for method FetchCellObject()</error>
      <error line="340" code="50010">No DocBlock was found for method __get()</error>
      <error line="354" code="50010">No DocBlock was found for method __set()</error>
      <critical line="380" code="50019">No short description for property $objClosure</critical>
      <error line="383" code="50012">No short description for method __construct()</error>
      <error line="398" code="50010">No DocBlock was found for method FetchCellObject()</error>
      <error line="460" code="50010">No DocBlock was found for method __get()</error>
      <error line="474" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QTabsGen.class.php" hash="979e96e57d40bc7921c39eeb409965b9" package="Default">
    <docblock line="2">
      <description>QTabsGen File</description>
      <long-description>&lt;p&gt;The abstract QTabsGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QTabsBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QTabs class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="44" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QTabs_ActivateEvent</name>
      <full_name>\QTabs_ActivateEvent</full_name>
      <docblock line="30">
        <description>Triggered after a tab has been activated (after animation completes).</description>
        <long-description>&lt;p&gt;If
        the tabs were previously collapsed,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.oldTab&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.oldPanel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be empty jQuery objects. If the tabs are
        collapsing,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.newTab&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.newPanel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be
        empty jQuery objects.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt;
        &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;ul&gt;&lt;li&gt;&lt;strong&gt;newTab&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The tab that was just
        activated.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;oldTab&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The tab
        that was just deactivated.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;newPanel&lt;/strong&gt; Type:
        &lt;a&gt;jQuery&lt;/a&gt; The panel that was just activated.&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;oldPanel&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The panel that was just
        deactivated.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="45" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'tabsactivate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="62" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QTabs_BeforeActivateEvent</name>
      <full_name>\QTabs_BeforeActivateEvent</full_name>
      <docblock line="47">
        <description>Triggered directly after a tab is activated.</description>
        <long-description>&lt;p&gt;Can be canceled to prevent the
        tab from activating. If the tabs are currently collapsed,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.oldTab&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.oldPanel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be empty jQuery
        objects. If the tabs are collapsing,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.newTab&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.newPanel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be empty jQuery
        objects.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;ul&gt;&lt;li&gt;&lt;strong&gt;newTab&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The tab that is about
        to be activated.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;oldTab&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The
        tab that is about to be deactivated.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;newPanel&lt;/strong&gt;
        Type: &lt;a&gt;jQuery&lt;/a&gt; The panel that is about to be activated.&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;oldPanel&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The panel that is about
        to be deactivated.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="63" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'tabsbeforeactivate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="87" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QTabs_BeforeLoadEvent</name>
      <full_name>\QTabs_BeforeLoadEvent</full_name>
      <docblock line="65">
        <description>&lt;p&gt;Triggered when a remote tab is about to be loaded, after the
		&lt;a&gt;&lt;code&gt;beforeActivate&lt;/code&gt;&lt;/a&gt; event.</description>
        <long-description>&lt;p&gt;Can be canceled to prevent the
        tab panel from loading content; though the panel will still be activated.
        This event is triggered just before the Ajax request is made, so
        modifications can be made to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.jqXHR&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.ajaxSettings&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;.&lt;/p&gt;                &lt;p&gt;&lt;em&gt;Note: Although
        &lt;pre&gt;&lt;code&gt;ui.ajaxSettings&lt;/code&gt;&lt;/pre&gt; is provided and can be modified, some of these
        settings have already been processed by jQuery. For example,
        &lt;a&gt;prefilters&lt;/a&gt; have been applied, &lt;pre&gt;&lt;code&gt;data&lt;/code&gt;&lt;/pre&gt; has been processed,
        and &lt;pre&gt;&lt;code&gt;type&lt;/code&gt;&lt;/pre&gt; has been determined. The &lt;pre&gt;&lt;code&gt;beforeLoad&lt;/code&gt;&lt;/pre&gt;
        event occurs at the same time, and therefore has the same restrictions, as
        the &lt;pre&gt;&lt;code&gt;beforeSend&lt;/code&gt;&lt;/pre&gt; callback from
        &lt;a&gt;&lt;pre&gt;&lt;code&gt;jQuery.ajax()&lt;/code&gt;&lt;/pre&gt;&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt;
        Type: &lt;a&gt;Object&lt;/a&gt;  &lt;ul&gt;&lt;li&gt;&lt;strong&gt;tab&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The
        tab that is being loaded.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;panel&lt;/strong&gt; Type:
        &lt;a&gt;jQuery&lt;/a&gt; The panel which will be populated by the Ajax response.&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;jqXHR&lt;/strong&gt; Type: &lt;a&gt;jqXHR&lt;/a&gt; The &lt;pre&gt;&lt;code&gt;jqXHR&lt;/code&gt;&lt;/pre&gt; object
        that is requesting the content.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;ajaxSettings&lt;/strong&gt;
        Type: &lt;a&gt;Object&lt;/a&gt; The settings that will be used by
        &lt;a&gt;&lt;pre&gt;&lt;code&gt;jQuery.ajax&lt;/code&gt;&lt;/pre&gt;&lt;/a&gt; to request the content.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="88" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'tabsbeforeload'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="98" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QTabs_CreateEvent</name>
      <full_name>\QTabs_CreateEvent</full_name>
      <docblock line="90">
        <description>Triggered when the tabs are created.</description>
        <long-description>&lt;p&gt;If the tabs are collapsed,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.tab&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.panel&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will be empty jQuery
        objects.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;  &lt;ul&gt;&lt;li&gt;&lt;strong&gt;tab&lt;/strong&gt;
        Type: &lt;a&gt;jQuery&lt;/a&gt; The active tab.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;panel&lt;/strong&gt; Type:
        &lt;a&gt;jQuery&lt;/a&gt; The active panel.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="99" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'tabscreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="108" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QTabs_LoadEvent</name>
      <full_name>\QTabs_LoadEvent</full_name>
      <docblock line="101">
        <description>Triggered after a remote tab has been loaded.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;tab&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The tab that was just
		loaded.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;panel&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The panel which
		was just populated by the Ajax response.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="109" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'tabsload'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="190" package="Controls\Base">
      <extends>\QPanel</extends>
      <name>QTabsGen</name>
      <full_name>\QTabsGen</full_name>
      <docblock line="114">
        <description>Generated QTabsGen class.</description>
        <long-description>&lt;p&gt;This is the QTabsGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QTabsBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="114" name="see" description="\global\QTabsBase" refers="\global\QTabsBase"/>
        <tag line="114" name="package" description="Controls\Base"/>
        <tag line="114" name="property" description="Which panel is currently open.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: Setting&#10;&#9;&#9;&lt;code&gt;active&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will collapse all panels. This&#10;&#9;&#9;requires the &lt;a&gt;&lt;code&gt;collapsible&lt;/code&gt;&lt;/a&gt; option to be&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Integer&lt;/strong&gt;: The zero-based index&#10;&#9;&#9;of the panel that is active (open). A negative value selects panels going&#10;&#9;&#9;backward from the last panel.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Active">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="114" name="property" description="When set to &lt;code&gt;true&lt;/code&gt;, the active panel can be closed." type="boolean" variable="$Collapsible">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="114" name="property" description="Which tabs are disabled.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: Enable or disable all&#10;&#9;&#9;tabs.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Array&lt;/strong&gt;: An array containing the zero-based&#10;&#9;&#9;indexes of the tabs that should be disabled, e.g., &lt;code&gt;[ 0, 2 ]&lt;/code&gt;&#10;&#9;&#9;would disable the first and third tab.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Disabled">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="114" name="property" description="The type of event that the tabs should react to in order to activate the&#10;&#9;&#9;tab. To activate on hover, use &lt;code&gt;&quot;mouseover&quot;&lt;/code&gt;." type="string" variable="$Event">
          <type by_reference="false">string</type>
        </tag>
        <tag line="114" name="property" description="Controls the height of the tabs widget and each panel. Possible values:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;&lt;code&gt;&quot;auto&quot;&lt;/code&gt;: All panels will be set to the height of&#10;&#9;&#9;the tallest panel.&lt;/li&gt; &#9;&#9;&#9;&#9;&#9;&lt;li&gt;&lt;code&gt;&quot;fill&quot;&lt;/code&gt;: Expand to the&#10;&#9;&#9;available height based on the tabs' parent height.&lt;/li&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;li&gt;&lt;code&gt;&quot;content&quot;&lt;/code&gt;: Each panel will be only as tall as its&#10;&#9;&#9;content.&lt;/li&gt;&lt;/ul&gt;" type="string" variable="$HeightStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="114" name="property" description="If and how to animate the hiding of the panel.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;:  &#9;&#9;&#9;When set to&#10;&#9;&#9;&lt;code&gt;false&lt;/code&gt;, no animation will be used and the panel will be hidden&#10;&#9;&#9;immediately. &#9;&#9;&#9;When set to &lt;code&gt;true&lt;/code&gt;, the panel will fade out with&#10;&#9;&#9;the default duration and the default easing.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;:  &#9;&#9;&#9;The panel will fade out with the specified&#10;&#9;&#9;duration and the default easing.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;:  &#9;&#9;&#9;The&#10;&#9;&#9;panel will be hidden using the specified effect. &#9;&#9;&#9;The value can either be&#10;&#9;&#9;the name of a built-in jQuery animateion method, such as&#10;&#9;&#9;&lt;code&gt;&quot;slideUp&quot;&lt;/code&gt;, or the name of a jQuery UI effect, such as&#10;&#9;&#9;&lt;code&gt;&quot;fold&quot;&lt;/code&gt;. &#9;&#9;&#9;In either case the effect will be used with the&#10;&#9;&#9;default duration and the default easing.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;:&#10;&#9;&#9;If the value is an object, then &lt;code&gt;effect&lt;/code&gt;, &lt;code&gt;duration&lt;/code&gt;,&#10;&#9;&#9;and &lt;code&gt;easing&lt;/code&gt; properties may be provided. If the&#10;&#9;&#9;&lt;code&gt;effect&lt;/code&gt; property contains the name of a jQuery method, then&#10;&#9;&#9;that method will be used; otherwise it is assumed to be the name of a&#10;&#9;&#9;jQuery UI effect. When using a jQuery UI effect that supports additional&#10;&#9;&#9;settings, you may include those settings in the object and they will be&#10;&#9;&#9;passed to the effect. If &lt;code&gt;duration&lt;/code&gt; or &lt;code&gt;easing&lt;/code&gt; is&#10;&#9;&#9;omitted, then the default values will be used. If &lt;code&gt;effect&lt;/code&gt; is&#10;&#9;&#9;omitted, then &lt;code&gt;&quot;fadeOut&quot;&lt;/code&gt; will be used.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Hide">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="114" name="property" description="If and how to animate the showing of the panel.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;:  &#9;&#9;&#9;When set to&#10;&#9;&#9;&lt;code&gt;false&lt;/code&gt;, no animation will be used and the panel will be shown&#10;&#9;&#9;immediately. &#9;&#9;&#9;When set to &lt;code&gt;true&lt;/code&gt;, the panel will fade in with&#10;&#9;&#9;the default duration and the default easing.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;:  &#9;&#9;&#9;The panel will fade in with the specified&#10;&#9;&#9;duration and the default easing.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;:  &#9;&#9;&#9;The&#10;&#9;&#9;panel will be shown using the specified effect. &#9;&#9;&#9;The value can either be&#10;&#9;&#9;the name of a built-in jQuery animateion method, such as&#10;&#9;&#9;&lt;code&gt;&quot;slideDown&quot;&lt;/code&gt;, or the name of a jQuery UI effect, such as&#10;&#9;&#9;&lt;code&gt;&quot;fold&quot;&lt;/code&gt;. &#9;&#9;&#9;In either case the effect will be used with the&#10;&#9;&#9;default duration and the default easing.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;:&#10;&#9;&#9;If the value is an object, then &lt;code&gt;effect&lt;/code&gt;, &lt;code&gt;duration&lt;/code&gt;,&#10;&#9;&#9;and &lt;code&gt;easing&lt;/code&gt; properties may be provided. If the&#10;&#9;&#9;&lt;code&gt;effect&lt;/code&gt; property contains the name of a jQuery method, then&#10;&#9;&#9;that method will be used; otherwise it is assumed to be the name of a&#10;&#9;&#9;jQuery UI effect. When using a jQuery UI effect that supports additional&#10;&#9;&#9;settings, you may include those settings in the object and they will be&#10;&#9;&#9;passed to the effect. If &lt;code&gt;duration&lt;/code&gt; or &lt;code&gt;easing&lt;/code&gt; is&#10;&#9;&#9;omitted, then the default values will be used. If &lt;code&gt;effect&lt;/code&gt; is&#10;&#9;&#9;omitted, then &lt;code&gt;&quot;fadeIn&quot;&lt;/code&gt; will be used.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Show">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="191" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="192" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="194" namespace="global" package="Default">
        <name>$mixActive</name>
        <default/>
        <docblock line="193">
          <description/>
          <long-description/>
          <tag line="193" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="196" namespace="global" package="Default">
        <name>$blnCollapsible</name>
        <default>null</default>
        <docblock line="195">
          <description/>
          <long-description/>
          <tag line="195" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="198" namespace="global" package="Default">
        <name>$mixDisabled</name>
        <default>null</default>
        <docblock line="197">
          <description/>
          <long-description/>
          <tag line="197" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="200" namespace="global" package="Default">
        <name>$strEvent</name>
        <default>null</default>
        <docblock line="199">
          <description/>
          <long-description/>
          <tag line="199" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="202" namespace="global" package="Default">
        <name>$strHeightStyle</name>
        <default>null</default>
        <docblock line="201">
          <description/>
          <long-description/>
          <tag line="201" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="204" namespace="global" package="Default">
        <name>$mixHide</name>
        <default>null</default>
        <docblock line="203">
          <description/>
          <long-description/>
          <tag line="203" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="206" namespace="global" package="Default">
        <name>$mixShow</name>
        <default>null</default>
        <docblock line="205">
          <description/>
          <long-description/>
          <tag line="205" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="208" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="208">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="208">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="217" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="230" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="234" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="258" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="249">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="249" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="249" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="249" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="258">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="275" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="270">
          <description>Removes the tabs functionality completely.</description>
          <long-description>&lt;p&gt;This will return the element
back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="282" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="278">
          <description>Disables all tabs.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="293" package="Controls\Base">
        <name>Disable1</name>
        <full_name>Disable1</full_name>
        <docblock line="285">
          <description>Disables a tab.</description>
          <long-description>&lt;p&gt;The selected tab cannot be disabled. To disable more than
one tab at once, set the &lt;a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/a&gt; option:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(
"#tabs" ).tabs( "option", "disabled", [ 1, 2, 3 ]
)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt; Type: &lt;a&gt;Number&lt;/a&gt; or
&lt;a&gt;String&lt;/a&gt; Which tab to disable.&lt;/li&gt;&lt;/ul&gt;</long-description>
          <tag line="285" name="param" description="" type="\" variable="$index"/>
        </docblock>
        <argument line="293">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="300" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="296">
          <description>Enables all tabs.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="310" package="Controls\Base">
        <name>Enable1</name>
        <full_name>Enable1</full_name>
        <docblock line="303">
          <description>Enables a tab.</description>
          <long-description>&lt;p&gt;To enable more than one tab at once reset the disabled
property like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$( "#example" ).tabs( "option", "disabled", []
);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt; Type: &lt;a&gt;Number&lt;/a&gt; or
&lt;a&gt;String&lt;/a&gt; Which tab to enable.&lt;/li&gt;&lt;/ul&gt;</long-description>
          <tag line="303" name="param" description="" type="\" variable="$index"/>
        </docblock>
        <argument line="310">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="318" package="Controls\Base">
        <name>Load</name>
        <full_name>Load</full_name>
        <docblock line="313">
          <description>Loads the panel content of a remote tab.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;
Type: &lt;a&gt;Number&lt;/a&gt; or &lt;a&gt;String&lt;/a&gt; Which tab to load.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="313" name="param" description="" type="\" variable="$index"/>
        </docblock>
        <argument line="318">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="327" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="321">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="321" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="327">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="334" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="330">
          <description>Gets an object containing key/value pairs representing the current tabs
options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="346" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="337">
          <description>Sets the value of the tabs option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="337" name="param" description="" type="\" variable="$optionName"/>
          <tag line="337" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="346">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="346">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="354" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="349">
          <description>Sets one or more options for the tabs.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="349" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="354">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="363" package="Controls\Base">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="357">
          <description>Process any tabs that were added or removed directly in the DOM and
recompute the height of the tab panels.</description>
          <long-description>&lt;p&gt;Results depend on the content and
the &lt;a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heightStyle&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/a&gt; option.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not
accept any arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="368" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="368">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="387" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="387">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="387">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="191" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="192" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="193" code="50019">No short description for property $mixActive</critical>
      <critical line="195" code="50019">No short description for property $blnCollapsible</critical>
      <critical line="197" code="50019">No short description for property $mixDisabled</critical>
      <critical line="199" code="50019">No short description for property $strEvent</critical>
      <critical line="201" code="50019">No short description for property $strHeightStyle</critical>
      <critical line="203" code="50019">No short description for property $mixHide</critical>
      <critical line="205" code="50019">No short description for property $mixShow</critical>
      <error line="208" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="217" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="230" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="234" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="238" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="368" code="50010">No DocBlock was found for method __get()</error>
      <error line="387" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDataGridBase.class.php" hash="3f5cdff0bdddef9adb90640c6090c5ef" package="Controls">
    <docblock line="2">
      <description>This file contains the QDataGridBase and QDataGridRow class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <function namespace="global" line="19" package="Controls">
      <name>DataGridEvalHandleError</name>
      <full_name>\DataGridEvalHandleError</full_name>
      <docblock line="8">
        <description>Due to the fact that DataGrid's will perform php eval's on anything that is back-ticked within each column/row's
DataGridColumn::HTML, we need to set up this special DataGridEvalHandleError error handler to correctly report
errors that happen.</description>
        <long-description/>
        <tag line="8" name="global" description="string $__exc_dtg_errstr"/>
        <tag line="8" name="param" description="" type="mixed" variable="$__exc_errno">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="param" description="" type="string" variable="$__exc_errstr">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="param" description="" type="string" variable="$__exc_errfile">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="param" description="" type="string" variable="$__exc_errline">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="19">
        <name>$__exc_errno</name>
        <default/>
        <type/>
      </argument>
      <argument line="19">
        <name>$__exc_errstr</name>
        <default/>
        <type/>
      </argument>
      <argument line="19">
        <name>$__exc_errfile</name>
        <default/>
        <type/>
      </argument>
      <argument line="19">
        <name>$__exc_errline</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="46" package="Controls">
      <extends>\QControl</extends>
      <name>QDataGridRow</name>
      <full_name>\QDataGridRow</full_name>
      <docblock line="41">
        <description/>
        <long-description/>
        <tag line="41" name="package" description="Controls"/>
        <tag line="41" name="property-write" description="" type="\QDataGridRowStyle" variable="$Style">
          <type by_reference="false">\QDataGridRowStyle</type>
        </tag>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Controls">
        <name>GetHtml</name>
        <full_name>GetHtml</full_name>
        <argument line="47">
          <name>$strColumnsHtml</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="56" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="63">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="242" package="Controls">
      <extends>\QPaginatedControl</extends>
      <name>QDataGridBase</name>
      <full_name>\QDataGridBase</full_name>
      <docblock line="99">
        <description>NOTE: Due to the use of "Eval", DataGrid is currently being redone to not use EVAL.</description>
        <long-description>&lt;p&gt;A new datagrid control will be released in Beta 2 of the framework, which will have a much
more secure and robust render handler.  Naturally, generated ListForms will be updated, accordingly,
to work with the new, improved DataGrid class.&lt;/p&gt;

&lt;p&gt;DataGrid control is used to display tabular information (e.g. lists)&lt;/p&gt;

&lt;p&gt;The control itself will display things based off of an array of objects that gets set as the "Data Source".
It is particularly useful when combined with the Class::LoadArrayByXXX() functions or the Class::LoadAll()
that is generated by the CodeGen framework, or when combined with custom Class ArrayLoaders that you define
youself, but who's structure is based off of the CodeGen framework.&lt;/p&gt;

&lt;p&gt;The DataGrid essentially is a&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;table&gt;. For each item in a datasource's Array, a row (&lt;tr&gt;) will be generated.
You can define any number of DataGridColumns which will result in a &lt;td&gt; for each row.
Within the DataGridColumn, you can specify the DataGridColumn::Html that should be displayed.&lt;/p&gt;

&lt;p&gt;The HTML looks for the special back-tick character "&lt;code&gt;", and will do PHP Eval's on antyhing within a pair of&lt;/code&gt; `.
Moreover, the special variable $_ROW can be used to access the actual contents of that particular row's data
in the main data source array.&lt;/p&gt;

&lt;p&gt;So, for example, supposed the following:
        $strSimpleArray = {"Blah", "Foo", "Baz", "Fun"};
        $dtgDataGrid = new DataGrid("dtgDataGrid");
        $dtgDataGrid-&gt;AddColumn("Column Heading", "Contents: &lt;code&gt;$_ROW&lt;/code&gt;");
        $dtgDataGrid-&gt;DataSource = $strSimpleArray;
This will generate a simple 4-row, 1-column table that contains the following:
     Column Heading
     --------------
     Contents: Blah
     Contents: Foo
     Contents: Baz
     Contents: Fun
In this case, $_ROW is a string, itself, which is each item in the DataSource's array.&lt;/p&gt;

&lt;p&gt;Utilizing the back-tick and $_ROW feature, you can do infinitely more complicatd display functionality:
        $dtgDataGrid = new DataGrid("dtgDataGrid");
        $dtgDataGrid-&gt;AddColumn("Title", "&lt;b&gt;&lt;code&gt;$_ROW-&amp;gt;Title&lt;/code&gt;&lt;/b&gt;");
        $dtgDataGrid-&gt;AddColumn("Calculated Result", "&lt;code&gt;DisplayResults($_ROW-&amp;gt;Calculate())&lt;/code&gt;");
        $dtgDataGrid-&gt;DataSource = Foo::LoadAll();
This could then generate a table with much more data-rich information:
     Title             Calculated Result
     ----------------- --------------------
     Some Title Here   $28,298.24
     Foo Baz Bar       $18,000.00
     Blah              (None)
In this case, $_ROW is actually a Foo object.&lt;/p&gt;

&lt;p&gt;IMPORTANT: Please note that while all properties can/should be set up only once within the form's
!IsPostBack() clause, the DataSource &lt;strong&gt;MUST&lt;/strong&gt; be set &lt;strong&gt;EVERY TIME&lt;/strong&gt;.  The contents of DataSource
do NOT persist from postback to postback.&lt;/p&gt;

&lt;p&gt;The appearance of the datagrid control appears to be complicated, but keep in mind that it simply
utlizes the cascading nature of how browsers render tables based on styles assigned to
the&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;table&gt;, &lt;tr&gt;, and &lt;td&gt;.  In short:
    Appearance properties defined to the DataGrid, itself, show up as HTML Attributes
    and CSS Styles within the&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;table&gt; tag.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Appearance properties defined to a specific row's DataGridRowStyle will show up as
HTML attributes within that specific row's &amp;lt;tr&amp;gt; tag.

Appearance properties defined to a DataGridColumn will show up as HTML attributes
within that specific row's &amp;lt;td&amp;gt; tag.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, attributes will only show up if it is defined at that particular level.  So if you define a background color
for a DataGridRowStyle for a particular row, but not for a DataGridColumn or for the DataGrid in general, that
background style will only show up in that row.&lt;/p&gt;

&lt;p&gt;And due to the cascaiding nature of how browsers render tables, any undefined appearance property will simply
inherit from the parent (where a &lt;td&gt;'s parent is the &lt;tr&gt;, and the &lt;tr&gt;'s parent is the&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;table&gt;,
and any defined appearance property will simply override whatever was defined by the parent.&lt;/p&gt;

&lt;p&gt;Sorting
Whether or not a column can be sorted depends on whether or not you define a SortByCommand (and
subsequently a ReverseSortByComamnd) on the DataGridColumn itself.  This SortByCommand is meant
to be the SQL syntax used in an "ORDER BY" clause of a SQL query.  This fits in really well
with the CodeGen Framework's Class::LoadArrayByXXX() and Class::LoadAll() which takes "$strSortInfo"
as an optional parameter.&lt;/p&gt;

&lt;p&gt;If a DataGrid is being sorted by a specific column, DataGrid::SortInfo will return to you the contents
of DataGridColumn::SortByCommand (or ReverseSortByCommand if it's a reverse sort) for the specific
column being sorted by.  Therefore, you can set up your data source like:
    $dtgDataGrid-&gt;DataSource = Foo::LoadAll($dtgDataGrid-&gt;SortInfo);&lt;/p&gt;

&lt;p&gt;Pagination
Pagination can be toggled on and off with the DataGrid::Paginate flag.  When enabling pagination, you
must specify how many items, TOTAL, are in the full list (DataGrid::TotalItemCount).  The DataGrid will
then automatically calculate the SQL Limit information (as used in a "LIMIT" clause of a SQL query) to
be used when querying a specific subset of the total list.  As with sorting, this fits really well
with the CodeGen Framework's LoadArray methods which takes $strLimitInfo" as an optional parameter.&lt;/p&gt;

&lt;p&gt;Moreover, the codegen also auto-generates CountBy methods for every LoadAll/LoadArray method it generates
to assist with the DataGrid::TotalItemCount property:
    $dtgDataGrid-&gt;TotalItemCount = Foo::CountAll();
    $dtgDataGrid-&gt;DataSource = Foo::LoadAll($dtgDataGrid-&gt;SortInfo, $dtgDataGrid-&gt;LimitInfo);&lt;/p&gt;

&lt;p&gt;Due to a bug with PHP, you cannot set a property of a property.  DataGrid's AlternateRowStyle, HeaderRowStyle and RowStyle
are obviously instances of DataGridRowStyle objects which have properties in and of themselves.
So unfortuantely, the following code will &lt;strong&gt;NOT&lt;/strong&gt; work:
    $dtgDataGrid-&gt;RowStyle-&gt;BackColor = "blue";
Instead, you will need to do the following:
    $objRowStyle = $dtgDataGrid-&gt;RowStyle;
    $objRowStyle-&gt;BackColor = "blue";&lt;/p&gt;</long-description>
        <tag line="99" name="package" description="Controls"/>
        <tag line="99" name="property" description="is the DataGridRowStyle object that defines how &quot;alternating rows&quot; should be displayed" type="\QDataGridRowStyle" variable="$AlternateRowStyle">
          <type by_reference="false">\QDataGridRowStyle</type>
        </tag>
        <tag line="99" name="property" description="defines the BorderCollapse css style for the table" type="string" variable="$BorderCollapse">
          <type by_reference="false">string</type>
        </tag>
        <tag line="99" name="property" description="is the DataGridRowStyle object that defines how the &quot;header row&quot; should be displayed (attributes that get rendred in the header row's &lt;tr&gt;)" type="\QDataGridRowStyle" variable="$HeaderRowStyle">
          <type by_reference="false">\QDataGridRowStyle</type>
        </tag>
        <tag line="99" name="property" description="" type="\QDataGridRowStyle" variable="$FilterRowStyle">
          <type by_reference="false">\QDataGridRowStyle</type>
        </tag>
        <tag line="99" name="property" description="is the DataGridRowStyle object that defines how links, specifically, in the header row should be displayed.  Basically, anything defined here will show up as html attributes and css styles within the '&lt;a href=&quot;&quot;&gt;' tag of the link, itself, in the header.  Links in the header ONLY GET DISPLAYED when a column is sortable" type="\QDataGridRowStyle" variable="$HeaderLinkStyle">
          <type by_reference="false">\QDataGridRowStyle</type>
        </tag>
        <tag line="99" name="property" description="is the main or &quot;default&quot; DataGridRowStyle for the entire table.  Any overriding row style (see &quot;OverrideRowStyle(int, DataGridRowStyle)&quot; below) or any appearance properties set in AlternateRowStyle or HeaderRowStyle will be applied in those specific situations. Any appearance properties NOT set in ovverrides, alternate, or header will simply default to what RowStyle has defined." type="\QDataGridRowStyle" variable="$RowStyle">
          <type by_reference="false">\QDataGridRowStyle</type>
        </tag>
        <tag line="99" name="property" description="refers the the HTML CellPadding attribute of the &lt;table&gt;" type="integer" variable="$CellPadding">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="99" name="property" description="refers the the HTML CellSpacing attribute of the &lt;table&gt;" type="integer" variable="$CellSpacing">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="99" name="property" description="refers the the HTML rules attribute of the &lt;table&gt;" type="string" variable="$GridLines">
          <type by_reference="false">string</type>
        </tag>
        <tag line="99" name="property" description="is the flag of whether or not to show the Header row" type="boolean" variable="$ShowHeader">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="99" name="property" description="" type="boolean" variable="$ShowFooter">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="99" name="property" description="" type="boolean" variable="$ShowFilter">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="99" name="property" description="" type="boolean" variable="$ShowFilterButton">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="99" name="property" description="" type="boolean" variable="$ShowFilterResetButton">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="99" name="property" description="" type="mixed" variable="$OrderByClause">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="99" name="property" description="" type="mixed" variable="$SortInfo">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="99" name="property-read" description="is the current row index that is being rendered.  Useful for render-helper functions that may get called when rendering the datagrid, itself" type="integer" variable="$CurrentRowIndex">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="99" name="property" description="is the current column that is being &quot;sorted by&quot; (or -1 if none)" type="integer" variable="$SortColumnIndex">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="99" name="property" description="specifies the direction of that sort, 0 for SortBy, and 1 for ReverseSortBy" type="integer" variable="$SortDirection">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="99" name="property" description="" type="string" variable="$LabelForNoneFound">
          <type by_reference="false">string</type>
        </tag>
        <tag line="99" name="property" description="" type="string" variable="$LabelForOneFound">
          <type by_reference="false">string</type>
        </tag>
        <tag line="99" name="property" description="" type="string" variable="$LabelForMultipleFound">
          <type by_reference="false">string</type>
        </tag>
        <tag line="99" name="property" description="" type="string" variable="$LabelForPaginated">
          <type by_reference="false">string</type>
        </tag>
        <tag line="99" name="property" description="" type="mixed" variable="$Owner">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="99" name="property" description="" type="mixed" variable="$FilterInfo">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="99" name="property" description="" type="mixed" variable="$Conditions">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="99" name="property-write" description="" type="\QPaginatorBase" variable="$Paginator">
          <type by_reference="false">\QPaginatorBase</type>
        </tag>
        <tag line="99" name="property-write" description="" type="\QPaginatorBase" variable="$PaginatorAlternate">
          <type by_reference="false">\QPaginatorBase</type>
        </tag>
        <tag line="99" name="property-write" description="" type="boolean" variable="$UseAjax">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="99" name="property-write" description="" type="string" variable="$RowActionParameterHtml">
          <type by_reference="false">string</type>
        </tag>
        <tag line="99" name="property-read" description="" type="\QButton" variable="$FilterButton">
          <type by_reference="false">\QButton</type>
        </tag>
        <tag line="99" name="property-read" description="" type="\QWaitIcon" variable="$WaitIcon">
          <type by_reference="false">\QWaitIcon</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="244" namespace="global" package="Default">
        <name>$objAlternateRowStyle</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="245" namespace="global" package="Default">
        <name>$strBorderCollapse</name>
        <default>\QBorderCollapse::NotSet</default>
      </property>
      <property final="false" static="false" visibility="protected" line="246" namespace="global" package="Default">
        <name>$objHeaderRowStyle</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="247" namespace="global" package="Default">
        <name>$objFilterRowStyle</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="248" namespace="global" package="Default">
        <name>$objOverrideRowStyleArray</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="249" namespace="global" package="Default">
        <name>$objHeaderLinkStyle</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="250" namespace="global" package="Default">
        <name>$objRowStyle</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="251" namespace="global" package="Default">
        <name>$objWaitIcon</name>
        <default>'default'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="254" namespace="global" package="Default">
        <name>$intCellPadding</name>
        <default>-1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="255" namespace="global" package="Default">
        <name>$intCellSpacing</name>
        <default>-1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="256" namespace="global" package="Default">
        <name>$strGridLines</name>
        <default>\QGridLines::None</default>
      </property>
      <property final="false" static="false" visibility="protected" line="257" namespace="global" package="Default">
        <name>$blnShowHeader</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="258" namespace="global" package="Default">
        <name>$blnShowFilter</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="259" namespace="global" package="Default">
        <name>$blnShowFilterButton</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="260" namespace="global" package="Default">
        <name>$blnShowFilterResetButton</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="261" namespace="global" package="Default">
        <name>$blnShowFooter</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="265" namespace="global" package="Default">
        <name>$objColumnArray</name>
        <default/>
        <docblock line="264">
          <description/>
          <long-description/>
          <tag line="264" name="var" description="" type="\QDataGridColumn[]">
            <type by_reference="false">\QDataGridColumn[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="267" namespace="global" package="Default">
        <name>$intRowCount</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="268" namespace="global" package="Default">
        <name>$intCurrentRowIndex</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="269" namespace="global" package="Default">
        <name>$intSortColumnIndex</name>
        <default>-1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="270" namespace="global" package="Default">
        <name>$intCurrentColumnId</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="271" namespace="global" package="Default">
        <name>$intSortDirection</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="273" namespace="global" package="Default">
        <name>$strLabelForNoneFound</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="274" namespace="global" package="Default">
        <name>$strLabelForOneFound</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="275" namespace="global" package="Default">
        <name>$strLabelForMultipleFound</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="276" namespace="global" package="Default">
        <name>$strLabelForPaginated</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="278" namespace="global" package="Default">
        <name>$strRowActionParameterHtml</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="280" namespace="global" package="Default">
        <name>$objRowEventArray</name>
        <default>array()</default>
        <docblock line="279">
          <description/>
          <long-description/>
          <tag line="279" name="var" description="" type="\QEvent[]">
            <type by_reference="false">\QEvent[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="281" namespace="global" package="Default">
        <name>$objRowActionArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="283" namespace="global" package="Default">
        <name>$objOwner</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="285" namespace="global" package="Default">
        <name>$btnFilter</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="286" namespace="global" package="Default">
        <name>$btnFilterResetArray</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="288" package="Controls">
        <name>AddRowAction</name>
        <full_name>AddRowAction</full_name>
        <argument line="288">
          <name>$objEvent</name>
          <default/>
          <type/>
        </argument>
        <argument line="288">
          <name>$objAction</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="293" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="293">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="293">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="329" package="Controls">
        <name>AddColumn</name>
        <full_name>AddColumn</full_name>
        <argument line="329">
          <name>$objColumn</name>
          <default/>
          <type>\QDataGridColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="334" package="Controls">
        <name>AddColumnAt</name>
        <full_name>AddColumnAt</full_name>
        <argument line="334">
          <name>$intColumnIndex</name>
          <default/>
          <type/>
        </argument>
        <argument line="334">
          <name>$objColumn</name>
          <default/>
          <type>\QDataGridColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="355" package="Controls">
        <name>RemoveColumn</name>
        <full_name>RemoveColumn</full_name>
        <argument line="355">
          <name>$intColumnIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="370" package="Controls">
        <name>RemoveColumnByName</name>
        <full_name>RemoveColumnByName</full_name>
        <argument line="370">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="379" package="Controls">
        <name>RemoveColumnsByName</name>
        <full_name>RemoveColumnsByName</full_name>
        <argument line="379">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="388" package="Controls">
        <name>RemoveAllColumns</name>
        <full_name>RemoveAllColumns</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="393" package="Controls">
        <name>GetAllColumns</name>
        <full_name>GetAllColumns</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="397" package="Controls">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="397">
          <name>$intColumnIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="402" package="Controls">
        <name>GetColumnByName</name>
        <full_name>GetColumnByName</full_name>
        <argument line="402">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="408" package="Controls">
        <name>GetColumnsByName</name>
        <full_name>GetColumnsByName</full_name>
        <argument line="408">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="418" package="Controls">
        <name>OverrideRowStyle</name>
        <full_name>OverrideRowStyle</full_name>
        <argument line="418">
          <name>$intRowIndex</name>
          <default/>
          <type/>
        </argument>
        <argument line="418">
          <name>$objStyle</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="429" package="Controls">
        <name>ParseColumnHtml</name>
        <full_name>ParseColumnHtml</full_name>
        <argument line="429">
          <name>$objColumn</name>
          <default/>
          <type>\QDataGridColumn</type>
        </argument>
        <argument line="429">
          <name>$objObject</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="434" package="Controls">
        <name>ParseHtml</name>
        <full_name>ParseHtml</full_name>
        <argument line="434">
          <name>$strHtml</name>
          <default/>
          <type/>
        </argument>
        <argument line="434">
          <name>$objControl</name>
          <default/>
          <type/>
        </argument>
        <argument line="434">
          <name>$objColumn</name>
          <default/>
          <type/>
        </argument>
        <argument line="434">
          <name>$objObject</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="490" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="492" package="Controls">
        <name>GetAttributes</name>
        <full_name>GetAttributes</full_name>
        <argument line="492">
          <name>$blnIncludeCustom</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="492">
          <name>$blnIncludeAction</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="518" package="Controls">
        <name>GetStyleAttributes</name>
        <full_name>GetStyleAttributes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="530" package="Controls">
        <name>Sort_Click</name>
        <full_name>Sort_Click</full_name>
        <argument line="530">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="530">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="530">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="572" package="Controls">
        <name>GetPaginatorRowHtml</name>
        <full_name>GetPaginatorRowHtml</full_name>
        <argument line="572">
          <name>$objPaginator</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="599" package="Controls">
        <name>GetHeaderSortedHtml</name>
        <full_name>GetHeaderSortedHtml</full_name>
        <argument line="599">
          <name>$objColumn</name>
          <default/>
          <type>\QDataGridColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="610" package="Controls">
        <name>GetHeaderRowHtml</name>
        <full_name>GetHeaderRowHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="641" package="Controls">
        <name>GetDataGridRowHtml</name>
        <full_name>GetDataGridRowHtml</full_name>
        <argument line="641">
          <name>$objObject</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="699" package="Controls">
        <name>GetFooterRowHtml</name>
        <full_name>GetFooterRowHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="701" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="754" package="Controls">
        <name>PersistPrepare</name>
        <full_name>PersistPrepare</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="763" package="Controls">
        <name>GetFilterRowHtml</name>
        <full_name>GetFilterRowHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="816" package="Controls">
        <name>GetColumnFilterControlId</name>
        <full_name>GetColumnFilterControlId</full_name>
        <argument line="816">
          <name>$objColumn</name>
          <default/>
          <type>\QDataGridColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="822" package="Controls">
        <name>GetFilterControl</name>
        <full_name>GetFilterControl</full_name>
        <argument line="822">
          <name>$objColumn</name>
          <default/>
          <type>\QDataGridColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="832" package="Controls">
        <name>GetResetButton</name>
        <full_name>GetResetButton</full_name>
        <argument line="832">
          <name>$objColumn</name>
          <default/>
          <type>\QDataGridColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="854" package="Controls">
        <name>CreateFilterControl</name>
        <full_name>CreateFilterControl</full_name>
        <argument line="854">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="854">
          <name>$objColumn</name>
          <default/>
          <type>\QDataGridColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="896" package="Controls">
        <name>GetFilterControlValue</name>
        <full_name>GetFilterControlValue</full_name>
        <argument line="896">
          <name>$strFilterType</name>
          <default/>
          <type/>
        </argument>
        <argument line="896">
          <name>$ctlControl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="921" package="Controls">
        <name>filterTextBox_Create</name>
        <full_name>filterTextBox_Create</full_name>
        <docblock line="913">
          <description>This function creates a textbox suitable for the filter bar</description>
          <long-description/>
          <tag line="913" name="param" description="id based on the column that the control is contained" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="913" name="param" description="The name to give the textbox" type="string" variable="$strControlName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="913" name="param" description="The Columns setting to use for the textbox" type="int" variable="$columns">
            <type by_reference="false">int</type>
          </tag>
          <tag line="913" name="param" description="The text to fill the textbox with" type="string" variable="$strValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="913" name="return" description="the resulting textbox" type="\QTextBox">
            <type by_reference="false">\QTextBox</type>
          </tag>
        </docblock>
        <argument line="921">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="921">
          <name>$strControlName</name>
          <default/>
          <type/>
        </argument>
        <argument line="921">
          <name>$columns</name>
          <default/>
          <type/>
        </argument>
        <argument line="921">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="939" package="Controls">
        <name>filterListBox_Create</name>
        <full_name>filterListBox_Create</full_name>
        <docblock line="931">
          <description>This function creates a listbox suitable for the filter bar</description>
          <long-description/>
          <tag line="931" name="param" description="id based on the column that the control is contained" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="931" name="param" description="The name to give the textbox" type="string" variable="$strControlName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="931" name="param" description="A name=&gt;value array of items to add to the list" type="string[]" variable="$arrListValues">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="931" name="param" description="The value to start selected" type="string" variable="$strSelectedValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="931" name="return" description="the resulting listbox" type="\QListBox">
            <type by_reference="false">\QListBox</type>
          </tag>
        </docblock>
        <argument line="939">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="939">
          <name>$strControlName</name>
          <default/>
          <type/>
        </argument>
        <argument line="939">
          <name>$arrListValues</name>
          <default/>
          <type/>
        </argument>
        <argument line="939">
          <name>$strSelectedValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="962" package="Controls">
        <name>btnFilterReset_Create</name>
        <full_name>btnFilterReset_Create</full_name>
        <docblock line="956">
          <description>Creates the reset button for the filter row</description>
          <long-description/>
          <tag line="956" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="981" package="Controls">
        <name>btnFilter_Create</name>
        <full_name>btnFilter_Create</full_name>
        <docblock line="975">
          <description>Creates the Filter button for the filter row</description>
          <long-description/>
          <tag line="975" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1005" package="Controls">
        <name>objWaitIcon_Create</name>
        <full_name>objWaitIcon_Create</full_name>
        <docblock line="999">
          <description>Creates the objWaitIcon for this datagrid, since we don't want to use the default form one</description>
          <long-description/>
          <tag line="999" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1016" package="Controls">
        <name>btnFilter_Click</name>
        <full_name>btnFilter_Click</full_name>
        <argument line="1016">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="1016">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="1016">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1047" package="Controls">
        <name>ClearFilters</name>
        <full_name>ClearFilters</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1083" package="Controls">
        <name>btnFilterReset_Click</name>
        <full_name>btnFilterReset_Click</full_name>
        <argument line="1083">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="1083">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="1083">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1093" package="Controls">
        <name>SetFilters</name>
        <full_name>SetFilters</full_name>
        <argument line="1093">
          <name>$filters</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1118" package="Controls">
        <name>GetFilters</name>
        <full_name>GetFilters</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1132" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="1132">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1256" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="1256">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1256">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="41" code="50005">No short description for class \QDataGridRow</critical>
      <error line="47" code="50010">No DocBlock was found for method GetHtml()</error>
      <error line="56" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="57" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="58" code="50010">No DocBlock was found for method Validate()</error>
      <error line="63" code="50010">No DocBlock was found for method __set()</error>
      <error line="244" code="50018">No DocBlock was found for property $objAlternateRowStyle</error>
      <error line="245" code="50018">No DocBlock was found for property $strBorderCollapse</error>
      <error line="246" code="50018">No DocBlock was found for property $objHeaderRowStyle</error>
      <error line="247" code="50018">No DocBlock was found for property $objFilterRowStyle</error>
      <error line="248" code="50018">No DocBlock was found for property $objOverrideRowStyleArray</error>
      <error line="249" code="50018">No DocBlock was found for property $objHeaderLinkStyle</error>
      <error line="250" code="50018">No DocBlock was found for property $objRowStyle</error>
      <error line="251" code="50018">No DocBlock was found for property $objWaitIcon</error>
      <error line="254" code="50018">No DocBlock was found for property $intCellPadding</error>
      <error line="255" code="50018">No DocBlock was found for property $intCellSpacing</error>
      <error line="256" code="50018">No DocBlock was found for property $strGridLines</error>
      <error line="257" code="50018">No DocBlock was found for property $blnShowHeader</error>
      <error line="258" code="50018">No DocBlock was found for property $blnShowFilter</error>
      <error line="259" code="50018">No DocBlock was found for property $blnShowFilterButton</error>
      <error line="260" code="50018">No DocBlock was found for property $blnShowFilterResetButton</error>
      <error line="261" code="50018">No DocBlock was found for property $blnShowFooter</error>
      <critical line="264" code="50019">No short description for property $objColumnArray</critical>
      <error line="267" code="50018">No DocBlock was found for property $intRowCount</error>
      <error line="268" code="50018">No DocBlock was found for property $intCurrentRowIndex</error>
      <error line="269" code="50018">No DocBlock was found for property $intSortColumnIndex</error>
      <error line="270" code="50018">No DocBlock was found for property $intCurrentColumnId</error>
      <error line="271" code="50018">No DocBlock was found for property $intSortDirection</error>
      <error line="273" code="50018">No DocBlock was found for property $strLabelForNoneFound</error>
      <error line="274" code="50018">No DocBlock was found for property $strLabelForOneFound</error>
      <error line="275" code="50018">No DocBlock was found for property $strLabelForMultipleFound</error>
      <error line="276" code="50018">No DocBlock was found for property $strLabelForPaginated</error>
      <error line="278" code="50018">No DocBlock was found for property $strRowActionParameterHtml</error>
      <critical line="279" code="50019">No short description for property $objRowEventArray</critical>
      <error line="281" code="50018">No DocBlock was found for property $objRowActionArray</error>
      <error line="283" code="50018">No DocBlock was found for property $objOwner</error>
      <error line="285" code="50018">No DocBlock was found for property $btnFilter</error>
      <error line="286" code="50018">No DocBlock was found for property $btnFilterResetArray</error>
      <error line="288" code="50010">No DocBlock was found for method AddRowAction()</error>
      <error line="293" code="50010">No DocBlock was found for method __construct()</error>
      <error line="329" code="50010">No DocBlock was found for method AddColumn()</error>
      <error line="334" code="50010">No DocBlock was found for method AddColumnAt()</error>
      <error line="355" code="50010">No DocBlock was found for method RemoveColumn()</error>
      <error line="370" code="50010">No DocBlock was found for method RemoveColumnByName()</error>
      <error line="379" code="50010">No DocBlock was found for method RemoveColumnsByName()</error>
      <error line="388" code="50010">No DocBlock was found for method RemoveAllColumns()</error>
      <error line="393" code="50010">No DocBlock was found for method GetAllColumns()</error>
      <error line="397" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="402" code="50010">No DocBlock was found for method GetColumnByName()</error>
      <error line="408" code="50010">No DocBlock was found for method GetColumnsByName()</error>
      <error line="418" code="50010">No DocBlock was found for method OverrideRowStyle()</error>
      <error line="429" code="50010">No DocBlock was found for method ParseColumnHtml()</error>
      <error line="434" code="50010">No DocBlock was found for method ParseHtml()</error>
      <error line="490" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="492" code="50010">No DocBlock was found for method GetAttributes()</error>
      <error line="518" code="50010">No DocBlock was found for method GetStyleAttributes()</error>
      <error line="530" code="50010">No DocBlock was found for method Sort_Click()</error>
      <error line="572" code="50010">No DocBlock was found for method GetPaginatorRowHtml()</error>
      <error line="599" code="50010">No DocBlock was found for method GetHeaderSortedHtml()</error>
      <error line="610" code="50010">No DocBlock was found for method GetHeaderRowHtml()</error>
      <error line="641" code="50010">No DocBlock was found for method GetDataGridRowHtml()</error>
      <error line="699" code="50010">No DocBlock was found for method GetFooterRowHtml()</error>
      <error line="701" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="754" code="50010">No DocBlock was found for method PersistPrepare()</error>
      <error line="763" code="50010">No DocBlock was found for method GetFilterRowHtml()</error>
      <error line="816" code="50010">No DocBlock was found for method GetColumnFilterControlId()</error>
      <error line="822" code="50010">No DocBlock was found for method GetFilterControl()</error>
      <error line="832" code="50010">No DocBlock was found for method GetResetButton()</error>
      <error line="854" code="50010">No DocBlock was found for method CreateFilterControl()</error>
      <error line="896" code="50010">No DocBlock was found for method GetFilterControlValue()</error>
      <error line="1016" code="50010">No DocBlock was found for method btnFilter_Click()</error>
      <error line="1047" code="50010">No DocBlock was found for method ClearFilters()</error>
      <error line="1083" code="50010">No DocBlock was found for method btnFilterReset_Click()</error>
      <error line="1093" code="50010">No DocBlock was found for method SetFilters()</error>
      <error line="1118" code="50010">No DocBlock was found for method GetFilters()</error>
      <error line="1132" code="50010">No DocBlock was found for method __get()</error>
      <error line="1256" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QSelectableBase.class.php" hash="2b4459e840c7bde0b570645912c9ba24" package="Default">
    <docblock line="2">
      <description>Selectable Base File</description>
      <long-description>&lt;p&gt;The QSelectableBase class defined here provides an interface between the generated
QSelectableGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QSelectable.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="23" package="Controls\Base">
      <extends>\QSelectableGen</extends>
      <name>QSelectableBase</name>
      <full_name>\QSelectableBase</full_name>
      <docblock line="11">
        <description>Impelments a JQuery UI Selectable box</description>
        <long-description>&lt;p&gt;A selectable box makes the items inside of it selectable. This is a QPanel, so
whatever top level items drown inside of it will become selectable. Make sure
the items have ids.&lt;/p&gt;</long-description>
        <tag line="11" name="property" description="ControlIds of the items selected" type="Array" variable="$SelectedItems">
          <type by_reference="false">Array</type>
        </tag>
        <tag line="11" name="link" description="http://jqueryui.com/selectable/" link="http://jqueryui.com/selectable/"/>
        <tag line="11" name="package" description="Controls\Base"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$arySelectedItems</name>
        <default>null</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="55">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="55">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="108">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="25" code="50019">No short description for property $arySelectedItems</critical>
      <error line="31" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="55" code="50010">No DocBlock was found for method __set()</error>
      <error line="108" code="50010">No DocBlock was found for method __get()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QTreeNav.class.php" hash="d1c628decbdaa29917598067dbabea27" package="Controls">
    <docblock line="2">
      <description>This file contains the QTreeNav class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="24" package="Controls">
      <extends>\QControl</extends>
      <name>QTreeNav</name>
      <full_name>\QTreeNav</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="mixed" variable="$SelectedItem">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property-read" description="" type="mixed" variable="$SelectedValue">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property-read" description="" type="mixed" variable="$ChildItemArray">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property" description="" type="mixed" variable="$ItemArray">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ItemCssStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ItemSelectedCssStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ItemHoverCssStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$IndentWidth">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$ItemHeight">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$ItemWidth">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$ExpandOnSelect">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property-write" description="" type="mixed" variable="$ItemExpanded">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>'treenav.js'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$strItemCssStyle</name>
        <default>'treenav_item'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strItemSelectedCssStyle</name>
        <default>'treenav_item treenav_item_selected'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strItemHoverCssStyle</name>
        <default>'treenav_item treenav_item_hover'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$strItemSelectedHoverCssStyle</name>
        <default>'treenav_item treenav_item_hover treenav_item_selected'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$strLabelForRequired</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$strLabelForRequiredUnnamed</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$intIndentWidth</name>
        <default>15</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$intItemHeight</name>
        <default>15</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$intItemWidth</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$objChildItemArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$objItemArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="global" package="Default">
        <name>$intNextItemId</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="global" package="Default">
        <name>$objSelectedTreeNavItem</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$strLoader</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$objLoaderParent</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="global" package="Default">
        <name>$blnIsBlockElement</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="global" package="Default">
        <name>$blnExpandOnSelect</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$blnAllowHover</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="50">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Controls">
        <name>SetLoader</name>
        <full_name>SetLoader</full_name>
        <argument line="57">
          <name>$strFuncName</name>
          <default/>
          <type/>
        </argument>
        <argument line="57">
          <name>$objParent</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="63" package="Controls">
        <name>GetItemHtml</name>
        <full_name>GetItemHtml</full_name>
        <argument line="63">
          <name>$objItem</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="Controls">
        <name>AddChildItem</name>
        <full_name>AddChildItem</full_name>
        <argument line="155">
          <name>$objItem</name>
          <default/>
          <type>\QTreeNavItem</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="Controls">
        <name>AddItem</name>
        <full_name>AddItem</full_name>
        <argument line="159">
          <name>$objItem</name>
          <default/>
          <type>\QTreeNavItem</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="Controls">
        <name>GetItem</name>
        <full_name>GetItem</full_name>
        <argument line="165">
          <name>$strItemId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="177" package="Controls">
        <name>GenerateItemId</name>
        <full_name>GenerateItemId</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="Controls">
        <name>Clear</name>
        <full_name>Clear</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="192" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="215" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="231" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="255" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="255">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="289">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="289">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QTreeNav</critical>
      <error line="25" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="27" code="50018">No DocBlock was found for property $strItemCssStyle</error>
      <error line="28" code="50018">No DocBlock was found for property $strItemSelectedCssStyle</error>
      <error line="29" code="50018">No DocBlock was found for property $strItemHoverCssStyle</error>
      <error line="30" code="50018">No DocBlock was found for property $strItemSelectedHoverCssStyle</error>
      <error line="32" code="50018">No DocBlock was found for property $strLabelForRequired</error>
      <error line="33" code="50018">No DocBlock was found for property $strLabelForRequiredUnnamed</error>
      <error line="35" code="50018">No DocBlock was found for property $intIndentWidth</error>
      <error line="36" code="50018">No DocBlock was found for property $intItemHeight</error>
      <error line="37" code="50018">No DocBlock was found for property $intItemWidth</error>
      <error line="39" code="50018">No DocBlock was found for property $objChildItemArray</error>
      <error line="40" code="50018">No DocBlock was found for property $objItemArray</error>
      <error line="41" code="50018">No DocBlock was found for property $intNextItemId</error>
      <error line="42" code="50018">No DocBlock was found for property $objSelectedTreeNavItem</error>
      <error line="43" code="50018">No DocBlock was found for property $strLoader</error>
      <error line="44" code="50018">No DocBlock was found for property $objLoaderParent</error>
      <error line="46" code="50018">No DocBlock was found for property $blnIsBlockElement</error>
      <error line="47" code="50018">No DocBlock was found for property $blnExpandOnSelect</error>
      <error line="48" code="50018">No DocBlock was found for property $blnAllowHover</error>
      <error line="50" code="50010">No DocBlock was found for method __construct()</error>
      <error line="57" code="50010">No DocBlock was found for method SetLoader()</error>
      <error line="63" code="50010">No DocBlock was found for method GetItemHtml()</error>
      <error line="155" code="50010">No DocBlock was found for method AddChildItem()</error>
      <error line="159" code="50010">No DocBlock was found for method AddItem()</error>
      <error line="165" code="50010">No DocBlock was found for method GetItem()</error>
      <error line="177" code="50010">No DocBlock was found for method GenerateItemId()</error>
      <error line="183" code="50010">No DocBlock was found for method Clear()</error>
      <error line="192" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="215" code="50010">No DocBlock was found for method Validate()</error>
      <error line="231" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="255" code="50010">No DocBlock was found for method __get()</error>
      <error line="289" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDraggableBase.class.php" hash="82de1e1e7b6d5ee50d3becceb730ac3d" package="Default">
    <docblock line="2">
      <description>QDraggable Base File</description>
      <long-description>&lt;p&gt;The QDraggableBase class defined here provides an interface between the generated
QDraggableGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QDraggable.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="24" package="Controls\Base">
      <extends>\QDraggableGen</extends>
      <name>QDraggableBase</name>
      <full_name>\QDraggableBase</full_name>
      <docblock line="10">
        <description>Implements the jQuery UI Draggable capabilities on to a control.</description>
        <long-description>&lt;p&gt;This class is designed to work as a kind of add-on class to a QControl, giving its capabilities
to the control. To make a QControl draggable, simply set $ctl-&gt;Dragable = true. You can then
get to this class to further manipulate the aspects of the draggable through $ctl-&gt;DragObj.&lt;/p&gt;</long-description>
        <tag line="10" name="property-read" description="Amount of change in left that happened on the last drag" type="Integer" variable="$DeltaX">
          <type by_reference="false">Integer</type>
        </tag>
        <tag line="10" name="property-read" description="Amount of change in top that happened on the last drag" type="Integer" variable="$DeltaY">
          <type by_reference="false">Integer</type>
        </tag>
        <tag line="10" name="property" description="A drag handle. Can be a control, a selector or array of controls or jQuery selectors." type="mixed" variable="$Handle">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="10" name="link" description="http://jqueryui.com/draggable/" link="http://jqueryui.com/draggable/"/>
        <tag line="10" name="package" description="Controls\Base"/>
      </docblock>
      <constant namespace="global" line="27" package="Controls\Base">
        <name>RevertOn</name>
        <full_name>RevertOn</full_name>
        <value>true</value>
        <docblock line="26">
          <description>Revert Modes</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="28" package="Controls\Base">
        <name>RevertOff</name>
        <full_name>RevertOff</full_name>
        <value>false</value>
      </constant>
      <constant namespace="global" line="29" package="Controls\Base">
        <name>RevertValid</name>
        <full_name>RevertValid</full_name>
        <value>'valid'</value>
      </constant>
      <constant namespace="global" line="30" package="Controls\Base">
        <name>RevertInvalid</name>
        <full_name>RevertInvalid</full_name>
        <value>'invalid'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$aryOriginalPosition</name>
        <default>null</default>
        <docblock line="32">
          <description/>
          <long-description/>
          <tag line="32" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$aryNewPosition</name>
        <default>null</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Controls\Base">
        <name>getJqControlId</name>
        <full_name>getJqControlId</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Controls\Base">
        <name>Render</name>
        <full_name>Render</full_name>
        <argument line="42">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="43" package="Controls\Base">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Controls\Base">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Controls\Base">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="71">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="124" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="124">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="32" code="50019">No short description for property $aryOriginalPosition</critical>
      <critical line="34" code="50019">No short description for property $aryNewPosition</critical>
      <error line="38" code="50010">No DocBlock was found for method getJqControlId()</error>
      <error line="42" code="50010">No DocBlock was found for method Render()</error>
      <error line="43" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="44" code="50010">No DocBlock was found for method Validate()</error>
      <error line="45" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="53" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="71" code="50010">No DocBlock was found for method __set()</error>
      <error line="124" code="50010">No DocBlock was found for method __get()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QCheckBox.class.php" hash="4feb140acf45b080ce3e8a1451e9fd81" package="Controls">
    <docblock line="2">
      <description>This file contains the QCheckBox class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Controls">
      <extends>\QControl</extends>
      <name>QCheckBox</name>
      <full_name>\QCheckBox</full_name>
      <docblock line="8">
        <description>This class will render an HTML Checkbox.</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="is used to display text that is displayed next to the checkbox.  The text is rendered as an html &quot;Label For&quot; the checkbox." type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="specifies if &quot;Text&quot; should be displayed to the left or to the right of the checkbox." type="string" variable="$TextAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="specifices whether or not hte checkbox is checked" type="boolean" variable="$Checked">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="specifies whether the checkbox text will have to be run through htmlentities or not." type="boolean" variable="$HtmlEntities">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strText</name>
        <default>null</default>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="Text opposite to the checkbox" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$strTextAlign</name>
        <default>\QTextAlign::Right</default>
        <docblock line="26">
          <description/>
          <long-description/>
          <tag line="26" name="var" description="the alignment of the string" type="\QTextAlign|string">
            <type by_reference="false">\QTextAlign</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>true</default>
        <docblock line="30">
          <description/>
          <long-description/>
          <tag line="30" name="var" description="Should the htmlentities function be run on the control's text (strText)?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$blnChecked</name>
        <default>false</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="Determines whether the checkbox is checked?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
        <docblock line="40">
          <description>Parses the Post Data submitted for the control and sets the values
according to the data submitted</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="61" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
        <docblock line="57">
          <description>Returns the HTML code for the control which can be sent to the client</description>
          <long-description/>
          <tag line="57" name="return" description="THe HTML for the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="153">
          <description>Checks whether the post data submitted for the control is valid or not
Right now it tests whether or not the control was marked as required and then tests whether it
was checked or not</description>
          <long-description/>
          <tag line="153" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="184" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="177">
          <description>PHP __get magic method implementation</description>
          <long-description/>
          <tag line="177" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="177" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="216" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="208">
          <description>PHP __set magic method implementation</description>
          <long-description/>
          <tag line="208" name="param" description="" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="208" name="param" description="" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="208" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="208" name="throws" description="" type="\QInvalidCastException|\QCallerException">
            <type by_reference="false">\QInvalidCastException</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="216">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="qcubed/_core/base_controls/QBlockControl.class.php" hash="6fe808e8a936fa1d201e23fb3b3ea09b" package="Controls">
    <docblock line="2">
      <description>This file contains the QBlockControl class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="30" package="Controls">
      <extends>\QControl</extends>
      <name>QBlockControl</name>
      <full_name>\QBlockControl</full_name>
      <docblock line="8">
        <description>This class will render HTML via a pair of &lt;span&gt;&lt;/span&gt; tags.</description>
        <long-description>&lt;p&gt;It is
used to simply display any miscellaneous HTML that you would want displayed.
Because of this, it can't really execute any actions.  Any Server- or Client-Actions
defined will simply be ignored.&lt;/p&gt;</long-description>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="is the Html that you want rendered" type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$Format">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$Template">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$AutoRenderChildren">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$TagName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$Padding">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$HtmlEntities">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$DropTarget">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$HorizontalAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$VerticalAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$ResizeHandleMinimum">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$ResizeHandleMaximum">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ResizeHandleDirection">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$strText</name>
        <default>null</default>
        <docblock line="36">
          <description/>
          <long-description/>
          <tag line="36" name="var" description="The text on the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$strFormat</name>
        <default>null</default>
        <docblock line="38">
          <description/>
          <long-description/>
          <tag line="38" name="var" description="The format specifier for rendering the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="global" package="Default">
        <name>$strTemplate</name>
        <default>null</default>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="Path to the HTML template (.tpl.php) file (applicable in case a template is being used for Render)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$blnAutoRenderChildren</name>
        <default>false</default>
        <docblock line="42">
          <description/>
          <long-description/>
          <tag line="42" name="var" description="Render the child controls of this control automatically?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$strPadding</name>
        <default>null</default>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="Padding (CSS Style) value" type="null|string|int">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$strTagName</name>
        <default>null</default>
        <docblock line="47">
          <description/>
          <long-description/>
          <tag line="47" name="var" description="HTML tag to be used by the control (such as div or span)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>true</default>
        <docblock line="49">
          <description/>
          <long-description/>
          <tag line="49" name="var" description="Should htmlentities be used on the contents of this control?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$blnDropTarget</name>
        <default>false</default>
        <docblock line="53">
          <description/>
          <long-description/>
          <tag line="53" name="var" description="Is it a drop target?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$strHorizontalAlign</name>
        <default>\QHorizontalAlign::NotSet</default>
        <docblock line="57">
          <description/>
          <long-description/>
          <tag line="57" name="var" description="Horizontal alignment style" type="string|\QHorizontalAlign">
            <type by_reference="false">string</type>
            <type by_reference="false">\QHorizontalAlign</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" namespace="global" package="Default">
        <name>$strVerticalAlign</name>
        <default>\QVerticalAlign::NotSet</default>
        <docblock line="59">
          <description/>
          <long-description/>
          <tag line="59" name="var" description="Vertical alignment style" type="string|\QVerticalAlign">
            <type by_reference="false">string</type>
            <type by_reference="false">\QVerticalAlign</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" namespace="global" package="Default">
        <name>$objMovesControlsArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="global" package="Default">
        <name>$objDropsControlsArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="65" namespace="global" package="Default">
        <name>$objDropsGroupingsArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="global" package="Default">
        <name>$objIsDropZoneFor</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="Controls">
        <name>AddControlToMove</name>
        <full_name>AddControlToMove</full_name>
        <argument line="68">
          <name>$objTargetControl</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Controls">
        <name>RemoveControlToMove</name>
        <full_name>RemoveControlToMove</full_name>
        <argument line="80">
          <name>$objTargetControl</name>
          <default/>
          <type>\QControl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="Controls">
        <name>RemoveAllControlsToMove</name>
        <full_name>RemoveAllControlsToMove</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="Controls">
        <name>AddDropZone</name>
        <full_name>AddDropZone</full_name>
        <argument line="90">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="Controls">
        <name>RemoveDropZone</name>
        <full_name>RemoveDropZone</full_name>
        <argument line="97">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="Controls">
        <name>RemoveAllDropZones</name>
        <full_name>RemoveAllDropZones</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="124" package="Controls">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
        <docblock line="120">
          <description>Returns the End Script of the Control which is sent to the client when the control's Render is complete</description>
          <long-description/>
          <tag line="120" name="return" description="The JS EndScript for the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="Controls">
        <name>GetStyleAttributes</name>
        <full_name>GetStyleAttributes</full_name>
        <docblock line="145">
          <description>Returns the CSS styles for the control</description>
          <long-description/>
          <tag line="145" name="return" description="The CSS style string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
        <docblock line="171">
          <description>Public function (to be overridden in child classes) to Parse the POST data recieved by control</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="180" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
        <docblock line="176">
          <description>Returns the HTML of the QControl</description>
          <long-description/>
          <tag line="176" name="return" description="The HTML string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="224" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="216">
          <description>Public function to be overrriden by child classes</description>
          <long-description>&lt;p&gt;It is used to determine if the input fed into the control is valid or not.
The rules are written in this function only. If the control is set for Validation,
this function is automatically called on postback.&lt;/p&gt;</long-description>
          <tag line="216" name="return" description="Whether or not the input inside the control are valid" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="236" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="229">
          <description>PHP __get magic method implementation</description>
          <long-description/>
          <tag line="229" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="229" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="229" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="276" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="266">
          <description>PHP __set magic method implementation</description>
          <long-description/>
          <tag line="266" name="param" description="Property Name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="266" name="param" description="Property Value" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="266" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="266" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="266" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="266" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="276">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="276">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="63" code="50018">No DocBlock was found for property $objMovesControlsArray</error>
      <error line="64" code="50018">No DocBlock was found for property $objDropsControlsArray</error>
      <error line="65" code="50018">No DocBlock was found for property $objDropsGroupingsArray</error>
      <error line="66" code="50018">No DocBlock was found for property $objIsDropZoneFor</error>
      <error line="68" code="50010">No DocBlock was found for method AddControlToMove()</error>
      <error line="80" code="50010">No DocBlock was found for method RemoveControlToMove()</error>
      <error line="85" code="50010">No DocBlock was found for method RemoveAllControlsToMove()</error>
      <error line="90" code="50010">No DocBlock was found for method AddDropZone()</error>
      <error line="97" code="50010">No DocBlock was found for method RemoveDropZone()</error>
      <error line="107" code="50010">No DocBlock was found for method RemoveAllDropZones()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QCheckBoxColumn.class.php" hash="0147d381284d6b9426316f5bebe503ba" package="Default">
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends>\QDataGridColumn</extends>
      <name>QCheckBoxColumn</name>
      <full_name>\QCheckBoxColumn</full_name>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$objDataGrid</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="16" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="17" namespace="global" package="Default">
        <name>$chkSelectAll</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$colIndex</name>
        <default>-1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$objCheckboxCallback</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Default">
        <name>$strCheckboxCallbackFunc</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="21" namespace="global" package="Default">
        <name>$strPrimaryKey</name>
        <default>'Id'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="23">
          <description>Creates a QDataGridColumn of checkboxes</description>
          <long-description/>
          <tag line="23" name="param" description="The header to give the column, shown as the label for the Select All checkbox" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="23" name="param" description="The parent DataGrid. This does not add the column to that datagrid" type="\QDataGrid" variable="$dataGrid">
            <type by_reference="false">\QDataGrid</type>
          </tag>
          <tag line="23" name="param" description="Same as QDataGrid" type="mixed" variable="$objOverrideParameters">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="23" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$strName</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="32">
          <name>$dataGrid</name>
          <default/>
          <type>\QDataGrid</type>
        </argument>
        <argument line="32">
          <name>$objOverrideParameters</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="55" package="Default">
        <name>GetColIndex</name>
        <full_name>GetColIndex</full_name>
        <docblock line="49">
          <description>Returns the index of this column in the parent datagrid</description>
          <long-description/>
          <tag line="49" name="return" description="The index of the column, or -1 if not found" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="Default">
        <name>SetCheckboxCallback</name>
        <full_name>SetCheckboxCallback</full_name>
        <docblock line="70">
          <description>Sets the callback method for when a checkbox is created.</description>
          <long-description>&lt;p&gt;Used for initializing the checkbox state&lt;/p&gt;</long-description>
          <tag line="70" name="param" description="The object the callback function belongs to" type="Object" variable="$objParent">
            <type by_reference="false">Object</type>
          </tag>
          <tag line="70" name="param" description="The name of the function to call back" type="string" variable="$strFuncName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$objParent</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$strFuncName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="Default">
        <name>chkSelectAll_Render</name>
        <full_name>chkSelectAll_Render</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="Default">
        <name>chkSelected_Render</name>
        <full_name>chkSelected_Render</full_name>
        <argument line="113">
          <name>$_ITEM</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="143" package="Default">
        <name>GetSelectedItems</name>
        <full_name>GetSelectedItems</full_name>
        <docblock line="135">
          <description>Returns an array of items for the selected rows, loaded using the specified class's Load($id) method</description>
          <long-description/>
          <tag line="135" name="param" description="The class name of the object type to return" type="string" variable="$strClass">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="param" description="Whether to spend extra time indexing the array by Id" type="bool" variable="$blnIndex">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="135" name="return" description="An array of selected Items" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$strClass</name>
          <default/>
          <type/>
        </argument>
        <argument line="143">
          <name>$blnIndex</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="143">
          <name>$objClauses</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Default">
        <name>GetSelectedIds</name>
        <full_name>GetSelectedIds</full_name>
        <docblock line="164">
          <description>Returns an array of the Ids of the items selected.</description>
          <long-description>&lt;p&gt;Note this only includes rendered controls.&lt;/p&gt;</long-description>
          <tag line="164" name="return" description="An array of selected Ids" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="199" package="Default">
        <name>GetChangedIds</name>
        <full_name>GetChangedIds</full_name>
        <docblock line="193">
          <description>Returns an array of changed ids.</description>
          <long-description/>
          <tag line="193" name="return" description="Key is the object Id, value is the new check state (bln)" type="bool[]">
            <type by_reference="false">bool[]</type>
          </tag>
        </docblock>
        <argument line="199">
          <name>$blnRemember</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="Default">
        <name>AcceptChanges</name>
        <full_name>AcceptChanges</full_name>
        <docblock line="226">
          <description>Considers the current state to be the new baseline</description>
          <long-description/>
          <tag line="226" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="237" package="Default">
        <name>SetSelectAllCheckbox</name>
        <full_name>SetSelectAllCheckbox</full_name>
        <argument line="237">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="248" package="Default">
        <name>SetCheckbox</name>
        <full_name>SetCheckbox</full_name>
        <argument line="248">
          <name>$itemId</name>
          <default/>
          <type/>
        </argument>
        <argument line="248">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="258" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="258">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="284" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="276">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue</description>
          <long-description/>
          <tag line="276" name="param" description="Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="276" name="param" description="New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="276" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="284">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="284">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/base_controls/QCheckBoxColumn.class.php</error>
      <error line="13" code="50000">No DocBlock was found for \QCheckBoxColumn</error>
      <error line="15" code="50018">No DocBlock was found for property $objDataGrid</error>
      <error line="16" code="50018">No DocBlock was found for property $blnHtmlEntities</error>
      <error line="17" code="50018">No DocBlock was found for property $chkSelectAll</error>
      <error line="18" code="50018">No DocBlock was found for property $colIndex</error>
      <error line="19" code="50018">No DocBlock was found for property $objCheckboxCallback</error>
      <error line="20" code="50018">No DocBlock was found for property $strCheckboxCallbackFunc</error>
      <error line="21" code="50018">No DocBlock was found for property $strPrimaryKey</error>
      <error line="85" code="50010">No DocBlock was found for method chkSelectAll_Render()</error>
      <error line="113" code="50010">No DocBlock was found for method chkSelected_Render()</error>
      <error line="135" code="50015">Argument $objClauses is missing from the Docblock of GetSelectedItems()</error>
      <error line="193" code="50015">Argument $blnRemember is missing from the Docblock of GetChangedIds()</error>
      <error line="237" code="50010">No DocBlock was found for method SetSelectAllCheckbox()</error>
      <error line="248" code="50010">No DocBlock was found for method SetCheckbox()</error>
      <error line="258" code="50010">No DocBlock was found for method __get()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QWriteBox.class.php" hash="46b19ca928cfeb0e8519384ef47568b2" package="Controls">
    <docblock line="2">
      <description>This file contains the QWriteBox class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="Controls">
      <extends>\QTextBox</extends>
      <name>QWriteBox</name>
      <full_name>\QWriteBox</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property-read" description="" type="string" variable="$DisplayHtml">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$CodeCssClass">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <constant namespace="global" line="271" package="Controls">
        <name>StateText</name>
        <full_name>StateText</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="272" package="Controls">
        <name>StateNewLine</name>
        <full_name>StateNewLine</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="273" package="Controls">
        <name>StateTag</name>
        <full_name>StateTag</full_name>
        <value>3</value>
      </constant>
      <constant namespace="global" line="274" package="Controls">
        <name>StateStar</name>
        <full_name>StateStar</full_name>
        <value>4</value>
      </constant>
      <constant namespace="global" line="275" package="Controls">
        <name>StateBulletedList</name>
        <full_name>StateBulletedList</full_name>
        <value>5</value>
      </constant>
      <constant namespace="global" line="276" package="Controls">
        <name>StateBulletedListItem</name>
        <full_name>StateBulletedListItem</full_name>
        <value>6</value>
      </constant>
      <constant namespace="global" line="277" package="Controls">
        <name>StateCode</name>
        <full_name>StateCode</full_name>
        <value>7</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$strTextMode</name>
        <default>\QTextMode::MultiLine</default>
      </property>
      <property final="false" static="false" visibility="protected" line="16" namespace="global" package="Default">
        <name>$strCrossScripting</name>
        <default>\QCrossScripting::Allow</default>
      </property>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$strCodeCssClass</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="20">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="20">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="26">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="44">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="44">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="64" package="Controls">
        <name>DisplayHtml</name>
        <full_name>DisplayHtml</full_name>
        <argument line="64">
          <name>$strText</name>
          <default/>
          <type/>
        </argument>
        <argument line="64">
          <name>$strCssClass</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QWriteBox</critical>
      <error line="15" code="50018">No DocBlock was found for property $strTextMode</error>
      <error line="16" code="50018">No DocBlock was found for property $strCrossScripting</error>
      <error line="18" code="50018">No DocBlock was found for property $strCodeCssClass</error>
      <error line="20" code="50010">No DocBlock was found for method __construct()</error>
      <error line="26" code="50010">No DocBlock was found for method __get()</error>
      <error line="44" code="50010">No DocBlock was found for method __set()</error>
      <error line="64" code="50010">No DocBlock was found for method DisplayHtml()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QButtonBase.class.php" hash="dd24fda68482a24aeea4acb59bfdc1ef" package="Controls">
    <docblock line="2">
      <description>This file contains the QButtonBase class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="17" package="Controls">
      <extends>\QActionControl</extends>
      <name>QButtonBase</name>
      <full_name>\QButtonBase</full_name>
      <docblock line="8">
        <description>This class will render an HTML Button.</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="is used to display the button's text" type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="is a boolean to specify whether or not the button is 'primary' (e.g. makes this button a &quot;Submit&quot; form element rather than a &quot;Button&quot; form element)" type="boolean" variable="$PrimaryButton">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$HtmlEntities">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strText</name>
        <default>null</default>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="Text on the button" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>true</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="Whether or not to use Htmlentities for the control" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$blnPrimaryButton</name>
        <default>false</default>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="Is the button a primary button (causes form submission)?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$blnActionsMustTerminate</name>
        <default>true</default>
        <docblock line="33">
          <description/>
          <long-description/>
          <tag line="33" name="var" description="Prevent any more actions from happening once action has been taken on this control causes &quot;event.preventDefault()&quot; to be called on the client side" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="46" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
        <docblock line="42">
          <description>Return the HTML string for the control</description>
          <long-description/>
          <tag line="42" name="return" description="The HTML string of the control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="74">
          <description>PHP Magic __get method implementation</description>
          <long-description/>
          <tag line="74" name="param" description="Name of the property to be fetched" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="74" name="return" description="" type="array|bool|int|mixed|null|\QControl|\QForm|string">
            <type by_reference="false">array</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="74" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="112" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="103">
          <description>PHP Magic method __set implementation for this class (QButtonBase)</description>
          <long-description/>
          <tag line="103" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="param" description="Value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="103" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="103" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="112">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="qcubed/_core/base_controls/QDatepickerBoxBase.class.php" hash="ff282b2d0e9c490f76b04b4fcc6bc580" package="Default">
    <docblock line="3">
      <description>DatepickerBox Base File</description>
      <long-description>&lt;p&gt;The QDatepickerBoxBase class defined here provides an interface between the generated
QDatepickerBoxGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QDatepickerBox.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="28" package="Controls\Base">
      <extends>\QDatepickerBoxGen</extends>
      <name>QDatepickerBoxBase</name>
      <full_name>\QDatepickerBoxBase</full_name>
      <docblock line="12">
        <description>Impelements a JQuery UI Datepicker in a box</description>
        <long-description>&lt;p&gt;A Datepicker Box is similar to a Datepicker, but its not associated with a field. It
just displays a calendar for picking a date.&lt;/p&gt;</long-description>
        <tag line="12" name="property" description="The format to use for displaying the date" type="string" variable="$DateFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="12" name="property" description="Alias for DateFormat" type="string" variable="$DateTimeFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="12" name="property" description="The date to set the field to" type="\QDateTime" variable="$DateTime">
          <type by_reference="false">\QDateTime</type>
        </tag>
        <tag line="12" name="property" description="Alias for MinDate" type="mixed" variable="$Minimum">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="12" name="property" description="Alias for MaxDate" type="mixed" variable="$Maximum">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="12" name="property" description="Textual date to set it to" type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="12" name="link" description="http://jqueryui.com/datepicker/#inline" link="http://jqueryui.com/datepicker/#inline"/>
        <tag line="12" name="package" description="Controls\Base"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strDateTimeFormat</name>
        <default>"MM/DD/YY"</default>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$dttDateTime</name>
        <default/>
        <docblock line="30">
          <description/>
          <long-description/>
          <tag line="30" name="var" description="" type="\QDateTime">
            <type by_reference="false">\QDateTime</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Controls\Base">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Controls\Base">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="77">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="103">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50018">No DocBlock was found for property $strDateTimeFormat</error>
      <critical line="30" code="50019">No short description for property $dttDateTime</critical>
      <error line="33" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="44" code="50010">No DocBlock was found for method Validate()</error>
      <error line="77" code="50010">No DocBlock was found for method __get()</error>
      <error line="103" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QMenuBase.class.php" hash="cf4f6f1e24f21fd7501cdc11da90d534" package="Default">
    <docblock line="3">
      <description>QMenu Base File</description>
      <long-description>&lt;p&gt;The  QMenuBase class defined here provides an interface between the generated
QMenuGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, see the QMenu.class.php file in the controls
folder.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="Controls\Base">
      <extends>\QMenuGen</extends>
      <name>QMenuBase</name>
      <full_name>\QMenuBase</full_name>
      <docblock line="13">
        <description>Implements a JQuery UI Menu</description>
        <long-description>&lt;p&gt;A JQuery UI menu is designed to turn an unordered html list into a menu widget.
In order to create a menu, treat this object as a panel that needs to print
&amp;lt;&lt;li&gt;&gt; items inside it. You can create submenus by adding &amp;lt;&lt;/p&gt;

&lt;p&gt;&amp;lt;&lt;/p&gt;

&lt;p&gt;ul&gt;&gt; items and putting
&amp;lt;&lt;li&gt;&gt; items inside of that.&lt;/p&gt;

&lt;p&gt;TBD: Add methods to create the menu structure, and to record when a menu is clicked on.&lt;/p&gt;</long-description>
        <tag line="13" name="link" description="http://jqueryui.com/menu/" link="http://jqueryui.com/menu/"/>
        <tag line="13" name="package" description="Controls\Base"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strTagName</name>
        <default>'ul'</default>
      </property>
    </class>
    <parse_markers>
      <error line="29" code="50018">No DocBlock was found for property $strTagName</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QSliderGen.class.php" hash="9942c27e5727100e603e20617d0803ec" package="Default">
    <docblock line="2">
      <description>QSliderGen File</description>
      <long-description>&lt;p&gt;The abstract QSliderGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QSliderBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QSlider class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="39" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSlider_ChangeEvent</name>
      <full_name>\QSlider_ChangeEvent</full_name>
      <docblock line="30">
        <description>Triggered after the user slides a handle, if the value has changed; or if
		the value is changed programmatically via the &lt;a&gt;&lt;code&gt;value&lt;/code&gt;&lt;/a&gt;
		method.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;handle&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the handle that was changed.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;
		Type: &lt;a&gt;Number&lt;/a&gt; The current value of the slider.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="40" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'slidechange'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="48" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSlider_CreateEvent</name>
      <full_name>\QSlider_CreateEvent</full_name>
      <docblock line="42">
        <description>Triggered when the slider is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="49" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'slidecreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="64" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSlider_SlideEvent</name>
      <full_name>\QSlider_SlideEvent</full_name>
      <docblock line="51">
        <description>Triggered on every mouse move during slide.</description>
        <long-description>&lt;p&gt;The value provided in the event
        as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ui.value&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;represents the value that the handle will have as
        a result of the current movement. Canceling the event will prevent the
        handle from moving and the handle will continue to have its previous
        value.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;ul&gt;&lt;li&gt;&lt;strong&gt;handle&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
        representing the handle being moved.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type:
        &lt;a&gt;Number&lt;/a&gt; The value that the handle will move to if the event is not
        canceled.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;values&lt;/strong&gt; Type: &lt;a&gt;Array&lt;/a&gt; An array of
        the current values of a multi-handled slider.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="65" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'slide'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="74" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSlider_StartEvent</name>
      <full_name>\QSlider_StartEvent</full_name>
      <docblock line="67">
        <description>Triggered when the user starts sliding.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;handle&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the handle being moved.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type:
		&lt;a&gt;Number&lt;/a&gt; The current value of the slider.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="75" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'slidestart'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="84" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSlider_StopEvent</name>
      <full_name>\QSlider_StopEvent</full_name>
      <docblock line="77">
        <description>Triggered after the user slides a handle.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;handle&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the handle that was moved.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;
		Type: &lt;a&gt;Number&lt;/a&gt; The current value of the slider.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="85" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'slidestop'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="132" package="Controls\Base">
      <extends>\QPanel</extends>
      <name>QSliderGen</name>
      <full_name>\QSliderGen</full_name>
      <docblock line="90">
        <description>Generated QSliderGen class.</description>
        <long-description>&lt;p&gt;This is the QSliderGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QSliderBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="90" name="see" description="\global\QSliderBase" refers="\global\QSliderBase"/>
        <tag line="90" name="package" description="Controls\Base"/>
        <tag line="90" name="property" description="Whether to slide the handle smoothly when the user clicks on the slider&#10;&#9;&#9;track. Also accepts any valid &lt;a&gt;animation duration&lt;/a&gt;.&lt;strong&gt;Multiple&#10;&#9;&#9;types supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: When set to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;, the handle will animate with the default duration.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: The name of a speed, such as&#10;&#9;&#9;&lt;code&gt;&quot;fast&quot;&lt;/code&gt; or &lt;code&gt;&quot;slow&quot;&lt;/code&gt;.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: The duration of the animation, in&#10;&#9;&#9;milliseconds.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Animate">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="90" name="property" description="Disables the slider if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="90" name="property" description="The maximum value of the slider." type="integer" variable="$Max">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="90" name="property" description="The minimum value of the slider." type="integer" variable="$Min">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="90" name="property" description="Determines whether the slider handles move horizontally (min on left, max&#10;&#9;&#9;on right) or vertically (min on bottom, max on top). Possible values:&#10;&#9;&#9;&lt;code&gt;&quot;horizontal&quot;&lt;/code&gt;, &lt;code&gt;&quot;vertical&quot;&lt;/code&gt;." type="string" variable="$Orientation">
          <type by_reference="false">string</type>
        </tag>
        <tag line="90" name="property" description="Whether the slider represents a range.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: If set to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;, the slider will detect if you have two handles and&#10;&#9;&#9;create a stylable range element between these two.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: Either &lt;code&gt;&quot;min&quot;&lt;/code&gt; or&#10;&#9;&#9;&lt;code&gt;&quot;max&quot;&lt;/code&gt;. A min range goes from the slider min to one handle. A&#10;&#9;&#9;max range goes from one handle to the slider max.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Range">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="90" name="property" description="Determines the size or amount of each interval or step the slider takes&#10;&#9;&#9;between the min and max. The full specified value range of the slider (max&#10;&#9;&#9;- min) should be evenly divisible by the step." type="integer" variable="$Step">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="90" name="property" description="Determines the value of the slider, if there's only one handle. If there is&#10;&#9;&#9;more than one handle, determines the value of the first handle." type="integer" variable="$Value">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="90" name="property" description="This option can be used to specify multiple handles. If the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; option is set to &lt;code&gt;true&lt;/code&gt;, the length of&#10;&#9;&#9;&lt;code&gt;values&lt;/code&gt; should be 2." type="array" variable="$Values">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="133" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="134" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="136" namespace="global" package="Default">
        <name>$mixAnimate</name>
        <default>null</default>
        <docblock line="135">
          <description/>
          <long-description/>
          <tag line="135" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="138" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="137">
          <description/>
          <long-description/>
          <tag line="137" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="140" namespace="global" package="Default">
        <name>$intMax</name>
        <default>null</default>
        <docblock line="139">
          <description/>
          <long-description/>
          <tag line="139" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="142" namespace="global" package="Default">
        <name>$intMin</name>
        <default/>
        <docblock line="141">
          <description/>
          <long-description/>
          <tag line="141" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="144" namespace="global" package="Default">
        <name>$strOrientation</name>
        <default>null</default>
        <docblock line="143">
          <description/>
          <long-description/>
          <tag line="143" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="146" namespace="global" package="Default">
        <name>$mixRange</name>
        <default>null</default>
        <docblock line="145">
          <description/>
          <long-description/>
          <tag line="145" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="148" namespace="global" package="Default">
        <name>$intStep</name>
        <default>null</default>
        <docblock line="147">
          <description/>
          <long-description/>
          <tag line="147" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="150" namespace="global" package="Default">
        <name>$intValue</name>
        <default/>
        <docblock line="149">
          <description/>
          <long-description/>
          <tag line="149" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="152" namespace="global" package="Default">
        <name>$arrValues</name>
        <default>null</default>
        <docblock line="151">
          <description/>
          <long-description/>
          <tag line="151" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="154" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="154">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="154">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="163" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="182" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="206" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="197">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="197" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="197" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="206">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="223" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="218">
          <description>Removes the slider functionality completely.</description>
          <long-description>&lt;p&gt;This will return the element
back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="230" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="226">
          <description>Disables the slider.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="237" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="233">
          <description>Enables the slider.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="246" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="240">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="240" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="246">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="253" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="249">
          <description>Gets an object containing key/value pairs representing the current slider
options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="265" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="256">
          <description>Sets the value of the slider option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="256" name="param" description="" type="\" variable="$optionName"/>
          <tag line="256" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="265">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="265">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="273" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="268">
          <description>Sets one or more options for the slider.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="268" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="273">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="280" package="Controls\Base">
        <name>Value</name>
        <full_name>Value</full_name>
        <docblock line="276">
          <description>Get the value of the slider.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="288" package="Controls\Base">
        <name>Value1</name>
        <full_name>Value1</full_name>
        <docblock line="283">
          <description>Set the value of the slider.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type:
&lt;a&gt;Number&lt;/a&gt; The value to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="283" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="288">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="295" package="Controls\Base">
        <name>Values</name>
        <full_name>Values</full_name>
        <docblock line="291">
          <description>Get the value for all handles.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="303" package="Controls\Base">
        <name>Values1</name>
        <full_name>Values1</full_name>
        <docblock line="298">
          <description>Get the value for the specified handle.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt; Type:
&lt;a&gt;Integer&lt;/a&gt; The zero-based index of the handle.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="298" name="param" description="" type="\" variable="$index"/>
        </docblock>
        <argument line="303">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="313" package="Controls\Base">
        <name>Values2</name>
        <full_name>Values2</full_name>
        <docblock line="306">
          <description>Set the value for the specified handle.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt; Type:
&lt;a&gt;Integer&lt;/a&gt; The zero-based index of the handle.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Number&lt;/a&gt; The value to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="306" name="param" description="" type="\" variable="$index"/>
          <tag line="306" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="313">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
        <argument line="313">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="321" package="Controls\Base">
        <name>Values3</name>
        <full_name>Values3</full_name>
        <docblock line="316">
          <description>Set the value for all handles.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;values&lt;/strong&gt; Type:
&lt;a&gt;Array&lt;/a&gt; The values to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="316" name="param" description="" type="\" variable="$values"/>
        </docblock>
        <argument line="321">
          <name>$values</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="326" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="326">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="347" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="347">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="347">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="133" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="134" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="135" code="50019">No short description for property $mixAnimate</critical>
      <critical line="137" code="50019">No short description for property $blnDisabled</critical>
      <critical line="139" code="50019">No short description for property $intMax</critical>
      <critical line="141" code="50019">No short description for property $intMin</critical>
      <critical line="143" code="50019">No short description for property $strOrientation</critical>
      <critical line="145" code="50019">No short description for property $mixRange</critical>
      <critical line="147" code="50019">No short description for property $intStep</critical>
      <critical line="149" code="50019">No short description for property $intValue</critical>
      <critical line="151" code="50019">No short description for property $arrValues</critical>
      <error line="154" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="163" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="178" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="182" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="186" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="326" code="50010">No DocBlock was found for method __get()</error>
      <error line="347" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QProgressbarGen.class.php" hash="c00e142d4020b28b4e155a6e0471236e" package="Default">
    <docblock line="2">
      <description>QProgressbarGen File</description>
      <long-description>&lt;p&gt;The abstract QProgressbarGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QProgressbarBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QProgressbar class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="37" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QProgressbar_ChangeEvent</name>
      <full_name>\QProgressbar_ChangeEvent</full_name>
      <docblock line="30">
        <description>Triggered when the value of the progressbar
		changes.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The
		&lt;code&gt;ui&lt;/code&gt; object is empty but included for consistency with other
		events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="38" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'progressbarchange'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="47" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QProgressbar_CompleteEvent</name>
      <full_name>\QProgressbar_CompleteEvent</full_name>
      <docblock line="40">
        <description>Triggered when the value of the progressbar reaches the maximum
		value.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The
		&lt;code&gt;ui&lt;/code&gt; object is empty but included for consistency with other
		events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="48" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'progressbarcomplete'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="56" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QProgressbar_CreateEvent</name>
      <full_name>\QProgressbar_CreateEvent</full_name>
      <docblock line="50">
        <description>Triggered when the progressbar is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="57" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'progressbarcreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="78" package="Controls\Base">
      <extends>\QPanel</extends>
      <name>QProgressbarGen</name>
      <full_name>\QProgressbarGen</full_name>
      <docblock line="62">
        <description>Generated QProgressbarGen class.</description>
        <long-description>&lt;p&gt;This is the QProgressbarGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QProgressbarBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="62" name="see" description="\global\QProgressbarBase" refers="\global\QProgressbarBase"/>
        <tag line="62" name="package" description="Controls\Base"/>
        <tag line="62" name="property" description="Disables the progressbar if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="62" name="property" description="The maximum value of the progressbar." type="integer" variable="$Max">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="62" name="property" description="The value of the progressbar." type="integer" variable="$Value">
          <type by_reference="false">integer</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="79" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="80" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="82" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="81">
          <description/>
          <long-description/>
          <tag line="81" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="84" namespace="global" package="Default">
        <name>$intMax</name>
        <default/>
        <docblock line="83">
          <description/>
          <long-description/>
          <tag line="83" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="86" namespace="global" package="Default">
        <name>$intValue</name>
        <default/>
        <docblock line="85">
          <description/>
          <long-description/>
          <tag line="85" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="88" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="88">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="88">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="97" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="134" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="125">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="125" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="125" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="134">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="146">
          <description>Removes the progressbar functionality completely.</description>
          <long-description>&lt;p&gt;This will return the
element back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="154">
          <description>Disables the progressbar.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="161">
          <description>Enables the progressbar.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="168">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="168" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="174">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="182" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="177">
          <description>Gets an object containing key/value pairs representing the current
progressbar options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="194" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="185">
          <description>Sets the value of the progressbar option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="185" name="param" description="" type="\" variable="$optionName"/>
          <tag line="185" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="194">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="194">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="203" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="197">
          <description>Sets one or more options for the
progressbar.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A map of
option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="197" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="203">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="210" package="Controls\Base">
        <name>Value</name>
        <full_name>Value</full_name>
        <docblock line="206">
          <description>Gets the current value of the progressbar.&lt;ul&gt;&lt;li&gt;This method does not
accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="218" package="Controls\Base">
        <name>Value1</name>
        <full_name>Value1</full_name>
        <docblock line="213">
          <description>Sets the current value of the progressbar.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;
Type: &lt;a&gt;Number&lt;/a&gt; The value to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="213" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="218">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="223" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="223">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="238">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="238">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="79" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="80" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="81" code="50019">No short description for property $blnDisabled</critical>
      <critical line="83" code="50019">No short description for property $intMax</critical>
      <critical line="85" code="50019">No short description for property $intValue</critical>
      <error line="88" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="97" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="106" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="110" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="114" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="223" code="50010">No DocBlock was found for method __get()</error>
      <error line="238" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QWaitIcon.class.php" hash="8c0e870b32ee20ce97366c102191e600" package="Controls">
    <docblock line="2">
      <description>This file contains the QWaitIcon class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Controls">
      <extends>\QControl</extends>
      <name>QWaitIcon</name>
      <full_name>\QWaitIcon</full_name>
      <docblock line="9">
        <description/>
        <long-description/>
        <tag line="9" name="package" description="Controls"/>
        <tag line="9" name="property" description="" type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property" description="" type="string" variable="$TagName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property" description="" type="string" variable="$Padding">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property" description="" type="string" variable="$HorizontalAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property" description="" type="string" variable="$VerticalAlign">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strText</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strPadding</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$strTagName</name>
        <default>'span'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$blnDisplay</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$strHorizontalAlign</name>
        <default>\QHorizontalAlign::NotSet</default>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$strVerticalAlign</name>
        <default>\QVerticalAlign::NotSet</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="33">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="33">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Controls">
        <name>GetStyleAttributes</name>
        <full_name>GetStyleAttributes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="59" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="79">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="103">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="9" code="50005">No short description for class \QWaitIcon</critical>
      <error line="24" code="50018">No DocBlock was found for property $strText</error>
      <error line="25" code="50018">No DocBlock was found for property $strPadding</error>
      <error line="26" code="50018">No DocBlock was found for property $strTagName</error>
      <error line="27" code="50018">No DocBlock was found for property $blnDisplay</error>
      <error line="30" code="50018">No DocBlock was found for property $strHorizontalAlign</error>
      <error line="31" code="50018">No DocBlock was found for property $strVerticalAlign</error>
      <error line="33" code="50010">No DocBlock was found for method __construct()</error>
      <error line="39" code="50010">No DocBlock was found for method GetStyleAttributes()</error>
      <error line="57" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="58" code="50010">No DocBlock was found for method Validate()</error>
      <error line="59" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="79" code="50010">No DocBlock was found for method __get()</error>
      <error line="103" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDataGridColumn.class.php" hash="0c5f262107d88c1fa443acda25ad7fcb" package="Default">
    <class final="false" abstract="true" namespace="global" line="8" package="Controls">
      <extends/>
      <name>QFilterType</name>
      <full_name>\QFilterType</full_name>
      <docblock line="2">
        <description>This file contains the QDataGridColumn and QFilterType class.</description>
        <long-description/>
        <tag line="2" name="package" description="Controls"/>
      </docblock>
      <constant namespace="global" line="9" package="Controls">
        <name>None</name>
        <full_name>None</full_name>
        <value>''</value>
      </constant>
      <constant namespace="global" line="10" package="Controls">
        <name>TextFilter</name>
        <full_name>TextFilter</full_name>
        <value>'Text'</value>
      </constant>
      <constant namespace="global" line="11" package="Controls">
        <name>ListFilter</name>
        <full_name>ListFilter</full_name>
        <value>'List'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="60" package="Controls">
      <extends>\QBaseClass</extends>
      <name>QDataGridColumn</name>
      <full_name>\QDataGridColumn</full_name>
      <docblock line="14">
        <description>This defines a specific column &lt;td&gt; for a DataGrid
All the appearance properties should be self-explanatory.</description>
        <long-description>&lt;p&gt;The SortByCommand and ReverseSortByCommand are both optional -- and are explained in more
depth in DataGrid.inc&lt;/p&gt;</long-description>
        <tag line="14" name="package" description="Controls"/>
        <tag line="14" name="property" description="" type="string" variable="$BackColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$BorderColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$BorderStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$BorderWidth">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$CssClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="boolean" variable="$FontBold">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="14" name="property" description="" type="boolean" variable="$FontItalic">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$FontNames">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="boolean" variable="$FontOverline">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$FontSize">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="boolean" variable="$FontStrikeout">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="14" name="property" description="" type="boolean" variable="$FontUnderline">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$ForeColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$HorizontalAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$VerticalAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$Width">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="boolean" variable="$Wrap">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="14" name="property" description="" type="mixed" variable="$OrderByClause">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="14" name="property" description="" type="mixed" variable="$ReverseOrderByClause">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="14" name="property" description="" type="mixed" variable="$FilterByCommand">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="14" name="property-read" description="" type="array" variable="$FilterInfo">
          <type by_reference="false">array</type>
        </tag>
        <tag line="14" name="property" description="" type="integer" variable="$FilterBoxSize">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$FilterType">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="mixed" variable="$FilterList">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="14" name="property" description="" type="integer" variable="$FilterColId">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$FilterPrefix">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="string" variable="$FilterPostfix">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="mixed" variable="$FilterConstant">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="14" name="property-read" description="" type="mixed" variable="$ActiveFilter">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="14" name="property-write" description="" type="mixed" variable="$Filter">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="14" name="property" description="" type="mixed" variable="$SortByCommand">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="14" name="property" description="" type="mixed" variable="$ReverseSortByCommand">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="14" name="property" description="is the contents of the column itself -- the $this-&gt;strHtml contents can contain backticks ` to deliniate commands that are to be PHP evaled (again, see DataGrid.inc for more info)" type="string" variable="$Html">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="is the name of the column, as displayed in the DataGrid's header row for that column" type="string" variable="$Name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="14" name="property" description="" type="boolean" variable="$HtmlEntities">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="14" name="property" description="" type="boolean" variable="$HasResetButton">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="62" namespace="global" package="Default">
        <name>$strBackColor</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="63" namespace="global" package="Default">
        <name>$strBorderColor</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="global" package="Default">
        <name>$strBorderStyle</name>
        <default>\QBorderStyle::NotSet</default>
      </property>
      <property final="false" static="false" visibility="protected" line="65" namespace="global" package="Default">
        <name>$strBorderWidth</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="67" namespace="global" package="Default">
        <name>$blnFontBold</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="68" namespace="global" package="Default">
        <name>$blnFontItalic</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="69" namespace="global" package="Default">
        <name>$strFontNames</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="70" namespace="global" package="Default">
        <name>$blnFontOverline</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="71" namespace="global" package="Default">
        <name>$strFontSize</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="72" namespace="global" package="Default">
        <name>$blnFontStrikeout</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="73" namespace="global" package="Default">
        <name>$blnFontUnderline</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="74" namespace="global" package="Default">
        <name>$strForeColor</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="75" namespace="global" package="Default">
        <name>$strHorizontalAlign</name>
        <default>\QHorizontalAlign::NotSet</default>
      </property>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$strVerticalAlign</name>
        <default>\QVerticalAlign::NotSet</default>
      </property>
      <property final="false" static="false" visibility="protected" line="77" namespace="global" package="Default">
        <name>$strWidth</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="78" namespace="global" package="Default">
        <name>$blnWrap</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="79" namespace="global" package="Default">
        <name>$blnHasResetButton</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="82" namespace="global" package="Default">
        <name>$objOrderByClause</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="83" namespace="global" package="Default">
        <name>$objReverseOrderByClause</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="85" namespace="global" package="Default">
        <name>$intFilterBoxSize</name>
        <default>10</default>
      </property>
      <property final="false" static="false" visibility="protected" line="86" namespace="global" package="Default">
        <name>$strFilterType</name>
        <default>\QFilterType::None</default>
      </property>
      <property final="false" static="false" visibility="protected" line="87" namespace="global" package="Default">
        <name>$intFilterColId</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="88" namespace="global" package="Default">
        <name>$arrFilterList</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="91" namespace="global" package="Default">
        <name>$objActiveFilter</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="93" namespace="global" package="Default">
        <name>$objFilterConstant</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="95" namespace="global" package="Default">
        <name>$strFilterPrefix</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="protected" line="96" namespace="global" package="Default">
        <name>$strFilterPostfix</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="protected" line="99" namespace="global" package="Default">
        <name>$arrFilterByCommand</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="102" namespace="global" package="Default">
        <name>$strName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="103" namespace="global" package="Default">
        <name>$strHtml</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="104" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="106">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="106">
          <name>$strHtml</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="106">
          <name>$objOverrideParameters</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="Controls">
        <name>GetAttributes</name>
        <full_name>GetAttributes</full_name>
        <argument line="122">
          <name>$blnIncludeCustom</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="122">
          <name>$blnIncludeAction</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="215" package="Controls">
        <name>FilterAddListItem</name>
        <full_name>FilterAddListItem</full_name>
        <argument line="215">
          <name>$arg1</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="215">
          <name>$arg2</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="233" package="Controls">
        <name>HasFilter</name>
        <full_name>HasFilter</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="244" package="Controls">
        <name>SetActiveFilterState</name>
        <full_name>SetActiveFilterState</full_name>
        <docblock line="237">
          <description/>
          <long-description/>
          <tag line="237" name="param" description="for the custom filters, $mixFilterValue will be set as FilterByCommand['value'].&#10;Otherwise, if $mixFilterValue is a QQ condition, it's set as the active filter.&#10;If $mixFilterValue is not a QQ condition, then it's either the value of the filter for text box filters, or it's the &#10;index into the filter list for the list box filters." type="mixed" variable="$mixFilterValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="237" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="244">
          <name>$mixFilterValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="271" package="Controls">
        <name>GetActiveFilterState</name>
        <full_name>GetActiveFilterState</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="275" package="Controls">
        <name>GetActiveFilterValue</name>
        <full_name>GetActiveFilterValue</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="303" package="Controls">
        <name>FilterSetOperand</name>
        <full_name>FilterSetOperand</full_name>
        <argument line="303">
          <name>$mixOperand</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="334" package="Controls">
        <name>ClearFilter</name>
        <full_name>ClearFilter</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="345" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="345">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="415" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="415">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="415">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/base_controls/QDataGridColumn.class.php</error>
      <error line="62" code="50018">No DocBlock was found for property $strBackColor</error>
      <error line="63" code="50018">No DocBlock was found for property $strBorderColor</error>
      <error line="64" code="50018">No DocBlock was found for property $strBorderStyle</error>
      <error line="65" code="50018">No DocBlock was found for property $strBorderWidth</error>
      <error line="66" code="50018">No DocBlock was found for property $strCssClass</error>
      <error line="67" code="50018">No DocBlock was found for property $blnFontBold</error>
      <error line="68" code="50018">No DocBlock was found for property $blnFontItalic</error>
      <error line="69" code="50018">No DocBlock was found for property $strFontNames</error>
      <error line="70" code="50018">No DocBlock was found for property $blnFontOverline</error>
      <error line="71" code="50018">No DocBlock was found for property $strFontSize</error>
      <error line="72" code="50018">No DocBlock was found for property $blnFontStrikeout</error>
      <error line="73" code="50018">No DocBlock was found for property $blnFontUnderline</error>
      <error line="74" code="50018">No DocBlock was found for property $strForeColor</error>
      <error line="75" code="50018">No DocBlock was found for property $strHorizontalAlign</error>
      <error line="76" code="50018">No DocBlock was found for property $strVerticalAlign</error>
      <error line="77" code="50018">No DocBlock was found for property $strWidth</error>
      <error line="78" code="50018">No DocBlock was found for property $blnWrap</error>
      <error line="79" code="50018">No DocBlock was found for property $blnHasResetButton</error>
      <error line="82" code="50018">No DocBlock was found for property $objOrderByClause</error>
      <error line="83" code="50018">No DocBlock was found for property $objReverseOrderByClause</error>
      <error line="85" code="50018">No DocBlock was found for property $intFilterBoxSize</error>
      <error line="86" code="50018">No DocBlock was found for property $strFilterType</error>
      <error line="87" code="50018">No DocBlock was found for property $intFilterColId</error>
      <error line="88" code="50018">No DocBlock was found for property $arrFilterList</error>
      <error line="91" code="50018">No DocBlock was found for property $objActiveFilter</error>
      <error line="93" code="50018">No DocBlock was found for property $objFilterConstant</error>
      <error line="95" code="50018">No DocBlock was found for property $strFilterPrefix</error>
      <error line="96" code="50018">No DocBlock was found for property $strFilterPostfix</error>
      <error line="99" code="50018">No DocBlock was found for property $arrFilterByCommand</error>
      <error line="102" code="50018">No DocBlock was found for property $strName</error>
      <error line="103" code="50018">No DocBlock was found for property $strHtml</error>
      <error line="104" code="50018">No DocBlock was found for property $blnHtmlEntities</error>
      <error line="106" code="50010">No DocBlock was found for method __construct()</error>
      <error line="122" code="50010">No DocBlock was found for method GetAttributes()</error>
      <error line="215" code="50010">No DocBlock was found for method FilterAddListItem()</error>
      <error line="233" code="50010">No DocBlock was found for method HasFilter()</error>
      <error line="237" code="50012">No short description for method SetActiveFilterState()</error>
      <error line="271" code="50010">No DocBlock was found for method GetActiveFilterState()</error>
      <error line="275" code="50010">No DocBlock was found for method GetActiveFilterValue()</error>
      <error line="303" code="50010">No DocBlock was found for method FilterSetOperand()</error>
      <error line="334" code="50010">No DocBlock was found for method ClearFilter()</error>
      <error line="345" code="50010">No DocBlock was found for method __get()</error>
      <error line="415" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QPaginatedControl.class.php" hash="0d1d142d5c7c263465d73478cb490fe5" package="Controls">
    <docblock line="2">
      <description>This file contains the QPaginatedControl and QDataBindException class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="25" package="Controls">
      <extends>\QControl</extends>
      <name>QPaginatedControl</name>
      <full_name>\QPaginatedControl</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="string" variable="$Noun">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$NounPlural">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="\QPaginatorBase" variable="$Paginator">
          <type by_reference="false">\QPaginatorBase</type>
        </tag>
        <tag line="8" name="property" description="" type="\QPaginatorBase" variable="$PaginatorAlternate">
          <type by_reference="false">\QPaginatorBase</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$UseAjax">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="is how many items you want to display per page when Pagination is enabled" type="integer" variable="$ItemsPerPage">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="is the total number of items in the ENTIRE recordset -- only used when Pagination is enabled" type="integer" variable="$TotalItemCount">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="is an array of anything.  THIS MUST BE SET EVERY TIME (DataSource does NOT persist from postback to postback" type="mixed" variable="$DataSource">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property-read" description="" type="mixed" variable="$LimitClause">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property-read" description="is what should be passed in to the LIMIT clause of the sql query that retrieves the array of items from the database" type="mixed" variable="$LimitInfo">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property-read" description="" type="integer" variable="$ItemCount">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="is the current page number you are viewing" type="integer" variable="$PageNumber">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property-read" description="" type="integer" variable="$PageCount">
          <type by_reference="false">integer</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$strNoun</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strNounPlural</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$objPaginator</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$objPaginatorAlternate</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$blnUseAjax</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$objDataSource</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$prxDatagridSorting</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$blnIsBlockElement</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$strDataBindMethod</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$objDataBindControl</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="46">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="46">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Controls">
        <name>__serialize</name>
        <full_name>__serialize</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Controls">
        <name>SetDataBinder</name>
        <full_name>SetDataBinder</full_name>
        <argument line="69">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="69">
          <name>$objParentControl</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="Controls">
        <name>DataBind</name>
        <full_name>DataBind</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="94">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="169" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="169">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="169">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="299" package="Default">
      <extends>\Exception</extends>
      <name>QDataBindException</name>
      <full_name>\QDataBindException</full_name>
      <docblock line="294">
        <description/>
        <long-description/>
        <tag line="294" name="property-read" description="" type="integer" variable="$Offset">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="294" name="property-read" description="" type="mixed" variable="$BackTrace">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="294" name="property-read" description="" type="string" variable="$Query">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="private" line="300" namespace="global" package="Default">
        <name>$intOffset</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="301" namespace="global" package="Default">
        <name>$strTraceArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="302" namespace="global" package="Default">
        <name>$strQuery</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="304" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="304">
          <name>$objExc</name>
          <default/>
          <type>\QCallerException</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="316" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="316">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QPaginatedControl</critical>
      <error line="27" code="50018">No DocBlock was found for property $strNoun</error>
      <error line="28" code="50018">No DocBlock was found for property $strNounPlural</error>
      <error line="31" code="50018">No DocBlock was found for property $objPaginator</error>
      <error line="32" code="50018">No DocBlock was found for property $objPaginatorAlternate</error>
      <error line="33" code="50018">No DocBlock was found for property $blnUseAjax</error>
      <error line="36" code="50018">No DocBlock was found for property $objDataSource</error>
      <error line="37" code="50018">No DocBlock was found for property $prxDatagridSorting</error>
      <error line="40" code="50018">No DocBlock was found for property $blnIsBlockElement</error>
      <error line="43" code="50018">No DocBlock was found for property $strDataBindMethod</error>
      <error line="44" code="50018">No DocBlock was found for property $objDataBindControl</error>
      <error line="46" code="50010">No DocBlock was found for method __construct()</error>
      <error line="59" code="50010">No DocBlock was found for method __serialize()</error>
      <error line="65" code="50010">No DocBlock was found for method Validate()</error>
      <error line="69" code="50010">No DocBlock was found for method SetDataBinder()</error>
      <error line="74" code="50010">No DocBlock was found for method DataBind()</error>
      <error line="94" code="50010">No DocBlock was found for method __get()</error>
      <error line="169" code="50010">No DocBlock was found for method __set()</error>
      <critical line="294" code="50005">No short description for class \QDataBindException</critical>
      <error line="300" code="50018">No DocBlock was found for property $intOffset</error>
      <error line="301" code="50018">No DocBlock was found for property $strTraceArray</error>
      <error line="302" code="50018">No DocBlock was found for property $strQuery</error>
      <error line="304" code="50010">No DocBlock was found for method __construct()</error>
      <error line="316" code="50010">No DocBlock was found for method __get()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QTreeNavItem.class.php" hash="bf68e6ccf76a1aa5cf992c4b97e684d5" package="Controls">
    <docblock line="2">
      <description>This file contains the QTreeNavItem class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Controls">
      <extends>\QBaseClass</extends>
      <name>QTreeNavItem</name>
      <full_name>\QTreeNavItem</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="string" variable="$Name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$Value">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$Selected">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$Expanded">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="mixed" variable="$ChildItemArray">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ItemId">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="mixed" variable="$TreeNav">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ParentItemId">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$HasChildren">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strName</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$strValue</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$strItemId</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$blnSelected</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$blnExpanded</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$objChildItemArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$objTreeNav</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$strParentItemId</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$blnHasChildren</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="39">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$blnExpanded</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$strItemId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="Controls">
        <name>AddChildItem</name>
        <full_name>AddChildItem</full_name>
        <argument line="64">
          <name>$objItem</name>
          <default/>
          <type>\QTreeNavItem</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="71">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="96">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QTreeNavItem</critical>
      <error line="25" code="50018">No DocBlock was found for property $strName</error>
      <error line="26" code="50018">No DocBlock was found for property $strValue</error>
      <error line="27" code="50018">No DocBlock was found for property $strItemId</error>
      <error line="28" code="50018">No DocBlock was found for property $blnSelected</error>
      <error line="29" code="50018">No DocBlock was found for property $blnExpanded</error>
      <error line="31" code="50018">No DocBlock was found for property $objChildItemArray</error>
      <error line="32" code="50018">No DocBlock was found for property $objTreeNav</error>
      <error line="33" code="50018">No DocBlock was found for property $strParentItemId</error>
      <error line="34" code="50018">No DocBlock was found for property $blnHasChildren</error>
      <error line="39" code="50010">No DocBlock was found for method __construct()</error>
      <error line="64" code="50010">No DocBlock was found for method AddChildItem()</error>
      <error line="71" code="50010">No DocBlock was found for method __get()</error>
      <error line="96" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QImageButton.class.php" hash="7aa4bc618d87314bed0c46044180a24e" package="Controls">
    <docblock line="2">
      <description>This file contains the QImageButton class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="19" package="Controls">
      <extends>\QActionControl</extends>
      <name>QImageButton</name>
      <full_name>\QImageButton</full_name>
      <docblock line="8">
        <description>This class will render an HTML ImageButton &lt;input type="image"&gt;.</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="is rendered as the HTML &quot;alt&quot; tag" type="string" variable="$AlternateText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="is the url of the image to be used" type="string" variable="$ImageUrl">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$PrimaryButton">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property-read" description="" type="integer" variable="$ClickX">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property-read" description="" type="integer" variable="$ClickY">
          <type by_reference="false">integer</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strAlternateText</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$strImageUrl</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$blnPrimaryButton</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$intClickX</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$intClickY</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$blnActionsMustTerminate</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Controls">
        <name>GetAttributes</name>
        <full_name>GetAttributes</full_name>
        <argument line="40">
          <name>$blnIncludeCustom</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="40">
          <name>$blnIncludeAction</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="63" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="94">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="118">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="118">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="25" code="50018">No DocBlock was found for property $strAlternateText</error>
      <error line="26" code="50018">No DocBlock was found for property $strImageUrl</error>
      <error line="29" code="50018">No DocBlock was found for property $blnPrimaryButton</error>
      <error line="30" code="50018">No DocBlock was found for property $intClickX</error>
      <error line="31" code="50018">No DocBlock was found for property $intClickY</error>
      <error line="34" code="50018">No DocBlock was found for property $blnActionsMustTerminate</error>
      <error line="40" code="50010">No DocBlock was found for method GetAttributes()</error>
      <error line="51" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="63" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="94" code="50010">No DocBlock was found for method __get()</error>
      <error line="118" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDroppableGen.class.php" hash="6cacf6e89c7937149cd3aa2f1d41a717" package="Default">
    <docblock line="2">
      <description>QDroppableGen File</description>
      <long-description>&lt;p&gt;The abstract QDroppableGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QDroppableBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QDroppable class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="44" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDroppable_ActivateEvent</name>
      <full_name>\QDroppable_ActivateEvent</full_name>
      <docblock line="30">
        <description>Triggered when an accepted draggable starts dragging.</description>
        <long-description>&lt;p&gt;This can be useful if
        you want to make the droppable "light up" when it can be dropped
        on.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;ul&gt;&lt;li&gt;&lt;strong&gt;draggable&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; A jQuery object
        representing the draggable element.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type:
        &lt;a&gt;jQuery&lt;/a&gt; A jQuery object representing the helper that is being
        dragged.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current CSS
        position of the draggable helper as &lt;pre&gt;&lt;code&gt;{ top, left }&lt;/code&gt;&lt;/pre&gt; object.&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current offset position of
        the draggable helper as &lt;pre&gt;&lt;code&gt;{ top, left }&lt;/code&gt;&lt;/pre&gt;
        object.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="45" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dropactivate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="53" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDroppable_CreateEvent</name>
      <full_name>\QDroppable_CreateEvent</full_name>
      <docblock line="47">
        <description>Triggered when the droppable is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="54" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dropcreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="69" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDroppable_DeactivateEvent</name>
      <full_name>\QDroppable_DeactivateEvent</full_name>
      <docblock line="56">
        <description>Triggered when an accepted draggable stops
		dragging.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;draggable&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; A jQuery object
		representing the draggable element.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; A jQuery object representing the helper that is being
		dragged.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current CSS
		position of the draggable helper as &lt;code&gt;{ top, left }&lt;/code&gt; object.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current offset position of
		the draggable helper as &lt;code&gt;{ top, left }&lt;/code&gt;
		object.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="70" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dropdeactivate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="85" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDroppable_DropEvent</name>
      <full_name>\QDroppable_DropEvent</full_name>
      <docblock line="72">
        <description>Triggered when an accepted draggable is dropped on the droppable (based on
		the&lt;a&gt;&lt;code&gt;tolerance&lt;/code&gt;&lt;/a&gt; option).&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;draggable&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; A jQuery object
		representing the draggable element.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; A jQuery object representing the helper that is being
		dragged.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current CSS
		position of the draggable helper as &lt;code&gt;{ top, left }&lt;/code&gt; object.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current offset position of
		the draggable helper as &lt;code&gt;{ top, left }&lt;/code&gt;
		object.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="86" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'drop'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="95" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDroppable_OutEvent</name>
      <full_name>\QDroppable_OutEvent</full_name>
      <docblock line="88">
        <description>Triggered when an accepted draggable is dragged out of the droppable (based
		on the&lt;a&gt;&lt;code&gt;tolerance&lt;/code&gt;&lt;/a&gt; option).&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="96" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dropout'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="111" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDroppable_OverEvent</name>
      <full_name>\QDroppable_OverEvent</full_name>
      <docblock line="98">
        <description>Triggered when an accepted draggable is dragged over the droppable (based
		on the&lt;a&gt;&lt;code&gt;tolerance&lt;/code&gt;&lt;/a&gt; option).&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;draggable&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; A jQuery object
		representing the draggable element.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; A jQuery object representing the helper that is being
		dragged.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current CSS
		position of the draggable helper as &lt;code&gt;{ top, left }&lt;/code&gt; object.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current offset position of
		the draggable helper as &lt;code&gt;{ top, left }&lt;/code&gt;
		object.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="112" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dropover'</value>
      </constant>
    </class>
    <class final="false" abstract="true" namespace="global" line="158" package="Controls\Base">
      <extends>\QControl</extends>
      <name>QDroppableGen</name>
      <full_name>\QDroppableGen</full_name>
      <docblock line="117">
        <description>Generated QDroppableGen class.</description>
        <long-description>&lt;p&gt;This is the QDroppableGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QDroppableBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="117" name="see" description="\global\QDroppableBase" refers="\global\QDroppableBase"/>
        <tag line="117" name="package" description="Controls\Base"/>
        <tag line="117" name="property" description="Controls which draggable elements are accepted by the&#10;&#9;&#9;droppable.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: A selector indicating&#10;&#9;&#9;which draggable elements are accepted.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Function&lt;/strong&gt;:&#10;&#9;&#9;A function that will be called for each draggable on the page (passed as&#10;&#9;&#9;the first argument to the function). The function must return&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt; if the draggable should be accepted.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Accept">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="117" name="property" description="If specified, the class will be added to the droppable while an acceptable&#10;&#9;&#9;draggable is being dragged." type="string" variable="$ActiveClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="117" name="property" description="If set to &lt;code&gt;false&lt;/code&gt;, will prevent the &lt;code&gt;ui-droppable&lt;/code&gt;&#10;&#9;&#9;class from being added. This may be desired as a performance optimization&#10;&#9;&#9;when calling &lt;code&gt;.droppable()&lt;/code&gt; init on hundreds of elements." type="boolean" variable="$AddClasses">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="117" name="property" description="Disables the droppable if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="117" name="property" description="By default, when an element is dropped on nested droppables, each droppable&#10;&#9;&#9;will receive the element. However, by setting this option to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;, any parent droppables will not receive the element." type="boolean" variable="$Greedy">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="117" name="property" description="If specified, the class will be added to the droppable while an acceptable&#10;&#9;&#9;draggable is being hovered over the droppable." type="string" variable="$HoverClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="117" name="property" description="Used to group sets of draggable and droppable items, in addition to the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; option. A draggable with the same scope value as&#10;&#9;&#9;a droppable will be accepted." type="string" variable="$Scope">
          <type by_reference="false">string</type>
        </tag>
        <tag line="117" name="property" description="Specifies which mode to use for testing whether a draggable is hovering&#10;&#9;&#9;over a droppable. Possible values: &#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;&lt;code&gt;&quot;fit&quot;&lt;/code&gt;:&#10;&#9;&#9;Draggable overlaps the droppable entirely.&lt;/li&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;li&gt;&lt;code&gt;&quot;intersect&quot;&lt;/code&gt;: Draggable overlaps the droppable at&#10;&#9;&#9;least 50% in both directions.&lt;/li&gt; &#9;&#9;&#9;&#9;&#9;&lt;li&gt;&lt;code&gt;&quot;pointer&quot;&lt;/code&gt;: Mouse&#10;&#9;&#9;pointer overlaps the droppable.&lt;/li&gt; &#9;&#9;&#9;&#9;&#9;&lt;li&gt;&lt;code&gt;&quot;touch&quot;&lt;/code&gt;:&#10;&#9;&#9;Draggable overlaps the droppable any amount.&lt;/li&gt;&lt;/ul&gt;" type="string" variable="$Tolerance">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="159" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="160" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="162" namespace="global" package="Default">
        <name>$mixAccept</name>
        <default>null</default>
        <docblock line="161">
          <description/>
          <long-description/>
          <tag line="161" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="164" namespace="global" package="Default">
        <name>$strActiveClass</name>
        <default>null</default>
        <docblock line="163">
          <description/>
          <long-description/>
          <tag line="163" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="166" namespace="global" package="Default">
        <name>$blnAddClasses</name>
        <default>null</default>
        <docblock line="165">
          <description/>
          <long-description/>
          <tag line="165" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="168" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="167">
          <description/>
          <long-description/>
          <tag line="167" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="170" namespace="global" package="Default">
        <name>$blnGreedy</name>
        <default>null</default>
        <docblock line="169">
          <description/>
          <long-description/>
          <tag line="169" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="172" namespace="global" package="Default">
        <name>$strHoverClass</name>
        <default>null</default>
        <docblock line="171">
          <description/>
          <long-description/>
          <tag line="171" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="174" namespace="global" package="Default">
        <name>$strScope</name>
        <default>null</default>
        <docblock line="173">
          <description/>
          <long-description/>
          <tag line="173" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="176" namespace="global" package="Default">
        <name>$strTolerance</name>
        <default>null</default>
        <docblock line="175">
          <description/>
          <long-description/>
          <tag line="175" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="178" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="178">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="178">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="187" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="209" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="229" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="220">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="220" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="220" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="220" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="229">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="246" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="241">
          <description>Removes the droppable functionality completely.</description>
          <long-description>&lt;p&gt;This will return the
element back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="253" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="249">
          <description>Disables the droppable.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="260" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="256">
          <description>Enables the droppable.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="269" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="263">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="263" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="269">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="277" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="272">
          <description>Gets an object containing key/value pairs representing the current
droppable options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="280">
          <description>Sets the value of the droppable option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="280" name="param" description="" type="\" variable="$optionName"/>
          <tag line="280" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="289">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="289">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="297" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="292">
          <description>Sets one or more options for the droppable.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="292" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="297">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="302" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="302">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="322" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="322">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="322">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="159" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="160" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="161" code="50019">No short description for property $mixAccept</critical>
      <critical line="163" code="50019">No short description for property $strActiveClass</critical>
      <critical line="165" code="50019">No short description for property $blnAddClasses</critical>
      <critical line="167" code="50019">No short description for property $blnDisabled</critical>
      <critical line="169" code="50019">No short description for property $blnGreedy</critical>
      <critical line="171" code="50019">No short description for property $strHoverClass</critical>
      <critical line="173" code="50019">No short description for property $strScope</critical>
      <critical line="175" code="50019">No short description for property $strTolerance</critical>
      <error line="178" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="187" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="201" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="205" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="209" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="302" code="50010">No DocBlock was found for method __get()</error>
      <error line="322" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QAccordionBase.class.php" hash="daca8b0169cd75f14656af498352935d" package="Default">
    <docblock line="3">
      <description>Accordion Base File</description>
      <long-description>&lt;p&gt;The QAccordionBase class defined here provides an interface between the generated
QAccordianGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QAccordion.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="40" package="Controls\Base">
      <extends>\QAccordionGen</extends>
      <name>QAccordionBase</name>
      <full_name>\QAccordionBase</full_name>
      <docblock line="12">
        <description>Implements the JQuery UI Accordion</description>
        <long-description>&lt;p&gt;An accordion is a series of panels, only one of which is shown at a time. Each panel has a trigger, and
when the user clicks on the trigger, its corresponding panel is shown, and the others hidden.&lt;/p&gt;

&lt;p&gt;The Accordion decends from QPanel. There are a number of ways to create an Accordion,
but the basics are that you put a series of block level items inside the Accordion (like divs, or h1, QPanels, etc.)
and it will automatically pick the first item as the header and the second item as the content that will be collapsed
or expanded, and will repeat that until the end of the Accordion block.&lt;/p&gt;

&lt;p&gt;If you want more control, you can assign a jQuery selector to the Header item and that selector
will be used to find the headers within the Accordion. In this case, the next block level sibling to
the header will be used as the content for that header. For example, to use all the items with class ItemHeader
inside the Accordion panel as the headers for the accordion, do this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$accordion-&gt;Header = '.ItemHeader';&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To get or set the index of the item that is currently open, use the inherited&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-&gt;Active&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;value.&lt;/p&gt;

&lt;p&gt;The Accordion will generate a QChangeEvent when a new header is selected.&lt;/p&gt;

&lt;p&gt;See the jQuery UI documentation for additional events, methods and options that may be useful.&lt;/p&gt;</long-description>
        <tag line="12" name="link" description="http://jqueryui.com/accordion/" link="http://jqueryui.com/accordion/"/>
        <tag line="12" name="package" description="Controls\Base"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$blnAutoRenderChildren</name>
        <default>true</default>
        <docblock line="42">
          <description/>
          <long-description/>
          <tag line="42" name="var" description="Should the children be rendered automatically?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="51" package="Controls\Base">
        <name>RenderChildren</name>
        <full_name>RenderChildren</full_name>
        <docblock line="45">
          <description>Rendered the children of this control</description>
          <long-description/>
          <tag line="45" name="param" description="Send the output to client?" type="bool" variable="$blnDisplayOutput">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="45" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
        <docblock line="72">
          <description>Returns the Javascript needed as the part of control's behavior</description>
          <long-description/>
          <tag line="72" name="return" description="The control's JS" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="91">
          <description>PHP __set magic method implementation</description>
          <long-description/>
          <tag line="91" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="param" description="Value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="98">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="qcubed/_core/base_controls/QDataGridRowStyle.class.php" hash="46362e55baee79a286be431c1370a6ed" package="Controls">
    <docblock line="2">
      <description>This file contains the QDataGridRowStyle class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="32" package="Controls">
      <extends>\QBaseClass</extends>
      <name>QDataGridRowStyle</name>
      <full_name>\QDataGridRowStyle</full_name>
      <docblock line="8">
        <description>This defines a the stle for a row &lt;tr&gt; for a DataGrid
All the appearance properties should be self-explanatory.</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="sets the CSS background-color of the control" type="string" variable="$BackColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="sets the CSS border-color of the control" type="string" variable="$BorderColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="is used to set CSS border-style by {@link QBorderStyle}" type="string" variable="$BorderStyle">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="sets the CSS border-width of the control" type="string" variable="$BorderWidth">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="sets or returns the CSS class for this control" type="string" variable="$CssClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="sets the font bold or normal" type="boolean" variable="$FontBold">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="sets the Font italic or normal" type="boolean" variable="$FontItalic">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="sets the name of used fonts" type="string" variable="$FontNames">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$FontOverline">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="sets the font-size of the control" type="string" variable="$FontSize">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$FontStrikeout">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="sets the font underlined" type="boolean" variable="$FontUnderline">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="sets the forecolor of the control (like fontcolor)" type="string" variable="$ForeColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$Height">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$HorizontalAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$VerticalAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$Wrap">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$strBackColor</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$strBorderColor</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$strBorderStyle</name>
        <default>\QBorderStyle::NotSet</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$strBorderWidth</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$blnFontBold</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$blnFontItalic</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$strFontNames</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="global" package="Default">
        <name>$blnFontOverline</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="global" package="Default">
        <name>$strFontSize</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$blnFontStrikeout</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$blnFontUnderline</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$strForeColor</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="global" package="Default">
        <name>$strHeight</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="global" package="Default">
        <name>$strHorizontalAlign</name>
        <default>\QHorizontalAlign::NotSet</default>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$strVerticalAlign</name>
        <default>\QVerticalAlign::NotSet</default>
      </property>
      <property final="false" static="false" visibility="protected" line="49" namespace="global" package="Default">
        <name>$blnWrap</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="Controls">
        <name>ApplyOverride</name>
        <full_name>ApplyOverride</full_name>
        <argument line="51">
          <name>$objOverrideStyle</name>
          <default/>
          <type>\QDataGridRowStyle</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Controls">
        <name>GetAttributes</name>
        <full_name>GetAttributes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="194" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="194">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="227" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="227">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="227">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $strBackColor</error>
      <error line="34" code="50018">No DocBlock was found for property $strBorderColor</error>
      <error line="35" code="50018">No DocBlock was found for property $strBorderStyle</error>
      <error line="36" code="50018">No DocBlock was found for property $strBorderWidth</error>
      <error line="37" code="50018">No DocBlock was found for property $strCssClass</error>
      <error line="38" code="50018">No DocBlock was found for property $blnFontBold</error>
      <error line="39" code="50018">No DocBlock was found for property $blnFontItalic</error>
      <error line="40" code="50018">No DocBlock was found for property $strFontNames</error>
      <error line="41" code="50018">No DocBlock was found for property $blnFontOverline</error>
      <error line="42" code="50018">No DocBlock was found for property $strFontSize</error>
      <error line="43" code="50018">No DocBlock was found for property $blnFontStrikeout</error>
      <error line="44" code="50018">No DocBlock was found for property $blnFontUnderline</error>
      <error line="45" code="50018">No DocBlock was found for property $strForeColor</error>
      <error line="46" code="50018">No DocBlock was found for property $strHeight</error>
      <error line="47" code="50018">No DocBlock was found for property $strHorizontalAlign</error>
      <error line="48" code="50018">No DocBlock was found for property $strVerticalAlign</error>
      <error line="49" code="50018">No DocBlock was found for property $blnWrap</error>
      <error line="51" code="50010">No DocBlock was found for method ApplyOverride()</error>
      <error line="100" code="50010">No DocBlock was found for method GetAttributes()</error>
      <error line="194" code="50010">No DocBlock was found for method __get()</error>
      <error line="227" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDialogGen.class.php" hash="0f5c249e669361bf1b0c9e358dbac7df" package="Default">
    <docblock line="2">
      <description>QDialogGen File</description>
      <long-description>&lt;p&gt;The abstract QDialogGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QDialogBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QDialog class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="37" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_BeforeCloseEvent</name>
      <full_name>\QDialog_BeforeCloseEvent</full_name>
      <docblock line="30">
        <description>Triggered when a dialog is about to close.</description>
        <long-description>&lt;p&gt;If canceled, the dialog will not
        close.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note: The
        &lt;pre&gt;&lt;code&gt;ui&lt;/code&gt;&lt;/pre&gt; object is empty but included for consistency with other
        events.&lt;/em&gt;&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="38" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogbeforeclose'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="46" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_CloseEvent</name>
      <full_name>\QDialog_CloseEvent</full_name>
      <docblock line="40">
        <description>Triggered when the dialog is closed.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="47" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogclose'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="55" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_CreateEvent</name>
      <full_name>\QDialog_CreateEvent</full_name>
      <docblock line="49">
        <description>Triggered when the dialog is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="56" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogcreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="66" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_DragEvent</name>
      <full_name>\QDialog_DragEvent</full_name>
      <docblock line="58">
        <description>Triggered while the dialog is being dragged.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current CSS
		position of the dialog.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type:
		&lt;a&gt;Object&lt;/a&gt; The current offset position of the
		dialog.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="67" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogdrag'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="78" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_DragStartEvent</name>
      <full_name>\QDialog_DragStartEvent</full_name>
      <docblock line="69">
        <description>Triggered when the user starts dragging the
		dialog.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current CSS
		position of the dialog.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type:
		&lt;a&gt;Object&lt;/a&gt; The current offset position of the
		dialog.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="79" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogdragstart'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="89" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_DragStopEvent</name>
      <full_name>\QDialog_DragStopEvent</full_name>
      <docblock line="81">
        <description>Triggered after the dialog has been dragged.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current CSS
		position of the dialog.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type:
		&lt;a&gt;Object&lt;/a&gt; The current offset position of the
		dialog.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="90" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogdragstop'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="98" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_FocusEvent</name>
      <full_name>\QDialog_FocusEvent</full_name>
      <docblock line="92">
        <description>Triggered when the dialog gains focus.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="99" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogfocus'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="107" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_OpenEvent</name>
      <full_name>\QDialog_OpenEvent</full_name>
      <docblock line="101">
        <description>Triggered when the dialog is opened.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="108" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogopen'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="121" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_ResizeEvent</name>
      <full_name>\QDialog_ResizeEvent</full_name>
      <docblock line="110">
        <description>Triggered while the dialog is being resized.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The CSS
		position of the dialog prior to being resized.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current CSS position
		of the dialog.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;originalSize&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		The size of the dialog prior to being resized.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;size&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current size of the
		dialog.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="122" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogresize'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="136" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_ResizeStartEvent</name>
      <full_name>\QDialog_ResizeStartEvent</full_name>
      <docblock line="124">
        <description>Triggered when the user starts resizing the
		dialog.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The CSS
		position of the dialog prior to being resized.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current CSS position
		of the dialog.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;originalSize&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		The size of the dialog prior to being resized.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;size&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current size of the
		dialog.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="137" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogresizestart'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="150" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDialog_ResizeStopEvent</name>
      <full_name>\QDialog_ResizeStopEvent</full_name>
      <docblock line="139">
        <description>Triggered after the dialog has been resized.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The CSS
		position of the dialog prior to being resized.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current CSS position
		of the dialog.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;originalSize&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		The size of the dialog prior to being resized.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;size&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current size of the
		dialog.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="151" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dialogresizestop'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="248" package="Controls\Base">
      <extends>\QPanel</extends>
      <name>QDialogGen</name>
      <full_name>\QDialogGen</full_name>
      <docblock line="156">
        <description>Generated QDialogGen class.</description>
        <long-description>&lt;p&gt;This is the QDialogGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QDialogBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="156" name="see" description="\global\QDialogBase" refers="\global\QDialogBase"/>
        <tag line="156" name="package" description="Controls\Base"/>
        <tag line="156" name="property" description="If set to &lt;code&gt;true&lt;/code&gt;, the dialog will automatically open upon&#10;&#9;&#9;initialization. If &lt;code&gt;false&lt;/code&gt;, the dialog will stay hidden until&#10;&#9;&#9;the &lt;a&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; method is called." type="boolean" variable="$AutoOpen">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="156" name="property" description="Specifies which buttons should be displayed on the dialog. The context of&#10;&#9;&#9;the callback is the dialog element; if you need access to the button, it is&#10;&#9;&#9;available as the target of the event object.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;: The keys are the button&#10;&#9;&#9;labels and the values are the callbacks for when the associated button is&#10;&#9;&#9;clicked.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Array&lt;/strong&gt;: Each element of the array must be&#10;&#9;&#9;an object defining the attributes, properties, and event handlers to set on&#10;&#9;&#9;the button.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Buttons">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="156" name="property" description="Specifies whether the dialog should close when it has focus and the user&#10;&#9;&#9;presses the escape (ESC) key." type="boolean" variable="$CloseOnEscape">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="156" name="property" description="Specifies the text for the close button. Note that the close text is&#10;&#9;&#9;visibly hidden when using a standard theme." type="string" variable="$CloseText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="156" name="property" description="The specified class name(s) will be added to the dialog, for additional&#10;&#9;&#9;theming." type="string" variable="$DialogClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="156" name="property" description="If set to &lt;code&gt;true&lt;/code&gt;, the dialog will be draggable by the title bar.&#10;&#9;&#9;Requires the &lt;a&gt;jQuery UI Draggable wiget&lt;/a&gt; to be included." type="boolean" variable="$Draggable">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="156" name="property" description="The height of the dialog.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: The height in&#10;&#9;&#9;pixels.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: The only supported string value&#10;&#9;&#9;is &lt;code&gt;&quot;auto&quot;&lt;/code&gt; which will allow the dialog height to adjust based&#10;&#9;&#9;on its content.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Height">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="156" name="property" description="If and how to animate the hiding of the dialog.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;:  &#9;&#9;&#9;&#9;&#9;The dialog will&#10;&#9;&#9;fade out while animating the height and width for the specified&#10;&#9;&#9;duration.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;:  &#9;&#9;&#9;&#9;&#9;The dialog will be hidden&#10;&#9;&#9;using the specified jQuery UI effect. See the &lt;a&gt;list of effects&lt;/a&gt; for&#10;&#9;&#9;possible values.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;: If the value is an&#10;&#9;&#9;object, then &lt;code&gt;effect&lt;/code&gt;, &lt;code&gt;duration&lt;/code&gt;, and&#10;&#9;&#9;&lt;code&gt;easing&lt;/code&gt; properties may be provided. The &lt;code&gt;effect&lt;/code&gt;&#10;&#9;&#9;property must be the name of a jQuery UI effect. When using a jQuery UI&#10;&#9;&#9;effect that supports additional settings, you may include those settings in&#10;&#9;&#9;the object and they will be passed to the effect. If &lt;code&gt;duration&lt;/code&gt;&#10;&#9;&#9;or &lt;code&gt;easing&lt;/code&gt; is omitted, then the default values will be&#10;&#9;&#9;used.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Hide">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="156" name="property" description="The maximum height to which the dialog can be resized, in pixels." type="integer" variable="$MaxHeight">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="156" name="property" description="The maximum width to which the dialog can be resized, in pixels." type="integer" variable="$MaxWidth">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="156" name="property" description="The minimum height to which the dialog can be resized, in pixels." type="integer" variable="$MinHeight">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="156" name="property" description="The minimum width to which the dialog can be resized, in pixels." type="integer" variable="$MinWidth">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="156" name="property" description="If set to &lt;code&gt;true&lt;/code&gt;, the dialog will have modal behavior; other&#10;&#9;&#9;items on the page will be disabled, i.e., cannot be interacted with. Modal&#10;&#9;&#9;dialogs create an overlay below the dialog but above other page elements." type="boolean" variable="$Modal">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="156" name="property" description="Specifies where the dialog should be displayed. The dialog will handle&#10;&#9;&#9;collisions such that as much of the dialog is visible as&#10;&#9;&#9;possible.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;: Identifies the position&#10;&#9;&#9;of the dialog when opened. The &lt;code&gt;of&lt;/code&gt; option defaults to the&#10;&#9;&#9;window, but you can specify another element to position against. You can&#10;&#9;&#9;refer to the &lt;a&gt;jQuery UI Position&lt;/a&gt; utility for more details about the&#10;&#9;&#9;various options.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A string representing&#10;&#9;&#9;the position within the viewport. Possible values: &lt;code&gt;&quot;center&quot;&lt;/code&gt;,&#10;&#9;&#9;&lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, &lt;code&gt;&quot;top&quot;&lt;/code&gt;,&#10;&#9;&#9;&lt;code&gt;&quot;bottom&quot;&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Array&lt;/strong&gt;: An array containing&#10;&#9;&#9;an &lt;em&gt;x, y&lt;/em&gt; coordinate pair in pixel offset from the top left corner&#10;&#9;&#9;of the viewport or the name of a possible string value.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Position">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="156" name="property" description="If set to &lt;code&gt;true&lt;/code&gt;, the dialog will be resizable. Requires the&#10;&#9;&#9;&lt;a&gt;jQuery UI Resizable widget&lt;/a&gt; to be included." type="boolean" variable="$Resizable">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="156" name="property" description="If and how to animate the showing of the dialog.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;:  &#9;&#9;&#9;&#9;&#9;The dialog will&#10;&#9;&#9;fade in while animating the height and width for the specified&#10;&#9;&#9;duration.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;:  &#9;&#9;&#9;&#9;&#9;The dialog will be shown&#10;&#9;&#9;using the specified jQuery UI effect. See the &lt;a&gt;list of effects&lt;/a&gt; for&#10;&#9;&#9;possible values.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;: If the value is an&#10;&#9;&#9;object, then &lt;code&gt;effect&lt;/code&gt;, &lt;code&gt;duration&lt;/code&gt;, and&#10;&#9;&#9;&lt;code&gt;easing&lt;/code&gt; properties may be provided. The &lt;code&gt;effect&lt;/code&gt;&#10;&#9;&#9;property must be the name of a jQuery UI effect. When using a jQuery UI&#10;&#9;&#9;effect that supports additional settings, you may include those settings in&#10;&#9;&#9;the object and they will be passed to the effect. If &lt;code&gt;duration&lt;/code&gt;&#10;&#9;&#9;or &lt;code&gt;easing&lt;/code&gt; is omitted, then the default values will be&#10;&#9;&#9;used.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Show">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="156" name="property" description="Specifies whether the dialog will stack on top of other dialogs. This will&#10;&#9;&#9;cause the dialog to move to the front of other dialogs when it gains focus." type="boolean" variable="$Stack">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="156" name="property" description="Specifies the title of the dialog. Any valid HTML may be set as the title.&#10;&#9;&#9;The title can also be specified by the &lt;code&gt;title&lt;/code&gt; attribute on the&#10;&#9;&#9;dialog source element." type="string" variable="$Title">
          <type by_reference="false">string</type>
        </tag>
        <tag line="156" name="property" description="The width of the dialog, in pixels." type="integer" variable="$Width">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="156" name="property" description="The starting z-index for the dialog." type="integer" variable="$ZIndex">
          <type by_reference="false">integer</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="249" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="250" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="252" namespace="global" package="Default">
        <name>$blnAutoOpen</name>
        <default>null</default>
        <docblock line="251">
          <description/>
          <long-description/>
          <tag line="251" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="254" namespace="global" package="Default">
        <name>$mixButtons</name>
        <default>null</default>
        <docblock line="253">
          <description/>
          <long-description/>
          <tag line="253" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="256" namespace="global" package="Default">
        <name>$blnCloseOnEscape</name>
        <default>null</default>
        <docblock line="255">
          <description/>
          <long-description/>
          <tag line="255" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="258" namespace="global" package="Default">
        <name>$strCloseText</name>
        <default>null</default>
        <docblock line="257">
          <description/>
          <long-description/>
          <tag line="257" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="260" namespace="global" package="Default">
        <name>$strDialogClass</name>
        <default>null</default>
        <docblock line="259">
          <description/>
          <long-description/>
          <tag line="259" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="262" namespace="global" package="Default">
        <name>$blnDraggable</name>
        <default>null</default>
        <docblock line="261">
          <description/>
          <long-description/>
          <tag line="261" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="264" namespace="global" package="Default">
        <name>$mixHeight</name>
        <default>null</default>
        <docblock line="263">
          <description/>
          <long-description/>
          <tag line="263" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="266" namespace="global" package="Default">
        <name>$mixHide</name>
        <default>null</default>
        <docblock line="265">
          <description/>
          <long-description/>
          <tag line="265" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="268" namespace="global" package="Default">
        <name>$intMaxHeight</name>
        <default>null</default>
        <docblock line="267">
          <description/>
          <long-description/>
          <tag line="267" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="270" namespace="global" package="Default">
        <name>$intMaxWidth</name>
        <default>null</default>
        <docblock line="269">
          <description/>
          <long-description/>
          <tag line="269" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="272" namespace="global" package="Default">
        <name>$intMinHeight</name>
        <default>null</default>
        <docblock line="271">
          <description/>
          <long-description/>
          <tag line="271" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="274" namespace="global" package="Default">
        <name>$intMinWidth</name>
        <default>null</default>
        <docblock line="273">
          <description/>
          <long-description/>
          <tag line="273" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="276" namespace="global" package="Default">
        <name>$blnModal</name>
        <default>null</default>
        <docblock line="275">
          <description/>
          <long-description/>
          <tag line="275" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="278" namespace="global" package="Default">
        <name>$mixPosition</name>
        <default>null</default>
        <docblock line="277">
          <description/>
          <long-description/>
          <tag line="277" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="280" namespace="global" package="Default">
        <name>$blnResizable</name>
        <default>null</default>
        <docblock line="279">
          <description/>
          <long-description/>
          <tag line="279" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="282" namespace="global" package="Default">
        <name>$mixShow</name>
        <default>null</default>
        <docblock line="281">
          <description/>
          <long-description/>
          <tag line="281" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="284" namespace="global" package="Default">
        <name>$blnStack</name>
        <default>null</default>
        <docblock line="283">
          <description/>
          <long-description/>
          <tag line="283" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="286" namespace="global" package="Default">
        <name>$strTitle</name>
        <default>null</default>
        <docblock line="285">
          <description/>
          <long-description/>
          <tag line="285" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="288" namespace="global" package="Default">
        <name>$intWidth</name>
        <default>null</default>
        <docblock line="287">
          <description/>
          <long-description/>
          <tag line="287" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="290" namespace="global" package="Default">
        <name>$intZIndex</name>
        <default>null</default>
        <docblock line="289">
          <description/>
          <long-description/>
          <tag line="289" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="292" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="292">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="292">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="301" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="327" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="331" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="335" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="355" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="346">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="346" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="346" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="346" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="355">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="371" package="Controls\Base">
        <name>Close</name>
        <full_name>Close</full_name>
        <docblock line="367">
          <description>Closes the dialog.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="379" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="374">
          <description>Removes the dialog functionality completely.</description>
          <long-description>&lt;p&gt;This will return the element
back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="386" package="Controls\Base">
        <name>IsOpen</name>
        <full_name>IsOpen</full_name>
        <docblock line="382">
          <description>Whether the dialog is currently open.&lt;ul&gt;&lt;li&gt;This method does not accept
any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="393" package="Controls\Base">
        <name>MoveToTop</name>
        <full_name>MoveToTop</full_name>
        <docblock line="389">
          <description>Moves the dialog to the top of the dialog stack.&lt;ul&gt;&lt;li&gt;This method does
not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="400" package="Controls\Base">
        <name>Open</name>
        <full_name>Open</full_name>
        <docblock line="396">
          <description>Opens the dialog.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="409" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="403">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="403" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="409">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="416" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="412">
          <description>Gets an object containing key/value pairs representing the current dialog
options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="428" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="419">
          <description>Sets the value of the dialog option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="419" name="param" description="" type="\" variable="$optionName"/>
          <tag line="419" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="428">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="428">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="436" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="431">
          <description>Sets one or more options for the dialog.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="431" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="436">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="441" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="441">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="473" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="473">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="473">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="249" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="250" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="251" code="50019">No short description for property $blnAutoOpen</critical>
      <critical line="253" code="50019">No short description for property $mixButtons</critical>
      <critical line="255" code="50019">No short description for property $blnCloseOnEscape</critical>
      <critical line="257" code="50019">No short description for property $strCloseText</critical>
      <critical line="259" code="50019">No short description for property $strDialogClass</critical>
      <critical line="261" code="50019">No short description for property $blnDraggable</critical>
      <critical line="263" code="50019">No short description for property $mixHeight</critical>
      <critical line="265" code="50019">No short description for property $mixHide</critical>
      <critical line="267" code="50019">No short description for property $intMaxHeight</critical>
      <critical line="269" code="50019">No short description for property $intMaxWidth</critical>
      <critical line="271" code="50019">No short description for property $intMinHeight</critical>
      <critical line="273" code="50019">No short description for property $intMinWidth</critical>
      <critical line="275" code="50019">No short description for property $blnModal</critical>
      <critical line="277" code="50019">No short description for property $mixPosition</critical>
      <critical line="279" code="50019">No short description for property $blnResizable</critical>
      <critical line="281" code="50019">No short description for property $mixShow</critical>
      <critical line="283" code="50019">No short description for property $blnStack</critical>
      <critical line="285" code="50019">No short description for property $strTitle</critical>
      <critical line="287" code="50019">No short description for property $intWidth</critical>
      <critical line="289" code="50019">No short description for property $intZIndex</critical>
      <error line="292" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="301" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="327" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="331" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="335" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="441" code="50010">No DocBlock was found for method __get()</error>
      <error line="473" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QTextBoxBase.class.php" hash="dec3bc78cb2d432687c24bd2a2628131" package="Controls">
    <docblock line="2">
      <description>This file contains the QTextBoxBase and QCrossScriptingException class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <include line="145" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="471" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="true" namespace="global" line="33" package="Controls">
      <extends>\QControl</extends>
      <name>QTextBoxBase</name>
      <full_name>\QTextBoxBase</full_name>
      <docblock line="8">
        <description>This class will render an HTML Textbox -- which can either be [input type="text"],
[input type="password"] or [textarea] depending on the TextMode (see below).</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="is the &quot;cols&quot; html attribute (applicable for MultiLine textboxes)" type="integer" variable="$Columns">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$Format">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="is the contents of the textbox, itself" type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$LabelForRequired">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$LabelForRequiredUnnamed">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$LabelForTooShort">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$LabelForTooShortUnnamed">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$LabelForTooLong">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$LabelForTooLongUnnamed">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="HTML5 Only. Placeholder text that gets erased once a user types." type="string" variable="$Placeholder">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="can be Allow, HtmlEntities, or Deny.  Deny is the default. Prevents cross scripting hacks.  HtmlEntities causes framework to automatically call php function htmlentities on the input data.  Allow allows everything to come through without altering at all.  USE &quot;ALLOW&quot; judiciously: using ALLOW on text entries, and then outputting that data WILL allow hackers to perform cross scripting hacks." type="string" variable="$CrossScripting">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="is the &quot;maxlength&quot; html attribute (applicable for SingleLine textboxes)" type="integer" variable="$MaxLength">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="is the minimum requred length to pass validation" type="integer" variable="$MinLength">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="is the &quot;readonly&quot; html attribute (making a textbox &quot;ReadOnly&quot; is very similar to setting the textbox to Enabled=false.  There are only subtle display-differences, I believe, between the two." type="boolean" variable="$ReadOnly">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="is the &quot;rows&quot; html attribute (applicable for MultiLine textboxes)" type="integer" variable="$Rows">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="can be &quot;SingleLine&quot;, &quot;MultiLine&quot;, and &quot;Password&quot;." type="string" variable="$TextMode">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$ValidateTrimmed">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="is the &quot;wrap&quot; html attribute (applicable for MultiLine textboxes)" type="boolean" variable="$Wrap">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$intColumns</name>
        <default>0</default>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="global" package="Default">
        <name>$strText</name>
        <default>null</default>
        <docblock line="41">
          <description/>
          <long-description/>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$strLabelForRequired</name>
        <default/>
        <docblock line="43">
          <description/>
          <long-description/>
          <tag line="43" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="global" package="Default">
        <name>$strLabelForRequiredUnnamed</name>
        <default/>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$strLabelForTooShort</name>
        <default/>
        <docblock line="47">
          <description/>
          <long-description/>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" namespace="global" package="Default">
        <name>$strLabelForTooShortUnnamed</name>
        <default/>
        <docblock line="49">
          <description/>
          <long-description/>
          <tag line="49" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Default">
        <name>$strLabelForTooLong</name>
        <default/>
        <docblock line="51">
          <description/>
          <long-description/>
          <tag line="51" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$strLabelForTooLongUnnamed</name>
        <default/>
        <docblock line="53">
          <description/>
          <long-description/>
          <tag line="53" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="global" package="Default">
        <name>$strPlaceholder</name>
        <default>''</default>
        <docblock line="55">
          <description/>
          <long-description/>
          <tag line="55" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$strFormat</name>
        <default>'%s'</default>
        <docblock line="57">
          <description/>
          <long-description/>
          <tag line="57" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="62" namespace="global" package="Default">
        <name>$intMaxLength</name>
        <default>0</default>
        <docblock line="61">
          <description/>
          <long-description/>
          <tag line="61" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="global" package="Default">
        <name>$intMinLength</name>
        <default>0</default>
        <docblock line="63">
          <description/>
          <long-description/>
          <tag line="63" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="global" package="Default">
        <name>$blnReadOnly</name>
        <default>false</default>
        <docblock line="65">
          <description/>
          <long-description/>
          <tag line="65" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="68" namespace="global" package="Default">
        <name>$intRows</name>
        <default>0</default>
        <docblock line="67">
          <description/>
          <long-description/>
          <tag line="67" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="70" namespace="global" package="Default">
        <name>$strTextMode</name>
        <default>\QTextMode::SingleLine</default>
        <docblock line="69">
          <description/>
          <long-description/>
          <tag line="69" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" namespace="global" package="Default">
        <name>$strCrossScripting</name>
        <default/>
        <docblock line="71">
          <description/>
          <long-description/>
          <tag line="71" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" namespace="global" package="Default">
        <name>$objHTMLPurifierConfig</name>
        <default>null</default>
        <docblock line="73">
          <description/>
          <long-description/>
          <tag line="73" name="var" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$blnValidateTrimmed</name>
        <default>false</default>
        <docblock line="75">
          <description/>
          <long-description/>
          <tag line="75" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="80" namespace="global" package="Default">
        <name>$blnWrap</name>
        <default>true</default>
        <docblock line="79">
          <description/>
          <long-description/>
          <tag line="79" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="85">
          <description>Constructor for the QTextBox[Base]</description>
          <long-description/>
          <tag line="85" name="param" description="" type="\QControl|\QForm" variable="$objParentObject">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
          </tag>
          <tag line="85" name="param" description="" type="null|string" variable="$strControlId">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Controls">
        <name>SetPurifierConfig</name>
        <full_name>SetPurifierConfig</full_name>
        <docblock line="106">
          <description>This function allows to set the Configuration for HTMLPurifier
similar to the HTMLPurifierConfig::set() method from the HTMLPurifier API.</description>
          <long-description/>
          <tag line="106" name="param" description="The parameter to set for HTMLPurifier" type="\strParameter:" variable="$strParameter">
            <type by_reference="false">\strParameter:</type>
          </tag>
          <tag line="106" name="param" description="Value of the parameter.&#10; NOTE: THERE IS NO SUPPORT FOR THE DEPRECATED API OF HTMLPURIFIER, HENCE NO THIRD ARGUMENT TO THE&#10; &#9;FUNCTION CAN BE PASSED.&#10;Visit http://htmlpurifier.org/live/configdoc/plain.html for the list of parameters and their effects." type="\mixValue:" variable="$mixValue">
            <type by_reference="false">\mixValue:</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
        <argument line="118">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
        <docblock line="124">
          <description>Parse the data posted back via the control.</description>
          <long-description>&lt;p&gt;This function basically test for the Crossscripting rules applied to the QTextBox&lt;/p&gt;</long-description>
          <tag line="124" name="throws" description="" type="\QCrossScriptingException">
            <type by_reference="false">\QCrossScriptingException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="189" package="Controls">
        <name>GetAttributes</name>
        <full_name>GetAttributes</full_name>
        <docblock line="183">
          <description/>
          <long-description/>
          <tag line="183" name="param" description="" type="bool" variable="$blnIncludeCustom">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="183" name="param" description="" type="bool" variable="$blnIncludeAction">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="183" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$blnIncludeCustom</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="189">
          <name>$blnIncludeAction</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="220" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
        <docblock line="216">
          <description>Returns the HTML formatted string for the control</description>
          <long-description/>
          <tag line="216" name="return" description="HTML string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="258">
          <description>Tests that the value given inside the textbox passes the rules set for the input
Tests it does:
(1) Checks if the textbox was empty while 'Required' property was set to true
(2) Trims input if ValidateTrimmed was set to true
(3) Checks for length contrainsts set by 'MaxLength' and 'MinLength' properties</description>
          <long-description/>
          <tag line="258" name="return" description="whether or not the control is valid" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="314" package="Controls">
        <name>Select</name>
        <full_name>Select</full_name>
        <docblock line="311">
          <description>This will focus on and do a "select all" on the contents of the textbox</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="328" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="321">
          <description>PHP __get magic method implementation</description>
          <long-description/>
          <tag line="321" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="321" name="return" description="" type="array|bool|int|mixed|null|\QControl|\QForm|string">
            <type by_reference="false">array</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="321" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="375" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="367">
          <description>PHP __set magic method implementation</description>
          <long-description/>
          <tag line="367" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="367" name="param" description="Value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="367" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="367" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="375">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="375">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="559" package="Default">
      <extends>\QCallerException</extends>
      <name>QCrossScriptingException</name>
      <full_name>\QCrossScriptingException</full_name>
      <docblock line="556">
        <description>Class QCrossScriptingException: Called when the textbox fails CrossScripting checks</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="564" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="560">
          <description>Constructor</description>
          <long-description/>
          <tag line="560" name="param" description="Control ID of the control for which it being called" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="564">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="39" code="50019">No short description for property $intColumns</critical>
      <critical line="41" code="50019">No short description for property $strText</critical>
      <critical line="43" code="50019">No short description for property $strLabelForRequired</critical>
      <critical line="45" code="50019">No short description for property $strLabelForRequiredUnnamed</critical>
      <critical line="47" code="50019">No short description for property $strLabelForTooShort</critical>
      <critical line="49" code="50019">No short description for property $strLabelForTooShortUnnamed</critical>
      <critical line="51" code="50019">No short description for property $strLabelForTooLong</critical>
      <critical line="53" code="50019">No short description for property $strLabelForTooLongUnnamed</critical>
      <critical line="55" code="50019">No short description for property $strPlaceholder</critical>
      <critical line="57" code="50019">No short description for property $strFormat</critical>
      <critical line="61" code="50019">No short description for property $intMaxLength</critical>
      <critical line="63" code="50019">No short description for property $intMinLength</critical>
      <critical line="65" code="50019">No short description for property $blnReadOnly</critical>
      <critical line="67" code="50019">No short description for property $intRows</critical>
      <critical line="69" code="50019">No short description for property $strTextMode</critical>
      <critical line="71" code="50019">No short description for property $strCrossScripting</critical>
      <critical line="73" code="50019">No short description for property $objHTMLPurifierConfig</critical>
      <critical line="75" code="50019">No short description for property $blnValidateTrimmed</critical>
      <critical line="79" code="50019">No short description for property $blnWrap</critical>
      <error line="183" code="50012">No short description for method GetAttributes()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QLinkButton.class.php" hash="cb910858187afa38cd2b7f6cacad25bf" package="Controls">
    <docblock line="2">
      <description>This file contains the QLinkButton class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="20" package="Controls">
      <extends>\QActionControl</extends>
      <name>QLinkButton</name>
      <full_name>\QLinkButton</full_name>
      <docblock line="8">
        <description>This class will render an HTML link &lt;a href&gt;, but will act like a Button or ImageButton.</description>
        <long-description>&lt;p&gt;(it is a subclass of actioncontrol)
Therefore, you cannot define a "URL/HREF" destination for this LinkButton.  It simply links
to "#".  And then if a ClientAction is defined, it will execute that when clicked.  If a ServerAction
is defined, it will execute PostBack and execute that when clicked.&lt;/p&gt;</long-description>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="is the text of the Link" type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$HtmlEntities">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$strText</name>
        <default>null</default>
        <docblock line="26">
          <description/>
          <long-description/>
          <tag line="26" name="var" description="The text on the button" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>true</default>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="Should htmlentities be used on this control?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="38" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
        <docblock line="34">
          <description>Function to return the formatted HTML for the control</description>
          <long-description/>
          <tag line="34" name="return" description="The control's HTML" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="57">
          <description>The PHP __get magic method</description>
          <long-description/>
          <tag line="57" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="return" description="" type="array|bool|int|mixed|null|\QControl|\QForm|string">
            <type by_reference="false">array</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="82">
          <description>The PHP __set megic method implementation</description>
          <long-description/>
          <tag line="82" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="Value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="82" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="90">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="qcubed/_core/base_controls/QDraggableGen.class.php" hash="3b0bab161343050acb8ad88c078e788d" package="Default">
    <docblock line="2">
      <description>QDraggableGen File</description>
      <long-description>&lt;p&gt;The abstract QDraggableGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QDraggableBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QDraggable class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="36" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDraggable_CreateEvent</name>
      <full_name>\QDraggable_CreateEvent</full_name>
      <docblock line="30">
        <description>Triggered when the draggable is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="37" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dragcreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="50" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDraggable_DragEvent</name>
      <full_name>\QDraggable_DragEvent</full_name>
      <docblock line="39">
        <description>Triggered while the mouse is moved during the
		dragging.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper that's being dragged.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current CSS position of
		the helper as &lt;code&gt;{ top, left }&lt;/code&gt; object.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current offset position of
		the helper as &lt;code&gt;{ top, left }&lt;/code&gt; object.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="51" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'drag'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="63" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDraggable_StartEvent</name>
      <full_name>\QDraggable_StartEvent</full_name>
      <docblock line="53">
        <description>Triggered when dragging starts.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper that's being dragged.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current CSS position of
		the helper as &lt;code&gt;{ top, left }&lt;/code&gt; object.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current offset position of
		the helper as &lt;code&gt;{ top, left }&lt;/code&gt; object.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="64" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dragstart'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="76" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QDraggable_StopEvent</name>
      <full_name>\QDraggable_StopEvent</full_name>
      <docblock line="66">
        <description>Triggered when dragging stops.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper that's being dragged.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current CSS position of
		the helper as &lt;code&gt;{ top, left }&lt;/code&gt; object.&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Current offset position of
		the helper as &lt;code&gt;{ top, left }&lt;/code&gt; object.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="77" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'dragstop'</value>
      </constant>
    </class>
    <class final="false" abstract="true" namespace="global" line="190" package="Controls\Base">
      <extends>\QControl</extends>
      <name>QDraggableGen</name>
      <full_name>\QDraggableGen</full_name>
      <docblock line="82">
        <description>Generated QDraggableGen class.</description>
        <long-description>&lt;p&gt;This is the QDraggableGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QDraggableBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="82" name="see" description="\global\QDraggableBase" refers="\global\QDraggableBase"/>
        <tag line="82" name="package" description="Controls\Base"/>
        <tag line="82" name="property" description="If set to &lt;code&gt;false&lt;/code&gt;, will prevent the &lt;code&gt;ui-draggable&lt;/code&gt;&#10;&#9;&#9;class from being added. This may be desired as a performance optimization&#10;&#9;&#9;when calling &lt;code&gt;.draggable()&lt;/code&gt; on hundreds of elements." type="boolean" variable="$AddClasses">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="82" name="property" description="Which element the draggable helper should be appended to while&#10;&#9;&#9;dragging.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;jQuery&lt;/strong&gt;: A jQuery object&#10;&#9;&#9;containing the element to append the helper to.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Element&lt;/strong&gt;: The element to append the helper to.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: A selector specifying which element to&#10;&#9;&#9;append the helper to.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: The string&#10;&#9;&#9;&lt;code&gt;&quot;parent&quot;&lt;/code&gt; will cause the helper to be a sibling of the&#10;&#9;&#9;draggable.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$AppendTo">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Constrains dragging to either the horizontal (x) or vertical (y) axis.&#10;&#9;&#9;Possible values: &lt;code&gt;&quot;x&quot;&lt;/code&gt;, &lt;code&gt;&quot;y&quot;&lt;/code&gt;." type="string" variable="$Axis">
          <type by_reference="false">string</type>
        </tag>
        <tag line="82" name="property" description="Prevents dragging from starting on specified elements." type="mixed" variable="$Cancel">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Allows the draggable to be dropped onto the specified sortables. If this&#10;&#9;&#9;option is used, a draggable can be dropped onto a sortable list and then&#10;&#9;&#9;becomes part of it. Note: The &lt;a&gt;&lt;code&gt;helper&lt;/code&gt;&lt;/a&gt; option must be set&#10;&#9;&#9;to &lt;code&gt;&quot;clone&quot;&lt;/code&gt; in order to work flawlessly. Requires the &lt;a&gt;jQuery&#10;&#9;&#9;UI Sortable plugin&lt;/a&gt; to be included." type="mixed" variable="$ConnectToSortable">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Constrains dragging to within the bounds of the specified element or&#10;&#9;&#9;region.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: The draggable element&#10;&#9;&#9;will be contained to the bounding box of the first element found by the&#10;&#9;&#9;selector. If no element is found, no containment will be set.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Element&lt;/strong&gt;: The draggable element will be contained to&#10;&#9;&#9;the bounding box of this element.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;:&#10;&#9;&#9;Possible values: &lt;code&gt;&quot;parent&quot;&lt;/code&gt;, &lt;code&gt;&quot;document&quot;&lt;/code&gt;,&#10;&#9;&#9;&lt;code&gt;&quot;window&quot;&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Array&lt;/strong&gt;: An array defining a&#10;&#9;&#9;bounding box in the form &lt;code&gt;[ x1, y1, x2, y2 ]&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Containment">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="The CSS cursor during the drag operation." type="string" variable="$Cursor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="82" name="property" description="Sets the offset of the dragging helper relative to the mouse cursor.&#10;&#9;&#9;Coordinates can be given as a hash using a combination of one or two keys:&#10;&#9;&#9;&lt;code&gt;{ top, left, right, bottom }&lt;/code&gt;." type="mixed" variable="$CursorAt">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Time in milliseconds after mousedown until dragging should start. This&#10;&#9;&#9;option can be used to prevent unwanted drags when clicking on an element." type="integer" variable="$Delay">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="82" name="property" description="Disables the draggable if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="82" name="property" description="Distance in pixels after mousedown the mouse must move before dragging&#10;&#9;&#9;should start. This option can be used to prevent unwanted drags when&#10;&#9;&#9;clicking on an element." type="integer" variable="$Distance">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="82" name="property" description="Snaps the dragging helper to a grid, every x and y pixels. The array must&#10;&#9;&#9;be of the form &lt;code&gt;[ x, y ]&lt;/code&gt;." type="array" variable="$Grid">
          <type by_reference="false">array</type>
        </tag>
        <tag line="82" name="property" description="If specified, restricts dragging from starting unless the mousedown occurs&#10;&#9;&#9;on the specified element(s)." type="mixed" variable="$Handle">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Allows for a helper element to be used for dragging&#10;&#9;&#9;display.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: If set to&#10;&#9;&#9;&lt;code&gt;&quot;clone&quot;&lt;/code&gt;, then the element will be cloned and the clone will be&#10;&#9;&#9;dragged.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Function&lt;/strong&gt;: A function that will return a&#10;&#9;&#9;DOMElement to use while dragging.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Helper">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Prevent iframes from capturing the mousemove events during a drag. Useful&#10;&#9;&#9;in combination with the &lt;a&gt;&lt;code&gt;cursorAt&lt;/code&gt;&lt;/a&gt; option, or in any case&#10;&#9;&#9;where the mouse cursor may not be over the helper.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: When set to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;, transparent overlays will be placed over all iframes on&#10;&#9;&#9;the page.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: Any iframes matching the&#10;&#9;&#9;selector will be covered by transparent overlays.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$IframeFix">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Opacity for the helper while being dragged." type="integer" variable="$Opacity">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="82" name="property" description="If set to &lt;code&gt;true&lt;/code&gt;, all droppable positions are calculated on&#10;&#9;&#9;every mousemove. &#9;&#9;&#9;&#9;&lt;em&gt;Caution: This solves issues on highly dynamic&#10;&#9;&#9;pages, but dramatically decreases performance.&lt;/em&gt;" type="boolean" variable="$RefreshPositions">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="82" name="property" description="Whether the element should revert to its start position when dragging&#10;&#9;&#9;stops.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: If set to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt; the element will always revert.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: If set to &lt;code&gt;&quot;invalid&quot;&lt;/code&gt;, revert will&#10;&#9;&#9;only occur if the draggable has not been dropped on a droppable. For&#10;&#9;&#9;&lt;code&gt;&quot;valid&quot;&lt;/code&gt;, it's the other way around.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Revert">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="The duration of the revert animation, in milliseconds. Ignored if the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;revert&lt;/code&gt;&lt;/a&gt; option is &lt;code&gt;false&lt;/code&gt;." type="integer" variable="$RevertDuration">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="82" name="property" description="Used to group sets of draggable and droppable items, in addition to&#10;&#9;&#9;droppable's &lt;a&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; option. A draggable with the same&#10;&#9;&#9;&lt;code&gt;scope&lt;/code&gt; value as a droppable will be accepted by the droppable." type="string" variable="$Scope">
          <type by_reference="false">string</type>
        </tag>
        <tag line="82" name="property" description="If set to &lt;code&gt;true&lt;/code&gt;, container auto-scrolls while dragging." type="boolean" variable="$Scroll">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="82" name="property" description="Distance in pixels from the edge of the viewport after which the viewport&#10;&#9;&#9;should scroll. Distance is relative to pointer, not the draggable. Ignored&#10;&#9;&#9;if the &lt;a&gt;&lt;code&gt;scroll&lt;/code&gt;&lt;/a&gt; option is &lt;code&gt;false&lt;/code&gt;." type="integer" variable="$ScrollSensitivity">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="82" name="property" description="The speed at which the window should scroll once the mouse pointer gets&#10;&#9;&#9;within the &lt;a&gt;&lt;code&gt;scrollSensitivity&lt;/code&gt;&lt;/a&gt; distance. Ignored if the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;scroll&lt;/code&gt;&lt;/a&gt; option is &lt;code&gt;false&lt;/code&gt;." type="integer" variable="$ScrollSpeed">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="82" name="property" description="Whether the element should snap to other elements.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: When set to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;, the element will snap to all other draggable&#10;&#9;&#9;elements.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: A selector specifying which&#10;&#9;&#9;elements to snap to.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Snap">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Determines which edges of snap elements the draggable will snap to. Ignored&#10;&#9;&#9;if the &lt;a&gt;&lt;code&gt;snap&lt;/code&gt;&lt;/a&gt; option is &lt;code&gt;false&lt;/code&gt;. Possible&#10;&#9;&#9;values: &lt;code&gt;&quot;inner&quot;&lt;/code&gt;, &lt;code&gt;&quot;outer&quot;&lt;/code&gt;, &lt;code&gt;&quot;both&quot;&lt;/code&gt;." type="string" variable="$SnapMode">
          <type by_reference="false">string</type>
        </tag>
        <tag line="82" name="property" description="The distance in pixels from the snap element edges at which snapping should&#10;&#9;&#9;occur. Ignored if the &lt;a&gt;&lt;code&gt;snap&lt;/code&gt;&lt;/a&gt; option is&#10;&#9;&#9;&lt;code&gt;false&lt;/code&gt;." type="integer" variable="$SnapTolerance">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="82" name="property" description="Controls the z-index of the set of elements that match the selector, always&#10;&#9;&#9;brings the currently dragged item to the front. Very useful in things like&#10;&#9;&#9;window managers." type="mixed" variable="$Stack">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="82" name="property" description="Z-index for the helper while being dragged." type="integer" variable="$ZIndex">
          <type by_reference="false">integer</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="191" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="192" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="194" namespace="global" package="Default">
        <name>$blnAddClasses</name>
        <default>null</default>
        <docblock line="193">
          <description/>
          <long-description/>
          <tag line="193" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="196" namespace="global" package="Default">
        <name>$mixAppendTo</name>
        <default>null</default>
        <docblock line="195">
          <description/>
          <long-description/>
          <tag line="195" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="198" namespace="global" package="Default">
        <name>$strAxis</name>
        <default>null</default>
        <docblock line="197">
          <description/>
          <long-description/>
          <tag line="197" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="200" namespace="global" package="Default">
        <name>$mixCancel</name>
        <default>null</default>
        <docblock line="199">
          <description/>
          <long-description/>
          <tag line="199" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="202" namespace="global" package="Default">
        <name>$mixConnectToSortable</name>
        <default>null</default>
        <docblock line="201">
          <description/>
          <long-description/>
          <tag line="201" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="204" namespace="global" package="Default">
        <name>$mixContainment</name>
        <default>null</default>
        <docblock line="203">
          <description/>
          <long-description/>
          <tag line="203" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="206" namespace="global" package="Default">
        <name>$strCursor</name>
        <default>null</default>
        <docblock line="205">
          <description/>
          <long-description/>
          <tag line="205" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="208" namespace="global" package="Default">
        <name>$mixCursorAt</name>
        <default>null</default>
        <docblock line="207">
          <description/>
          <long-description/>
          <tag line="207" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="210" namespace="global" package="Default">
        <name>$intDelay</name>
        <default/>
        <docblock line="209">
          <description/>
          <long-description/>
          <tag line="209" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="212" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="211">
          <description/>
          <long-description/>
          <tag line="211" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="214" namespace="global" package="Default">
        <name>$intDistance</name>
        <default>null</default>
        <docblock line="213">
          <description/>
          <long-description/>
          <tag line="213" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="216" namespace="global" package="Default">
        <name>$arrGrid</name>
        <default>null</default>
        <docblock line="215">
          <description/>
          <long-description/>
          <tag line="215" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="218" namespace="global" package="Default">
        <name>$mixHandle</name>
        <default>null</default>
        <docblock line="217">
          <description/>
          <long-description/>
          <tag line="217" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="220" namespace="global" package="Default">
        <name>$mixHelper</name>
        <default>null</default>
        <docblock line="219">
          <description/>
          <long-description/>
          <tag line="219" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="222" namespace="global" package="Default">
        <name>$mixIframeFix</name>
        <default>null</default>
        <docblock line="221">
          <description/>
          <long-description/>
          <tag line="221" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="224" namespace="global" package="Default">
        <name>$intOpacity</name>
        <default>null</default>
        <docblock line="223">
          <description/>
          <long-description/>
          <tag line="223" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="226" namespace="global" package="Default">
        <name>$blnRefreshPositions</name>
        <default>null</default>
        <docblock line="225">
          <description/>
          <long-description/>
          <tag line="225" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="228" namespace="global" package="Default">
        <name>$mixRevert</name>
        <default>null</default>
        <docblock line="227">
          <description/>
          <long-description/>
          <tag line="227" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="230" namespace="global" package="Default">
        <name>$intRevertDuration</name>
        <default>null</default>
        <docblock line="229">
          <description/>
          <long-description/>
          <tag line="229" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="232" namespace="global" package="Default">
        <name>$strScope</name>
        <default>null</default>
        <docblock line="231">
          <description/>
          <long-description/>
          <tag line="231" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="234" namespace="global" package="Default">
        <name>$blnScroll</name>
        <default>null</default>
        <docblock line="233">
          <description/>
          <long-description/>
          <tag line="233" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="236" namespace="global" package="Default">
        <name>$intScrollSensitivity</name>
        <default>null</default>
        <docblock line="235">
          <description/>
          <long-description/>
          <tag line="235" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="238" namespace="global" package="Default">
        <name>$intScrollSpeed</name>
        <default>null</default>
        <docblock line="237">
          <description/>
          <long-description/>
          <tag line="237" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="240" namespace="global" package="Default">
        <name>$mixSnap</name>
        <default>null</default>
        <docblock line="239">
          <description/>
          <long-description/>
          <tag line="239" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="242" namespace="global" package="Default">
        <name>$strSnapMode</name>
        <default>null</default>
        <docblock line="241">
          <description/>
          <long-description/>
          <tag line="241" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="244" namespace="global" package="Default">
        <name>$intSnapTolerance</name>
        <default>null</default>
        <docblock line="243">
          <description/>
          <long-description/>
          <tag line="243" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="246" namespace="global" package="Default">
        <name>$mixStack</name>
        <default>null</default>
        <docblock line="245">
          <description/>
          <long-description/>
          <tag line="245" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="248" namespace="global" package="Default">
        <name>$intZIndex</name>
        <default>null</default>
        <docblock line="247">
          <description/>
          <long-description/>
          <tag line="247" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="250" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="250">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="250">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="259" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="293" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="297" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="301" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="321" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="312">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="312" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="312" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="312" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="321">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="338" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="333">
          <description>Removes the draggable functionality completely.</description>
          <long-description>&lt;p&gt;This will return the
element back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="345" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="341">
          <description>Disables the draggable.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="352" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="348">
          <description>Enables the draggable.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="361" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="355">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="355" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="361">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="369" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="364">
          <description>Gets an object containing key/value pairs representing the current
draggable options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="381" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="372">
          <description>Sets the value of the draggable option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="372" name="param" description="" type="\" variable="$optionName"/>
          <tag line="372" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="381">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="381">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="389" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="384">
          <description>Sets one or more options for the draggable.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="384" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="389">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="394" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="394">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="434" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="434">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="434">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="191" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="192" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="193" code="50019">No short description for property $blnAddClasses</critical>
      <critical line="195" code="50019">No short description for property $mixAppendTo</critical>
      <critical line="197" code="50019">No short description for property $strAxis</critical>
      <critical line="199" code="50019">No short description for property $mixCancel</critical>
      <critical line="201" code="50019">No short description for property $mixConnectToSortable</critical>
      <critical line="203" code="50019">No short description for property $mixContainment</critical>
      <critical line="205" code="50019">No short description for property $strCursor</critical>
      <critical line="207" code="50019">No short description for property $mixCursorAt</critical>
      <critical line="209" code="50019">No short description for property $intDelay</critical>
      <critical line="211" code="50019">No short description for property $blnDisabled</critical>
      <critical line="213" code="50019">No short description for property $intDistance</critical>
      <critical line="215" code="50019">No short description for property $arrGrid</critical>
      <critical line="217" code="50019">No short description for property $mixHandle</critical>
      <critical line="219" code="50019">No short description for property $mixHelper</critical>
      <critical line="221" code="50019">No short description for property $mixIframeFix</critical>
      <critical line="223" code="50019">No short description for property $intOpacity</critical>
      <critical line="225" code="50019">No short description for property $blnRefreshPositions</critical>
      <critical line="227" code="50019">No short description for property $mixRevert</critical>
      <critical line="229" code="50019">No short description for property $intRevertDuration</critical>
      <critical line="231" code="50019">No short description for property $strScope</critical>
      <critical line="233" code="50019">No short description for property $blnScroll</critical>
      <critical line="235" code="50019">No short description for property $intScrollSensitivity</critical>
      <critical line="237" code="50019">No short description for property $intScrollSpeed</critical>
      <critical line="239" code="50019">No short description for property $mixSnap</critical>
      <critical line="241" code="50019">No short description for property $strSnapMode</critical>
      <critical line="243" code="50019">No short description for property $intSnapTolerance</critical>
      <critical line="245" code="50019">No short description for property $mixStack</critical>
      <critical line="247" code="50019">No short description for property $intZIndex</critical>
      <error line="250" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="259" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="293" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="297" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="301" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="394" code="50010">No DocBlock was found for method __get()</error>
      <error line="434" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QSpinnerBase.class.php" hash="ba331a7d5f5cda9795d1c2ba874e52d1" package="Default">
    <docblock line="2">
      <description>Spinner Base File</description>
      <long-description>&lt;p&gt;The  QSpinnerBase class defined here provides an interface between the generated
QSpinnerGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QSpinner.class.php file in
the controls folder instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="Controls\Base">
      <extends>\QSpinnerGen</extends>
      <name>QSpinnerBase</name>
      <full_name>\QSpinnerBase</full_name>
      <docblock line="13">
        <description>Implements a JQuery UI Spinner Object</description>
        <long-description>&lt;p&gt;A spinner object is a field that is accompanied by up/down arrows to allow numeric or
numberic like values to be quickly selected. You can specify how the arrows step,
and also specify a step value for page up and page down keys.&lt;/p&gt;

&lt;p&gt;TBD: Create options to have this return a particular QCubed Type&lt;/p&gt;</long-description>
        <tag line="13" name="link" description="http://jqueryui.com/spinner/" link="http://jqueryui.com/spinner/"/>
        <tag line="13" name="package" description="Controls\Base"/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/_core/base_controls/QJqButtonBase.class.php" hash="f416597aa075f635046dbd2d36cb72bc" package="Default">
    <docblock line="2">
      <description>JqButton Base File</description>
      <long-description>&lt;p&gt;The QJqButtonBase class defined here provides an interface between the generated
QJqButtonGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QJqButton.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="31" package="Default">
      <extends>\QJqButtonGen</extends>
      <name>QJqButtonBase</name>
      <full_name>\QJqButtonBase</full_name>
      <docblock line="11">
        <description>Implements a JQuery UI Button</description>
        <long-description>&lt;p&gt;Create a button exactly as if you were creating a QButton.&lt;/p&gt;</long-description>
        <tag line="11" name="property" description="Causes text to be shown when icons are also defined.&#10;One of the JqButtonGen properties use the same names as standard QCubed properties.&#10;The Text property is a boolean in the JqUi object that specifies whether&#10;to show text or just icons (provided icons are defined), and the Label property overrides&#10;the standard HTML of the button. Because of the name conflict, the JQ UI property is called&#10;-&gt;JqText. You can also use ShowText as an alias to this as well so that your code is more readable.&#10; Text = standard html text of button&#10; Label = override of standard HTML text, if you want a button to say something different when JS is on or off&#10; ShowText = whether or not to hide the text of the button when icons are set&#10; @link http://jqueryui.com/button/&#10; @package Controls\Base" type="boolean" variable="$ShowText">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="33">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="46">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="46">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50010">No DocBlock was found for method __get()</error>
      <error line="46" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QRadioButton.class.php" hash="9bfef754b4b4a5b2198f7a6c7011b6fd" package="Controls">
    <docblock line="2">
      <description>This file contains the QRadioButton class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="19" package="Controls">
      <extends>\QControl</extends>
      <name>QRadioButton</name>
      <full_name>\QRadioButton</full_name>
      <docblock line="8">
        <description>This class will render an HTML Radio button.</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="is used to display text that is displayed next to the radio.  The text is rendered as an html &quot;Label For&quot; the radio" type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="specifies if &quot;Text&quot; should be displayed to the left or to the right of the radio." type="string" variable="$TextAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="assigns the radio button into a radio button group (optional) so that no more than one radio in that group may be selected at a time." type="string" variable="$GroupName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$HtmlEntities">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="specifices whether or not the radio is selected" type="boolean" variable="$Checked">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$strText</name>
        <default>null</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="the text next to the radio button" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strTextAlign</name>
        <default>\QTextAlign::Right</default>
        <docblock line="27">
          <description/>
          <long-description/>
          <tag line="27" name="var" description="Text alignment" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$strGroupName</name>
        <default>null</default>
        <docblock line="31">
          <description>Group to which this radio button belongs
Groups determine the 'radio' behavior wherein you can select only one option out of all buttons in that group</description>
          <long-description/>
          <tag line="31" name="var" description="Name of the group" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>true</default>
        <docblock line="37">
          <description/>
          <long-description/>
          <tag line="37" name="var" description="Should htmlentities be run on the contents of the control" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="global" package="Default">
        <name>$blnChecked</name>
        <default>false</default>
        <docblock line="41">
          <description/>
          <long-description/>
          <tag line="41" name="var" description="Variable to decide whether the button checked/selected" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
        <docblock line="47">
          <description>Parse the data posted</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="79" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
        <docblock line="75">
          <description>Returns the html formatted string</description>
          <long-description/>
          <tag line="75" name="return" description="HTML formatted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="210" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="203">
          <description>PHP __get magic method implementation for the QRadioButton class</description>
          <long-description/>
          <tag line="203" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="203" name="return" description="" type="array|bool|int|mixed|null|\QControl|\QForm|string">
            <type by_reference="false">array</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="203" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="210">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="246" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="238">
          <description>PHP __set magic method implementation</description>
          <long-description/>
          <tag line="238" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="238" name="param" description="Value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="238" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="238" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="246">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="246">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="188" code="50010">No DocBlock was found for method Validate()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QFloatTextBox.class.php" hash="02165192c2022ce2becf4cde42965d0c" package="Controls">
    <docblock line="2">
      <description>This file contains the QFloatTextBox class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="Controls">
      <extends>\QNumericTextBox</extends>
      <name>QFloatTextBox</name>
      <full_name>\QFloatTextBox</full_name>
      <docblock line="8">
        <description>A subclass of QNumericTextBox -- Validate will also ensure
that the Text is a valid float and (if applicable) is in the range of Minimum &lt;= x &lt;= Maximum</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description>Constructor</description>
          <long-description/>
          <tag line="19" name="param" description="" type="\QControl|\QForm" variable="$objParentObject">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
          </tag>
          <tag line="19" name="param" description="" type="null|string" variable="$strControlId">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="25">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="qcubed/_core/base_controls/QDialogBase.class.php" hash="759fd23c28158ba6cfda36724dcf9861" package="Default">
    <docblock line="2">
      <description>Dialog Base Class</description>
      <long-description>&lt;p&gt;The QDialogBase class defined here provides an interface between the generated
QDialogGen class and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QDialog.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\QEvent</extends>
      <name>QDialog_ButtonEvent</name>
      <full_name>\QDialog_ButtonEvent</full_name>
      <docblock line="11">
        <description>Special event to handle button clicks.</description>
        <long-description>&lt;p&gt;Add an action to this event to get a button click.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="18" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDialog_Button'</value>
        <docblock line="17">
          <description>Event Name</description>
          <long-description/>
        </docblock>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="61" package="Controls\Base">
      <extends>\QDialogGen</extends>
      <name>QDialogBase</name>
      <full_name>\QDialogBase</full_name>
      <docblock line="22">
        <description>Implements a JQuery UI Dialog</description>
        <long-description>&lt;p&gt;A QDialog is a QPanel that pops up on the screen and implements an "in window" dialog.&lt;/p&gt;

&lt;p&gt;There are a couple of ways to use the dialog. The simplest is as follows:&lt;/p&gt;

&lt;p&gt;In your Form_Create():&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$this-&gt;dlg = new QDialog($this);
$this-&gt;dlg-&gt;AutoOpen = false;
$this-&gt;dlg-&gt;Modal = true;
$this-&gt;dlg-&gt;Text = 'Show this on the dialog.'
$this-&gt;dlg-&gt;AddButton ('OK', 'ok');
$this-&gt;dlg-&gt;AddAction (new QDialog_ButtonEvent(), new QHideDialog());
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you want to show the dialog:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$this-&gt;dlg-&gt;Open();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And, also remember to draw the dialog in your form template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$this-&gt;dlg-&gt;Render();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since QDialog is a decendant of QPanel, you can do anything you can to a normal QPanel,
inluding add Qcontrols and use a template. When you want to hide the dialog, call&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Close()&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="22" name="property" description="Disables (false) or enables (true) the close X in the upper right corner of the title. Can be set when initializing the dialog." type="boolean" variable="$HasCloseButton">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="22" name="property-read" description="Returns the id of the button most recently clicked. (read-only)" type="integer" variable="$ClickedButton">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="22" name="link" description="http://jqueryui.com/dialog/" link="http://jqueryui.com/dialog/"/>
        <tag line="22" name="package" description="Controls\Base"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="63" namespace="global" package="Default">
        <name>$strClickedButtonId</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="global" package="Default">
        <name>$blnHasCloseButton</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="65" namespace="global" package="Default">
        <name>$blnUseWrapper</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Controls\Base">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="67">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="67">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="Controls\Base">
        <name>getJqControlId</name>
        <full_name>getJqControlId</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="79" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="Controls\Base">
        <name>AddButton</name>
        <full_name>AddButton</full_name>
        <docblock line="94">
          <description>Add a button to the dialog.</description>
          <long-description>&lt;p&gt;Use this override to add buttons BEFORE bringing up the dialog
Attach actions to the QDialog_ButtonEvent event, and then call
$dlg-&gt;ClickedButton to see which button was clicked.&lt;/p&gt;</long-description>
        </docblock>
        <argument line="102">
          <name>$strButtonName</name>
          <default/>
          <type/>
        </argument>
        <argument line="102">
          <name>$strButtonId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Controls\Base">
        <name>ShowDialogBox</name>
        <full_name>ShowDialogBox</full_name>
        <docblock line="118">
          <description>Show the dialog.</description>
          <long-description/>
          <tag line="118" name="deprecated" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="137" package="Controls\Base">
        <name>HideDialogBox</name>
        <full_name>HideDialogBox</full_name>
        <docblock line="132">
          <description>Hide the dialog</description>
          <long-description/>
          <tag line="132" name="deprecated" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="143" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="143">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="143">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="210" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="210">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="63" code="50018">No DocBlock was found for property $strClickedButtonId</error>
      <error line="64" code="50018">No DocBlock was found for property $blnHasCloseButton</error>
      <error line="65" code="50018">No DocBlock was found for property $blnUseWrapper</error>
      <error line="67" code="50010">No DocBlock was found for method __construct()</error>
      <error line="72" code="50010">No DocBlock was found for method getJqControlId()</error>
      <error line="79" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="94" code="50015">Argument $strButtonName is missing from the Docblock of AddButton()</error>
      <error line="94" code="50015">Argument $strButtonId is missing from the Docblock of AddButton()</error>
      <error line="143" code="50010">No DocBlock was found for method __set()</error>
      <error line="210" code="50010">No DocBlock was found for method __get()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QFormBase.class.php" hash="b7d6641be3ed92d30386ac80d6858d97" package="Controls">
    <docblock line="2">
      <description>This file contains the QFormBase class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
      <tag line="2" name="filesource" description=""/>
    </docblock>
    <include line="955" type="Require" package="Default">
      <name/>
    </include>
    <include line="1159" type="Require" package="Default">
      <name/>
    </include>
    <function namespace="global" line="1619" package="Controls">
      <name>__QForm_EvaluateTemplate_ObHandler</name>
      <full_name>\__QForm_EvaluateTemplate_ObHandler</full_name>
      <argument line="1619">
        <name>$strBuffer</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="true" namespace="global" line="19" package="Controls">
      <extends>\QBaseClass</extends>
      <name>QFormBase</name>
      <full_name>\QFormBase</full_name>
      <docblock line="9">
        <description/>
        <long-description/>
        <tag line="9" name="package" description="Controls"/>
        <tag line="9" name="property-read" description="Form ID of the QForm" type="string" variable="$FormId">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property-read" description="Type of call (useful when the QForm submits due to user action)" type="string" variable="$CallType">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property-read" description="Defaul Ajax wait icon control" type="string" variable="$DefaultWaitIcon">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property-read" description="Status of form (pre-render stage, rendering stage of already rendered stage)" type="integer" variable="$FormStatus">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="9" name="property" description="(Alternate) path to the template file to be used" type="string" variable="$HtmlIncludeFilePath">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property" description="Form CSS class." type="string" variable="$CssClass">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <constant namespace="global" line="66" package="Controls">
        <name>FormStatusUnrendered</name>
        <full_name>FormStatusUnrendered</full_name>
        <value>1</value>
        <docblock line="65">
          <description>Form has not started rendering</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="68" package="Controls">
        <name>FormStatusRenderBegun</name>
        <full_name>FormStatusRenderBegun</full_name>
        <value>2</value>
        <docblock line="67">
          <description>Form has started rendering but has not finished</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="70" package="Controls">
        <name>FormStatusRenderEnded</name>
        <full_name>FormStatusRenderEnded</full_name>
        <value>3</value>
        <docblock line="69">
          <description>Form rendering has already been started and finished</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strFormId</name>
        <default/>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="Form ID (usually passed as the first argument to the 'Run' method call)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$intFormStatus</name>
        <default/>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="representational integer value of what state the form currently is in" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$objControlArray</name>
        <default/>
        <docblock line="27">
          <description/>
          <long-description/>
          <tag line="27" name="var" description="Array of QControls with this form as the parent" type="\QControl[]">
            <type by_reference="false">\QControl[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$objPersistentControlArray</name>
        <default>array()</default>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="Array of persistent controls on the Form" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$objGroupingArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$blnRenderedBodyTag</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$blnRenderedCheckableControlArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$strCallType</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$objDefaultWaitIcon</name>
        <default>null</default>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="var" description="Default wait icon for the page/QForm" type="null|\QWaitIcon">
            <type by_reference="false">null</type>
            <type by_reference="false">\QWaitIcon</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$strFormAttributeArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="global" package="Default">
        <name>$strIncludedJavaScriptFileArray</name>
        <default>array()</default>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="List of included JavaScript files for this QForm" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$strIgnoreJavaScriptFileArray</name>
        <default>array()</default>
        <docblock line="42">
          <description/>
          <long-description/>
          <tag line="42" name="var" description="List of ignored JavaScript files for this QForm" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="global" package="Default">
        <name>$strIncludedStyleSheetFileArray</name>
        <default>array()</default>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="List of included CSS files for this QForm" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$strIgnoreStyleSheetFileArray</name>
        <default>array()</default>
        <docblock line="47">
          <description/>
          <long-description/>
          <tag line="47" name="var" description="List of ignored CSS files for this QForm" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" namespace="global" package="Default">
        <name>$strPreviousRequestMode</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="global" package="Default">
        <name>$strHtmlIncludeFilePath</name>
        <default/>
        <docblock line="51">
          <description/>
          <long-description/>
          <tag line="51" name="var" description="The QForm's template file path. When this value is not supplied, the 'Run' function will try to find and use the .tpl.php file with the same filename as the QForm in the same same directory as the QForm file." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default/>
        <docblock line="57">
          <description/>
          <long-description/>
          <tag line="57" name="var" description="CSS class to be set for the 'form' tag when QCubed Renders the QForm" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" namespace="global" package="Default">
        <name>$strCustomAttributeArray</name>
        <default>null</default>
      </property>
      <property final="false" static="true" visibility="public" line="79" namespace="global" package="Default">
        <name>$EncryptionKey</name>
        <default>null</default>
        <docblock line="75">
          <description/>
          <long-description/>
          <tag line="75" name="var" description="The key to encrypt the formstate when saving and retrieving from the chosen FormState handler" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="87" namespace="global" package="Default">
        <name>$FormStateHandler</name>
        <default>'QFormStateHandler'</default>
        <docblock line="80">
          <description/>
          <long-description/>
          <tag line="80" name="var" description="Chosen FormStateHandler default is QFormStateHandler as shown here, however it is read from the configuration.inc.php (in the QForm class) In case something goes wrong with QForm, the default FormStateHandler here will try to take care of the situation." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="188" namespace="global" package="Default">
        <name>$intNextControlId</name>
        <default>1</default>
        <docblock line="184">
          <description/>
          <long-description/>
          <tag line="184" name="var" description="Counter variable to contain the numerical part of the Control ID value. it is automatically incremented everytime the GenerateControlId() runs" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="210" namespace="global" package="Default">
        <name>$intNextAjaxActionId</name>
        <default>1</default>
        <docblock line="206">
          <description/>
          <long-description/>
          <tag line="206" name="var" description="Counter variable to contain the numerical part of the AJAX ID value. it is automatically incremented everytime the GenerateAjaxActionId() runs" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="92">
          <description>PHP magic method for getting property values of object</description>
          <long-description/>
          <tag line="92" name="param" description="Name of the propery" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="return" description="" type="int|mixed|null|string">
            <type by_reference="false">int</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="121">
          <description>PHP magic function to set the value of properties of class object</description>
          <long-description/>
          <tag line="121" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="param" description="Value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="return" description="" type="mixed|string">
            <type by_reference="false">mixed</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="129">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Controls">
        <name>GenerateControlId</name>
        <full_name>GenerateControlId</full_name>
        <docblock line="171">
          <description>Generates Control ID used to keep track of those QControls whose ID was not explicitly set.</description>
          <long-description>&lt;p&gt;It uses the counter variable to maintain uniqueness for Control IDs during the life of the page
Life of the page is untill the time when the formstate expired and is removed by the
garbage collection of the formstate handler&lt;/p&gt;</long-description>
          <tag line="171" name="return" description="the Ajax Action ID" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="200" package="Controls">
        <name>GenerateAjaxActionId</name>
        <full_name>GenerateAjaxActionId</full_name>
        <docblock line="193">
          <description>Generates Ajax Action ID used to keep track of Ajax Actions
It uses the counter variable to maintain uniqueness for Ajax Action IDs during the life of the page
Life of the page is untill the time when the formstate expired and is removed by the
garbage collection of the formstate handler</description>
          <long-description/>
          <tag line="193" name="return" description="the Ajax Action ID" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="221" package="Controls">
        <name>Form_Run</name>
        <full_name>Form_Run</full_name>
        <docblock line="215">
          <description>Custom Form Run code.</description>
          <long-description>&lt;p&gt;To contain code which should be run 'AFTER' QCubed's QForm run has been completed
but 'BEFORE' the custom event handlers are called
(In case it is to be used, it should be overriden by a child class)&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="228" package="Controls">
        <name>Form_Load</name>
        <full_name>Form_Load</full_name>
        <docblock line="223">
          <description>To contain the code which should be executed after the Form Run and
before the custom handlers are called
(In case it is to be used, it should be overriden by a child class)</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="236" package="Controls">
        <name>Form_Create</name>
        <full_name>Form_Create</full_name>
        <docblock line="230">
          <description>To contain the code to initialize the QForm on the first call.</description>
          <long-description>&lt;p&gt;Once the QForm is created, the state is saved and is reused by the Run method.
In short - this function will run only once (the first time the QForm is to be created)
(In case it is to be used, it should be overriden by a child class)&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="242" package="Controls">
        <name>Form_PreRender</name>
        <full_name>Form_PreRender</full_name>
        <docblock line="238">
          <description>To contain the code to be executed after Form_Run, Form_Create, Form_Load has been called
and the custom defained event handlers have been executed but actual rendering process has not begun</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="256" package="Controls">
        <name>Form_Validate</name>
        <full_name>Form_Validate</full_name>
        <docblock line="244">
          <description>The 'Default' Form_Validate method.</description>
          <long-description>&lt;p&gt;This method in any class derived from QForm (pages created by QCubed).
This method runs everytime an action is triggered (the form is submitted)
The overriding function in the derived class is supposed to use this function to specify
the conditions which when fulfilled represent a satisfactory input from the user (and would return true).
If the required conditions (e.g. a 'Required' input was left blank) is not met, the function is
supposed to return false.&lt;/p&gt;

&lt;p&gt;If this function (the overridden function in the child class) returns false then the action is
not triggerred and nothing happens (the script ends silently)&lt;/p&gt;</long-description>
          <tag line="244" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="262" package="Controls">
        <name>Form_Exit</name>
        <full_name>Form_Exit</full_name>
        <docblock line="258">
          <description>This function is meant to be overriden by child class and is called when the Form exits
(After the form render is complete and just before the Run function completes execution)</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="272" package="Controls">
        <name>VarExport</name>
        <full_name>VarExport</full_name>
        <docblock line="265">
          <description>VarExport the Controls or var_export the current QForm
(well, be ready for huge amount of text)</description>
          <long-description/>
          <tag line="265" name="param" description="" type="bool" variable="$blnReturn">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="265" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$blnReturn</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="285" package="Controls">
        <name>IsCheckableControlRendered</name>
        <full_name>IsCheckableControlRendered</full_name>
        <docblock line="279">
          <description>Returns whether or not the cheackable control with the given controlId has been rendered or not.</description>
          <long-description/>
          <tag line="279" name="param" description="" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="279" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="305" package="Controls">
        <name>Run</name>
        <full_name>Run</full_name>
        <docblock line="289">
          <description>This method initializes the actual layout of the form
It runs in all cases including initial form (the time when Form_Create is run) as well as on
trigger actions (QServerAction, QAjaxAction, QServerControlAction and QAjaxControlAction)</description>
          <long-description>&lt;p&gt;It is responsible for implementing the logic and sequence in which page wide checks are done
such as running Form_Validate and Control validations for every control of the page and their
child controls. Checking for an existing FormState and loading them before trigerring any action
is also a responsibility of this method.&lt;/p&gt;</long-description>
          <tag line="289" name="param" description="The Form ID of the calling QForm" type="string" variable="$strFormId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="289" name="param" description="location of the alternate HTML template file" type="null" variable="$strAlternateHtmlFile">
            <type by_reference="false">null</type>
          </tag>
          <tag line="289" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="289" name="throws" description="" type="\QInvalidFormStateException">
            <type by_reference="false">\QInvalidFormStateException</type>
          </tag>
          <tag line="289" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="305">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="305">
          <name>$strAlternateHtmlFile</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="501" package="Controls">
        <name>InvalidFormState</name>
        <full_name>InvalidFormState</full_name>
        <docblock line="491">
          <description>An invalid form state was found.</description>
          <long-description>&lt;p&gt;We were handed a formstate, but the formstate could not be interpreted. This could be for
a variety of reasons, and is dependent on the formstate handler. Most likely, the user hit
the back button past the back button limit of what we remember, or the user lost the session.
Or, you simply have not set up the form state handler correctly.
In the past, we threw an exception, but that was not a very user friendly response.
The response below resubmits the url without a formstate so that a new one will be created.
Override if you want a different response.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="520" package="Controls">
        <name>CallDataBinder</name>
        <full_name>CallDataBinder</full_name>
        <argument line="520">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="520">
          <name>$objPaginatedControl</name>
          <default/>
          <type>\QPaginatedControl</type>
        </argument>
        <argument line="520">
          <name>$objParentControl</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="537" package="Controls">
        <name>RenderAjaxHelper</name>
        <full_name>RenderAjaxHelper</full_name>
        <docblock line="531">
          <description>Renders the AjaxHelper for the QForm</description>
          <long-description/>
          <tag line="531" name="param" description="" type="\QControlBase" variable="$objControl">
            <type by_reference="false">\QControlBase</type>
          </tag>
          <tag line="531" name="return" description="The Ajax helper string (should be JS commands)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="537">
          <name>$objControl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="549" package="Controls">
        <name>RenderAjax</name>
        <full_name>RenderAjax</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="687" package="Controls">
        <name>Serialize</name>
        <full_name>Serialize</full_name>
        <docblock line="681">
          <description>Saves the formstate using the 'Save' method of FormStateHandler set in configuration.inc.php</description>
          <long-description/>
          <tag line="681" name="param" description="" type="\QForm" variable="$objForm">
            <type by_reference="false">\QForm</type>
          </tag>
          <tag line="681" name="return" description="the Serialized QForm" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="687">
          <name>$objForm</name>
          <default/>
          <type>\QForm</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="722" package="Controls">
        <name>Unserialize</name>
        <full_name>Unserialize</full_name>
        <docblock line="715">
          <description>Unserializes (extracts) the FormState using the 'Load' method of FormStateHandler set in configuration.inc.php</description>
          <long-description/>
          <tag line="715" name="param" description="The string identifying the FormState to the loaded for Unserialization" type="string" variable="$strPostDataState">
            <type by_reference="false">string</type>
          </tag>
          <tag line="715" name="internal" description="param string $strSerializedForm"/>
          <tag line="715" name="return" description="the Form object" type="\QForm">
            <type by_reference="false">\QForm</type>
          </tag>
        </docblock>
        <argument line="722">
          <name>$strPostDataState</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="750" package="Controls">
        <name>AddControl</name>
        <full_name>AddControl</full_name>
        <docblock line="744">
          <description>Add a QControl to the current QForm.</description>
          <long-description/>
          <tag line="744" name="param" description="" type="\QControl|\QControlBase" variable="$objControl">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QControlBase</type>
          </tag>
          <tag line="744" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="750">
          <name>$objControl</name>
          <default/>
          <type>\QControl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="766" package="Controls">
        <name>GetControl</name>
        <full_name>GetControl</full_name>
        <docblock line="759">
          <description>Returns a control from the current QForm</description>
          <long-description/>
          <tag line="759" name="param" description="The Control ID of the control which is needed to be fetched&#10;              from the current QForm (should be the child of the current QForm)." type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="759" name="return" description="" type="null|\QControl">
            <type by_reference="false">null</type>
            <type by_reference="false">\QControl</type>
          </tag>
        </docblock>
        <argument line="766">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="777" package="Controls">
        <name>RemoveControl</name>
        <full_name>RemoveControl</full_name>
        <docblock line="773">
          <description>Removes a QControl (and its children) from the current QForm</description>
          <long-description/>
          <tag line="773" name="param" description="" type="string" variable="$strControlId">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="777">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="806" package="Controls">
        <name>GetAllControls</name>
        <full_name>GetAllControls</full_name>
        <docblock line="802">
          <description>Returns all controls belonging to the Form as an array.</description>
          <long-description/>
          <tag line="802" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="814" package="Controls">
        <name>PersistControl</name>
        <full_name>PersistControl</full_name>
        <docblock line="810">
          <description>Saves a class instance (usually a QControl[Base] instance) in the form.</description>
          <long-description/>
          <tag line="810" name="param" description="" type="\QControl|\QControlBase" variable="$objControl">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QControlBase</type>
          </tag>
        </docblock>
        <argument line="814">
          <name>$objControl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="830" package="Controls">
        <name>SetCustomAttribute</name>
        <full_name>SetCustomAttribute</full_name>
        <docblock line="818">
          <description>Custom Attributes are other html name-value pairs that can be rendered within the form using this method.</description>
          <long-description>&lt;p&gt;For example, you can now render the autocomplete tag on the QForm
additional javascript actions, etc.
        $this-&gt;SetCustomAttribute("autocomplete", "off");
Will render:
        [form ...... autocomplete="off"] (replace sqare brackets with angle brackets)&lt;/p&gt;</long-description>
          <tag line="818" name="param" description="Name of the attribute" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="818" name="param" description="Value of the attribute" type="string" variable="$strValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="818" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="830">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="830">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="850" package="Controls">
        <name>GetCustomAttribute</name>
        <full_name>GetCustomAttribute</full_name>
        <docblock line="842">
          <description>Returns the requested custom attribute from the form.</description>
          <long-description>&lt;p&gt;This attribute must have already been set.&lt;/p&gt;</long-description>
          <tag line="842" name="param" description="Name of the Custom Attribute" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="842" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="842" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="850">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="857" package="Controls">
        <name>RemoveCustomAttribute</name>
        <full_name>RemoveCustomAttribute</full_name>
        <argument line="857">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="866" package="Controls">
        <name>AddGrouping</name>
        <full_name>AddGrouping</full_name>
        <argument line="866">
          <name>$objGrouping</name>
          <default/>
          <type>\QControlGrouping</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="875" package="Controls">
        <name>GetGrouping</name>
        <full_name>GetGrouping</full_name>
        <argument line="875">
          <name>$strGroupingId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="882" package="Controls">
        <name>RemoveGrouping</name>
        <full_name>RemoveGrouping</full_name>
        <argument line="882">
          <name>$strGroupingId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="893" package="Controls">
        <name>GetAllGroupings</name>
        <full_name>GetAllGroupings</full_name>
        <docblock line="889">
          <description>Retruns the Groupings</description>
          <long-description/>
          <tag line="889" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="904" package="Controls">
        <name>GetChildControls</name>
        <full_name>GetChildControls</full_name>
        <docblock line="897">
          <description>Returns the child controls of the current QForm or a QControl object</description>
          <long-description/>
          <tag line="897" name="param" description="The object whose child controls are to be searched for" type="\QForm|\QControl" variable="$objParentObject">
            <type by_reference="false">\QForm</type>
            <type by_reference="false">\QControl</type>
          </tag>
          <tag line="897" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="897" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="904">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="940" package="Controls">
        <name>EvaluateTemplate</name>
        <full_name>EvaluateTemplate</full_name>
        <docblock line="932">
          <description>This function evaluates the QForm Template.</description>
          <long-description>&lt;p&gt;It will try to open the Template file specified in the call to 'Run' method for the QForm
and then execute it.&lt;/p&gt;</long-description>
          <tag line="932" name="param" description="Path to the HTML template file" type="string" variable="$strTemplate">
            <type by_reference="false">string</type>
          </tag>
          <tag line="932" name="return" description="The evaluated HTML string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="940">
          <name>$strTemplate</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="968" package="Controls">
        <name>TriggerMethod</name>
        <full_name>TriggerMethod</full_name>
        <argument line="968">
          <name>$strId</name>
          <default/>
          <type/>
        </argument>
        <argument line="968">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="988" package="Controls">
        <name>ValidateControlAndChildren</name>
        <full_name>ValidateControlAndChildren</full_name>
        <docblock line="982">
          <description>Calles 'Validate' method on a QControl recursively</description>
          <long-description/>
          <tag line="982" name="param" description="" type="\QControl" variable="$objControl">
            <type by_reference="false">\QControl</type>
          </tag>
          <tag line="982" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="988">
          <name>$objControl</name>
          <default/>
          <type>\QControl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1011" package="Controls">
        <name>TriggerActions</name>
        <full_name>TriggerActions</full_name>
        <argument line="1011">
          <name>$strControlIdOverride</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1158" package="Controls">
        <name>Render</name>
        <full_name>Render</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1168" package="Controls">
        <name>RenderChildren</name>
        <full_name>RenderChildren</full_name>
        <docblock line="1162">
          <description>Render the children of this QForm</description>
          <long-description/>
          <tag line="1162" name="param" description="" type="bool" variable="$blnDisplayOutput">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1162" name="return" description="Null when blnDisplayOutput is true" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1168">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1185" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1182">
          <description>This exists to prevent inadverant "New"</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1194" package="Controls">
        <name>RenderBegin</name>
        <full_name>RenderBegin</full_name>
        <docblock line="1187">
          <description>Initializes the QForm rendering process</description>
          <long-description/>
          <tag line="1187" name="param" description="Whether the output is to be printed (true) or simply returned (false)" type="bool" variable="$blnDisplayOutput">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1187" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1187" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="1194">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1298" package="Controls">
        <name>ProcessJavaScriptList</name>
        <full_name>ProcessJavaScriptList</full_name>
        <docblock line="1288">
          <description>Primarily used by RenderBegin and by RenderAjax
Given a comma-delimited list of javascript files, this will return an array of file that NEED to still
be included because (1) it hasn't yet been included and (2) it hasn't been specified to be "ignored".</description>
          <long-description>&lt;p&gt;This WILL update the internal $strIncludedJavaScriptFileArray array.&lt;/p&gt;</long-description>
          <tag line="1288" name="param" description="" type="string" variable="$strJavaScriptFileList">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1288" name="return" description="array of script files to include or NULL if none" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
        <argument line="1298">
          <name>$strJavaScriptFileList</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1333" package="Controls">
        <name>ProcessStyleSheetList</name>
        <full_name>ProcessStyleSheetList</full_name>
        <docblock line="1323">
          <description>Primarily used by RenderBegin and by RenderAjax
Given a comma-delimited list of stylesheet files, this will return an array of file that NEED to still
be included because (1) it hasn't yet been included and (2) it hasn't been specified to be "ignored".</description>
          <long-description>&lt;p&gt;This WILL update the internal $strIncludedStyleSheetFileArray array.&lt;/p&gt;</long-description>
          <tag line="1323" name="param" description="" type="string" variable="$strStyleSheetFileList">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1323" name="return" description="array of stylesheet files to include or NULL if none" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
        <argument line="1333">
          <name>$strStyleSheetFileList</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1362" package="Controls">
        <name>IsPostBack</name>
        <full_name>IsPostBack</full_name>
        <docblock line="1358">
          <description>Returns whether or not this Form is being run due to a PostBack event (e.g.</description>
          <long-description>&lt;p&gt;a ServerAction or AjaxAction)&lt;/p&gt;</long-description>
          <tag line="1358" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1373" package="Controls">
        <name>GetErrorMessages</name>
        <full_name>GetErrorMessages</full_name>
        <docblock line="1366">
          <description>Will return an array of Strings which will show all the error and warning messages
in all the controls in the form.</description>
          <long-description/>
          <tag line="1366" name="param" description="Show only the errors (otherwise, show both warnings and errors)" type="bool" variable="$blnErrorsOnly">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1366" name="return" description="an array of strings representing the (multiple) errors and warnings" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
        <argument line="1373">
          <name>$blnErrorsOnly</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1392" package="Controls">
        <name>GetErrorControls</name>
        <full_name>GetErrorControls</full_name>
        <docblock line="1386">
          <description>Will return an array of QControls from the form which have either an error or warning message.</description>
          <long-description/>
          <tag line="1386" name="param" description="Return controls that have just errors (otherwise, show both warnings and errors)" type="bool" variable="$blnErrorsOnly">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1386" name="return" description="an array of controls representing the (multiple) errors and warnings" type="\QControl[]">
            <type by_reference="false">\QControl[]</type>
          </tag>
        </docblock>
        <argument line="1392">
          <name>$blnErrorsOnly</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1411" package="Controls">
        <name>GetJsFileUri</name>
        <full_name>GetJsFileUri</full_name>
        <docblock line="1405">
          <description>Gets the JS file URI, given a string input</description>
          <long-description/>
          <tag line="1405" name="param" description="File name to be tested" type="string" variable="$strFile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1405" name="return" description="the final JS file URI" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1411">
          <name>$strFile</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1425" package="Controls">
        <name>GetCssFileUri</name>
        <full_name>GetCssFileUri</full_name>
        <docblock line="1419">
          <description>Gets the CSS file URI, given a string input</description>
          <long-description/>
          <tag line="1419" name="param" description="File name to be tested" type="string" variable="$strFile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1419" name="return" description="the final CSS URI" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1425">
          <name>$strFile</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1439" package="Controls">
        <name>RenderEnd</name>
        <full_name>RenderEnd</full_name>
        <docblock line="1433">
          <description/>
          <long-description/>
          <tag line="1433" name="param" description="should the output be returned or directly printed to screen." type="bool" variable="$blnDisplayOutput">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1433" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1433" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="1439">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="1151">Code to automatically execute any PrimaryButton's onclick action, if applicable</todo>
    </markers>
    <parse_markers>
      <error line="1619" code="50009">No DocBlock was found for function \__QForm_EvaluateTemplate_ObHandler()</error>
      <critical line="9" code="50005">No short description for class \QFormBase</critical>
      <error line="31" code="50018">No DocBlock was found for property $objGroupingArray</error>
      <error line="32" code="50018">No DocBlock was found for property $blnRenderedBodyTag</error>
      <error line="33" code="50018">No DocBlock was found for property $blnRenderedCheckableControlArray</error>
      <error line="34" code="50018">No DocBlock was found for property $strCallType</error>
      <error line="38" code="50018">No DocBlock was found for property $strFormAttributeArray</error>
      <error line="50" code="50018">No DocBlock was found for property $strPreviousRequestMode</error>
      <error line="60" code="50018">No DocBlock was found for property $strCustomAttributeArray</error>
      <error line="520" code="50010">No DocBlock was found for method CallDataBinder()</error>
      <error line="549" code="50010">No DocBlock was found for method RenderAjax()</error>
      <error line="857" code="50010">No DocBlock was found for method RemoveCustomAttribute()</error>
      <error line="866" code="50010">No DocBlock was found for method AddGrouping()</error>
      <error line="875" code="50010">No DocBlock was found for method GetGrouping()</error>
      <error line="882" code="50010">No DocBlock was found for method RemoveGrouping()</error>
      <error line="968" code="50010">No DocBlock was found for method TriggerMethod()</error>
      <error line="1011" code="50010">No DocBlock was found for method TriggerActions()</error>
      <error line="1158" code="50010">No DocBlock was found for method Render()</error>
      <error line="1433" code="50012">No short description for method RenderEnd()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QJqCheckBoxGen.class.php" hash="1fa4a3e7ee7266e74f689eb88cfbb3aa" package="Default">
    <docblock line="2">
      <description>QJqCheckBoxGen File</description>
      <long-description>&lt;p&gt;The abstract QJqCheckBoxGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QJqCheckBoxBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QJqCheckBox class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="36" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QJqCheckBox_CreateEvent</name>
      <full_name>\QJqCheckBox_CreateEvent</full_name>
      <docblock line="30">
        <description>Triggered when the button is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="37" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'buttoncreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="72" package="Controls\Base">
      <extends>\QCheckBox</extends>
      <name>QJqCheckBoxGen</name>
      <full_name>\QJqCheckBoxGen</full_name>
      <docblock line="42">
        <description>Generated QJqCheckBoxGen class.</description>
        <long-description>&lt;p&gt;This is the QJqCheckBoxGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QJqCheckBoxBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="42" name="see" description="\global\QJqCheckBoxBase" refers="\global\QJqCheckBoxBase"/>
        <tag line="42" name="package" description="Controls\Base"/>
        <tag line="42" name="property" description="Disables the button if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="42" name="property" description="Icons to display, with or without text (see &lt;a&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option). By default, the primary icon is displayed on the left of the label&#10;&#9;&#9;text and the secondary is displayed on the right. The positioning can be&#10;&#9;&#9;controlled via CSS. The value for the &lt;code&gt;primary&lt;/code&gt; and&#10;&#9;&#9;&lt;code&gt;secondary&lt;/code&gt; properties must be a class name, e.g.,&#10;&#9;&#9;&lt;code&gt;&quot;ui-icon-gear&quot;&lt;/code&gt;. For using only one icon: &lt;code&gt;icons: {&#10;&#9;&#9;primary: &quot;ui-icon-locked&quot; }&lt;/code&gt;. For using two icons: &lt;code&gt;icons: {&#10;&#9;&#9;primary: &quot;ui-icon-gear&quot;, secondary: &quot;ui-icon-triangle-1-s&quot; }&lt;/code&gt;." type="mixed" variable="$Icons">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="42" name="property" description="Text to show in the button. When not specified (&lt;code&gt;null&lt;/code&gt;), the&#10;&#9;&#9;element's HTML content is used, or its &lt;code&gt;value&lt;/code&gt; attribute if the&#10;&#9;&#9;element is an input element of type submit or reset, or the HTML content of&#10;&#9;&#9;the associated label element if the element is an input of type radio or&#10;&#9;&#9;checkbox." type="string" variable="$Label">
          <type by_reference="false">string</type>
        </tag>
        <tag line="42" name="property" description="Whether to show the label. When set to &lt;code&gt;false&lt;/code&gt; no text will be&#10;&#9;&#9;displayed, but the &lt;a&gt;&lt;code&gt;icons&lt;/code&gt;&lt;/a&gt; option must be enabled,&#10;&#9;&#9;otherwise the &lt;code&gt;text&lt;/code&gt; option will be ignored." type="boolean" variable="$JqText">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="73" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="74" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="75">
          <description/>
          <long-description/>
          <tag line="75" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" namespace="global" package="Default">
        <name>$mixIcons</name>
        <default>null</default>
        <docblock line="77">
          <description/>
          <long-description/>
          <tag line="77" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="80" namespace="global" package="Default">
        <name>$strLabel</name>
        <default>null</default>
        <docblock line="79">
          <description/>
          <long-description/>
          <tag line="79" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="82" namespace="global" package="Default">
        <name>$blnJqText</name>
        <default>null</default>
        <docblock line="81">
          <description/>
          <long-description/>
          <tag line="81" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="84" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="84">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="93" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="131" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="122">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="122" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="122" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="131">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="143">
          <description>Removes the button functionality completely.</description>
          <long-description>&lt;p&gt;This will return the element
back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="151">
          <description>Disables the button.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="158">
          <description>Enables the button.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="165">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="165" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="171">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="174">
          <description>Gets an object containing key/value pairs representing the current button
options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="190" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="181">
          <description>Sets the value of the button option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="181" name="param" description="" type="\" variable="$optionName"/>
          <tag line="181" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="190">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="190">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="193">
          <description>Sets one or more options for the button.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="193" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="198">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="207" package="Controls\Base">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="201">
          <description>Refreshes the visual state of the button.</description>
          <long-description>&lt;p&gt;Useful for updating button state
after the native element's checked or disabled state is changed
programmatically.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="212" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="212">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="228" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="228">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="228">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="73" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="74" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="75" code="50019">No short description for property $blnDisabled</critical>
      <critical line="77" code="50019">No short description for property $mixIcons</critical>
      <critical line="79" code="50019">No short description for property $strLabel</critical>
      <critical line="81" code="50019">No short description for property $blnJqText</critical>
      <error line="84" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="93" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="103" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="107" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="111" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="212" code="50010">No DocBlock was found for method __get()</error>
      <error line="228" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QProgressbarBase.class.php" hash="f234afad4804bcfc361c064d23885e83" package="Default">
    <docblock line="2">
      <description>QProgressbar Base File</description>
      <long-description>&lt;p&gt;The  QProgressbarBase class defined here provides an interface between the generated
QProgressbarGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, see the QProgressbar.class.php file in the controls
folder.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Controls\Base">
      <extends>\QProgressbarGen</extends>
      <name>QProgressbarBase</name>
      <full_name>\QProgressbarBase</full_name>
      <docblock line="12">
        <description>Implements a JQuery UI Progress Bar</description>
        <long-description>&lt;p&gt;Use the inherited interface to control the progress bar.&lt;/p&gt;</long-description>
        <tag line="12" name="link" description="http://jqueryui.com/progressbar/" link="http://jqueryui.com/progressbar/"/>
        <tag line="12" name="package" description="Controls\Base"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
        <docblock line="22">
          <description>The javascript for the control to be sent to the client.</description>
          <long-description/>
          <tag line="22" name="return" description="The control's JS" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="40">
          <description>PHP __set magic method</description>
          <long-description/>
          <tag line="40" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="param" description="Value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="qcubed/_core/base_controls/QPaginatorBase.class.php" hash="cba94274dbc1dc80a2e447aa51d0345e" package="Controls">
    <docblock line="2">
      <description>This file contains the QPaginatorBase class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="19" package="Controls">
      <extends>\QControl</extends>
      <name>QPaginatorBase</name>
      <full_name>\QPaginatorBase</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="is how many items you want to display per page when Pagination is enabled" type="integer" variable="$ItemsPerPage">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="is the current page number you are viewing" type="integer" variable="$PageNumber">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="is the total number of items in the ENTIRE recordset -- only used when Pagination is enabled" type="integer" variable="$TotalItemCount">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$UseAjax">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property-read" description="" type="integer" variable="$PageCount">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="mixed" variable="$WaitIcon">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property-read" description="" type="mixed" variable="$PaginatedControl">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$intItemsPerPage</name>
        <default>15</default>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$intPageNumber</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$intTotalItemCount</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$blnUseAjax</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$objPaginatedControl</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$objWaitIcon</name>
        <default>'default'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$prxPagination</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$blnIsBlockElement</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="40">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="40">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="52" package="Controls">
        <name>Setup</name>
        <full_name>Setup</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Controls">
        <name>Page_Click</name>
        <full_name>Page_Click</full_name>
        <argument line="67">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="67">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="67">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Controls">
        <name>SetPaginatedControl</name>
        <full_name>SetPaginatedControl</full_name>
        <argument line="71">
          <name>$objPaginatedControl</name>
          <default/>
          <type>\QPaginatedControl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="83">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="111">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="111">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QPaginatorBase</critical>
      <error line="25" code="50018">No DocBlock was found for property $intItemsPerPage</error>
      <error line="26" code="50018">No DocBlock was found for property $intPageNumber</error>
      <error line="27" code="50018">No DocBlock was found for property $intTotalItemCount</error>
      <error line="28" code="50018">No DocBlock was found for property $blnUseAjax</error>
      <error line="29" code="50018">No DocBlock was found for property $objPaginatedControl</error>
      <error line="30" code="50018">No DocBlock was found for property $objWaitIcon</error>
      <error line="32" code="50018">No DocBlock was found for property $prxPagination</error>
      <error line="35" code="50018">No DocBlock was found for property $blnIsBlockElement</error>
      <error line="40" code="50010">No DocBlock was found for method __construct()</error>
      <error line="52" code="50010">No DocBlock was found for method Setup()</error>
      <error line="64" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="65" code="50010">No DocBlock was found for method Validate()</error>
      <error line="67" code="50010">No DocBlock was found for method Page_Click()</error>
      <error line="71" code="50010">No DocBlock was found for method SetPaginatedControl()</error>
      <error line="83" code="50010">No DocBlock was found for method __get()</error>
      <error line="111" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QResizableGen.class.php" hash="7884ae30675aee6db4a5560cb8b4a6ff" package="Default">
    <docblock line="2">
      <description>QResizableGen File</description>
      <long-description>&lt;p&gt;The abstract QResizableGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QResizableBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QResizable class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="36" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QResizable_CreateEvent</name>
      <full_name>\QResizable_CreateEvent</full_name>
      <docblock line="30">
        <description>Triggered when the resizable is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="37" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'resizecreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="57" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QResizable_ResizeEvent</name>
      <full_name>\QResizable_ResizeEvent</full_name>
      <docblock line="39">
        <description>This event is triggered during the resize, on the drag of the resize
		handler.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;element&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the element to be resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt;
		Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the helper that's being
		resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;originalElement&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The
		jQuery object representing the original element before it is wrapped&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The position
		represented as &lt;code&gt;{ left, top }&lt;/code&gt; before the resizable is
		resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;originalSize&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The size
		represented as &lt;code&gt;{ width, height }&lt;/code&gt; before the resizable is
		resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position represented as &lt;code&gt;{ left, top }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;size&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current size represented
		as &lt;code&gt;{ width, height }&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="58" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'resize'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="78" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QResizable_StartEvent</name>
      <full_name>\QResizable_StartEvent</full_name>
      <docblock line="60">
        <description>This event is triggered at the start of a resize
		operation.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;element&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the element to be resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt;
		Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the helper that's being
		resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;originalElement&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The
		jQuery object representing the original element before it is wrapped&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The position
		represented as &lt;code&gt;{ left, top }&lt;/code&gt; before the resizable is
		resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;originalSize&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The size
		represented as &lt;code&gt;{ width, height }&lt;/code&gt; before the resizable is
		resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position represented as &lt;code&gt;{ left, top }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;size&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current size represented
		as &lt;code&gt;{ width, height }&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="79" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'resizestart'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="99" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QResizable_StopEvent</name>
      <full_name>\QResizable_StopEvent</full_name>
      <docblock line="81">
        <description>This event is triggered at the end of a resize
		operation.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;element&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the element to be resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt;
		Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the helper that's being
		resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;originalElement&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The
		jQuery object representing the original element before it is wrapped&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The position
		represented as &lt;code&gt;{ left, top }&lt;/code&gt; before the resizable is
		resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;originalSize&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The size
		represented as &lt;code&gt;{ width, height }&lt;/code&gt; before the resizable is
		resized&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position represented as &lt;code&gt;{ left, top }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;size&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current size represented
		as &lt;code&gt;{ width, height }&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="100" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'resizestop'</value>
      </constant>
    </class>
    <class final="false" abstract="true" namespace="global" line="176" package="Controls\Base">
      <extends>\QControl</extends>
      <name>QResizableGen</name>
      <full_name>\QResizableGen</full_name>
      <docblock line="105">
        <description>Generated QResizableGen class.</description>
        <long-description>&lt;p&gt;This is the QResizableGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QResizableBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="105" name="see" description="\global\QResizableBase" refers="\global\QResizableBase"/>
        <tag line="105" name="package" description="Controls\Base"/>
        <tag line="105" name="property" description="One or more elements to resize synchronously with the resizable element." type="mixed" variable="$AlsoResize">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="105" name="property" description="Animates to the final size after resizing." type="boolean" variable="$Animate">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="105" name="property" description="How long to animate when using the &lt;a&gt;&lt;code&gt;animate&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: Duration in&#10;&#9;&#9;milliseconds.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A named duration, such as&#10;&#9;&#9;&lt;code&gt;&quot;slow&quot;&lt;/code&gt; or &lt;code&gt;&quot;fast&quot;&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$AnimateDuration">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="105" name="property" description="Which &lt;a&gt;easing&lt;/a&gt; to apply when using the &lt;a&gt;&lt;code&gt;animate&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option." type="string" variable="$AnimateEasing">
          <type by_reference="false">string</type>
        </tag>
        <tag line="105" name="property" description="Whether the element should be constrained to a specific aspect&#10;&#9;&#9;ratio.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: When set to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;, the element will maintain its original aspect&#10;&#9;&#9;ratio.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: Force the element to maintain a&#10;&#9;&#9;specific aspect ratio during resizing.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$AspectRatio">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="105" name="property" description="Whether the handles should hide when the user is not hovering over the&#10;&#9;&#9;element." type="boolean" variable="$AutoHide">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="105" name="property" description="Prevents resizing from starting on specified elements." type="mixed" variable="$Cancel">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="105" name="property" description="Constrains resizing to within the bounds of the specified element or&#10;&#9;&#9;region.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: The resizable element&#10;&#9;&#9;will be contained to the bounding box of the first element found by the&#10;&#9;&#9;selector. If no element is found, no containment will be set.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Element&lt;/strong&gt;: The resizable element will be contained to&#10;&#9;&#9;the bounding box of this element.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;:&#10;&#9;&#9;Possible values: &lt;code&gt;&quot;parent&quot;&lt;/code&gt; and&#10;&#9;&#9;&lt;code&gt;&quot;document&quot;&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Containment">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="105" name="property" description="Tolerance, in milliseconds, for when resizing should start. If specified,&#10;&#9;&#9;resizing will not start until after mouse is moved beyond duration. This&#10;&#9;&#9;can help prevent unintended resizing when clicking on an element." type="integer" variable="$Delay">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="105" name="property" description="Disables the resizable if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="105" name="property" description="Tolerance, in pixels, for when resizing should start. If specified,&#10;&#9;&#9;resizing will not start until after mouse is moved beyond distance. This&#10;&#9;&#9;can help prevent unintended resizing when clicking on an element." type="integer" variable="$Distance">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="105" name="property" description="If set to &lt;code&gt;true&lt;/code&gt;, a semi-transparent helper element is shown for&#10;&#9;&#9;resizing." type="boolean" variable="$Ghost">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="105" name="property" description="Snaps the resizing element to a grid, every x and y pixels. Array values:&#10;&#9;&#9;&lt;code&gt;[ x, y ]&lt;/code&gt;." type="array" variable="$Grid">
          <type by_reference="false">array</type>
        </tag>
        <tag line="105" name="property" description="Which handles can be used for resizing.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A comma delimited list&#10;&#9;&#9;of any of the following: n, e, s, w, ne, se, sw, nw, all. The necessary&#10;&#9;&#9;handles will be auto-generated by the plugin.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;:  &#9;&#9;&#9;&#9;&#9;&lt;p&gt;The following keys are supported: {&#10;&#9;&#9;n, e, s, w, ne, se, sw, nw }. The value of any specified should be a jQuery&#10;&#9;&#9;selector matching the child element of the resizable to use as that handle.&#10;&#9;&#9;If the handle is not a child of the resizable, you can pass in the&#10;&#9;&#9;DOMElement or a valid jQuery object directly.&lt;/p&gt; &#9;&#9;&#9;&#9;&#9;&lt;p&gt;&lt;em&gt;Note: When&#10;&#9;&#9;generating your own handles, each handle must have the&#10;&#9;&#9;&lt;code&gt;ui-resizable-handle&lt;/code&gt; class, as well as the appropriate&#10;&#9;&#9;&lt;code&gt;ui-resizable-{direction}&lt;/code&gt; class, .e.g.,&#10;&#9;&#9;&lt;code&gt;ui-resizable-s&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Handles">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="105" name="property" description="A class name that will be added to a proxy element to outline the resize&#10;&#9;&#9;during the drag of the resize handle. Once the resize is complete, the&#10;&#9;&#9;original element is sized." type="string" variable="$Helper">
          <type by_reference="false">string</type>
        </tag>
        <tag line="105" name="property" description="The maximum height the resizable should be allowed to resize to." type="integer" variable="$MaxHeight">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="105" name="property" description="The maximum width the resizable should be allowed to resize to." type="integer" variable="$MaxWidth">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="105" name="property" description="The minimum height the resizable should be allowed to resize to." type="integer" variable="$MinHeight">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="105" name="property" description="The minimum width the resizable should be allowed to resize to." type="integer" variable="$MinWidth">
          <type by_reference="false">integer</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="177" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="178" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="180" namespace="global" package="Default">
        <name>$mixAlsoResize</name>
        <default>null</default>
        <docblock line="179">
          <description/>
          <long-description/>
          <tag line="179" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="182" namespace="global" package="Default">
        <name>$blnAnimate</name>
        <default>null</default>
        <docblock line="181">
          <description/>
          <long-description/>
          <tag line="181" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="184" namespace="global" package="Default">
        <name>$mixAnimateDuration</name>
        <default>null</default>
        <docblock line="183">
          <description/>
          <long-description/>
          <tag line="183" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="186" namespace="global" package="Default">
        <name>$strAnimateEasing</name>
        <default>null</default>
        <docblock line="185">
          <description/>
          <long-description/>
          <tag line="185" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="188" namespace="global" package="Default">
        <name>$mixAspectRatio</name>
        <default>null</default>
        <docblock line="187">
          <description/>
          <long-description/>
          <tag line="187" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="190" namespace="global" package="Default">
        <name>$blnAutoHide</name>
        <default>null</default>
        <docblock line="189">
          <description/>
          <long-description/>
          <tag line="189" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="192" namespace="global" package="Default">
        <name>$mixCancel</name>
        <default>null</default>
        <docblock line="191">
          <description/>
          <long-description/>
          <tag line="191" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="194" namespace="global" package="Default">
        <name>$mixContainment</name>
        <default>null</default>
        <docblock line="193">
          <description/>
          <long-description/>
          <tag line="193" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="196" namespace="global" package="Default">
        <name>$intDelay</name>
        <default/>
        <docblock line="195">
          <description/>
          <long-description/>
          <tag line="195" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="198" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="197">
          <description/>
          <long-description/>
          <tag line="197" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="200" namespace="global" package="Default">
        <name>$intDistance</name>
        <default>null</default>
        <docblock line="199">
          <description/>
          <long-description/>
          <tag line="199" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="202" namespace="global" package="Default">
        <name>$blnGhost</name>
        <default>null</default>
        <docblock line="201">
          <description/>
          <long-description/>
          <tag line="201" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="204" namespace="global" package="Default">
        <name>$arrGrid</name>
        <default>null</default>
        <docblock line="203">
          <description/>
          <long-description/>
          <tag line="203" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="206" namespace="global" package="Default">
        <name>$mixHandles</name>
        <default>null</default>
        <docblock line="205">
          <description/>
          <long-description/>
          <tag line="205" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="208" namespace="global" package="Default">
        <name>$strHelper</name>
        <default>null</default>
        <docblock line="207">
          <description/>
          <long-description/>
          <tag line="207" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="210" namespace="global" package="Default">
        <name>$intMaxHeight</name>
        <default>null</default>
        <docblock line="209">
          <description/>
          <long-description/>
          <tag line="209" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="212" namespace="global" package="Default">
        <name>$intMaxWidth</name>
        <default>null</default>
        <docblock line="211">
          <description/>
          <long-description/>
          <tag line="211" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="214" namespace="global" package="Default">
        <name>$intMinHeight</name>
        <default>null</default>
        <docblock line="213">
          <description/>
          <long-description/>
          <tag line="213" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="216" namespace="global" package="Default">
        <name>$intMinWidth</name>
        <default>null</default>
        <docblock line="215">
          <description/>
          <long-description/>
          <tag line="215" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="218" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="218">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="218">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="227" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="252" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="256" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="260" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="280" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="271">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="271" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="271" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="271" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="280">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="297" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="292">
          <description>Removes the resizable functionality completely.</description>
          <long-description>&lt;p&gt;This will return the
element back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="304" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="300">
          <description>Disables the resizable.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="311" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="307">
          <description>Enables the resizable.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="320" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="314">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="314" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="320">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="328" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="323">
          <description>Gets an object containing key/value pairs representing the current
resizable options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="340" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="331">
          <description>Sets the value of the resizable option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="331" name="param" description="" type="\" variable="$optionName"/>
          <tag line="331" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="340">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="340">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="348" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="343">
          <description>Sets one or more options for the resizable.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="343" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="348">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="353" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="353">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="384" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="384">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="384">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="177" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="178" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="179" code="50019">No short description for property $mixAlsoResize</critical>
      <critical line="181" code="50019">No short description for property $blnAnimate</critical>
      <critical line="183" code="50019">No short description for property $mixAnimateDuration</critical>
      <critical line="185" code="50019">No short description for property $strAnimateEasing</critical>
      <critical line="187" code="50019">No short description for property $mixAspectRatio</critical>
      <critical line="189" code="50019">No short description for property $blnAutoHide</critical>
      <critical line="191" code="50019">No short description for property $mixCancel</critical>
      <critical line="193" code="50019">No short description for property $mixContainment</critical>
      <critical line="195" code="50019">No short description for property $intDelay</critical>
      <critical line="197" code="50019">No short description for property $blnDisabled</critical>
      <critical line="199" code="50019">No short description for property $intDistance</critical>
      <critical line="201" code="50019">No short description for property $blnGhost</critical>
      <critical line="203" code="50019">No short description for property $arrGrid</critical>
      <critical line="205" code="50019">No short description for property $mixHandles</critical>
      <critical line="207" code="50019">No short description for property $strHelper</critical>
      <critical line="209" code="50019">No short description for property $intMaxHeight</critical>
      <critical line="211" code="50019">No short description for property $intMaxWidth</critical>
      <critical line="213" code="50019">No short description for property $intMinHeight</critical>
      <critical line="215" code="50019">No short description for property $intMinWidth</critical>
      <error line="218" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="227" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="252" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="256" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="260" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="353" code="50010">No DocBlock was found for method __get()</error>
      <error line="384" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QCheckBoxList.class.php" hash="fc8dcdc15c2b024455fd619117c8b645" package="Controls">
    <docblock line="2">
      <description>This file contains the QCheckBoxList class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="34" package="Controls">
      <extends>\QListControl</extends>
      <name>QCheckBoxList</name>
      <full_name>\QCheckBoxList</full_name>
      <docblock line="8">
        <description>This class will render a List of HTML Checkboxes (inhereting from ListControl).</description>
        <long-description>&lt;p&gt;By definition, checkbox lists are multiple-select ListControls.&lt;/p&gt;

&lt;p&gt;So assuming you have a list of 10 items, and you have RepeatColumn set to 3:
RepeatDirection::Horizontal would render as:
1   2   3
4   5   6
7   8   9
10&lt;/p&gt;

&lt;p&gt;RepeatDirection::Vertical would render as:
1   5   8
2   6   9
3   7   10
4&lt;/p&gt;</long-description>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="is used to display text that is displayed next to the checkbox.  The text is rendered as an html &quot;Label For&quot; the checkbox." type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="specified the HTML Table's CellPadding" type="integer" variable="$CellPadding">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="specified the HTML Table's CellSpacing" type="integer" variable="$CellSpacing">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="specifies how many columns should be rendered in the HTML Table" type="integer" variable="$RepeatColumn">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="pecifies which direction should the list go first..." type="string" variable="$RepeatDirection">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$HtmlEntities">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <constant namespace="global" line="36" package="Controls">
        <name>ButtonModeNone</name>
        <full_name>ButtonModeNone</full_name>
        <value>0</value>
      </constant>
      <constant namespace="global" line="37" package="Controls">
        <name>ButtonModeJq</name>
        <full_name>ButtonModeJq</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="38" package="Controls">
        <name>ButtonModeSet</name>
        <full_name>ButtonModeSet</full_name>
        <value>2</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$strTextAlign</name>
        <default>\QTextAlign::Right</default>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="global" package="Default">
        <name>$intCellPadding</name>
        <default>-1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Default">
        <name>$intCellSpacing</name>
        <default>-1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="53" namespace="global" package="Default">
        <name>$intRepeatColumns</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$strRepeatDirection</name>
        <default>\QRepeatDirection::Vertical</default>
      </property>
      <property final="false" static="false" visibility="protected" line="55" namespace="global" package="Default">
        <name>$objItemStyle</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="global" package="Default">
        <name>$intButtonMode</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="58">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="Controls">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="94" package="Controls">
        <name>GetItemHtml</name>
        <full_name>GetItemHtml</full_name>
        <argument line="94">
          <name>$objItem</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$strActions</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$strTabIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="139" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="250" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="265" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="265">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="294" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="294">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="294">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="45" code="50018">No DocBlock was found for property $strTextAlign</error>
      <error line="48" code="50018">No DocBlock was found for property $blnHtmlEntities</error>
      <error line="51" code="50018">No DocBlock was found for property $intCellPadding</error>
      <error line="52" code="50018">No DocBlock was found for property $intCellSpacing</error>
      <error line="53" code="50018">No DocBlock was found for property $intRepeatColumns</error>
      <error line="54" code="50018">No DocBlock was found for property $strRepeatDirection</error>
      <error line="55" code="50018">No DocBlock was found for property $objItemStyle</error>
      <error line="56" code="50018">No DocBlock was found for property $intButtonMode</error>
      <error line="58" code="50010">No DocBlock was found for method __construct()</error>
      <error line="66" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="82" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="94" code="50010">No DocBlock was found for method GetItemHtml()</error>
      <error line="139" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="250" code="50010">No DocBlock was found for method Validate()</error>
      <error line="265" code="50010">No DocBlock was found for method __get()</error>
      <error line="294" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QSelectableGen.class.php" hash="a49816c7e962fb9e223878f864b797c8" package="Default">
    <docblock line="2">
      <description>QSelectableGen File</description>
      <long-description>&lt;p&gt;The abstract QSelectableGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QSelectableBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QSelectable class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="36" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSelectable_CreateEvent</name>
      <full_name>\QSelectable_CreateEvent</full_name>
      <docblock line="30">
        <description>Triggered when the selectable is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="37" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'selectablecreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="46" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSelectable_SelectedEvent</name>
      <full_name>\QSelectable_SelectedEvent</full_name>
      <docblock line="39">
        <description>Triggered at the end of the select operation, on each element added to the
		selection.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;selected&lt;/strong&gt; Type: &lt;a&gt;Element&lt;/a&gt; The selectable item
		that has been selected.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="47" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'selectableselected'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="56" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSelectable_SelectingEvent</name>
      <full_name>\QSelectable_SelectingEvent</full_name>
      <docblock line="49">
        <description>Triggered during the select operation, on each element added to the
		selection.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;selecting&lt;/strong&gt; Type: &lt;a&gt;Element&lt;/a&gt; The current
		selectable item being selected.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="57" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'selectableselecting'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="66" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSelectable_StartEvent</name>
      <full_name>\QSelectable_StartEvent</full_name>
      <docblock line="59">
        <description>Triggered at the beginning of the select
		operation.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The
		&lt;code&gt;ui&lt;/code&gt; object is empty but included for consistency with other
		events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="67" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'selectablestart'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="75" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSelectable_StopEvent</name>
      <full_name>\QSelectable_StopEvent</full_name>
      <docblock line="69">
        <description>Triggered at the end of the select operation.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="76" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'selectablestop'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="85" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSelectable_UnselectedEvent</name>
      <full_name>\QSelectable_UnselectedEvent</full_name>
      <docblock line="78">
        <description>Triggered at the end of the select operation, on each element removed from
		the selection.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;unselected&lt;/strong&gt; Type: &lt;a&gt;Element&lt;/a&gt; The selectable
		item that has been unselected.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="86" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'selectableunselected'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="95" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSelectable_UnselectingEvent</name>
      <full_name>\QSelectable_UnselectingEvent</full_name>
      <docblock line="88">
        <description>Triggered during the select operation, on each element removed from the
		selection.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;unselecting&lt;/strong&gt; Type: &lt;a&gt;Element&lt;/a&gt; The current
		selectable item being unselected.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="96" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'selectableunselecting'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="131" package="Controls\Base">
      <extends>\QPanel</extends>
      <name>QSelectableGen</name>
      <full_name>\QSelectableGen</full_name>
      <docblock line="101">
        <description>Generated QSelectableGen class.</description>
        <long-description>&lt;p&gt;This is the QSelectableGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QSelectableBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="101" name="see" description="\global\QSelectableBase" refers="\global\QSelectableBase"/>
        <tag line="101" name="package" description="Controls\Base"/>
        <tag line="101" name="property" description="Which element the selection helper (the lasso) should be appended to." type="mixed" variable="$AppendTo">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="101" name="property" description="This determines whether to refresh (recalculate) the position and size of&#10;&#9;&#9;each selectee at the beginning of each select operation. If you have many&#10;&#9;&#9;items, you may want to set this to false and call the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; method manually." type="boolean" variable="$AutoRefresh">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="101" name="property" description="Prevents selecting if you start on elements matching the selector." type="mixed" variable="$Cancel">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="101" name="property" description="Time in milliseconds to define when the selecting should start. This helps&#10;&#9;&#9;prevent unwanted selections when clicking on an element." type="integer" variable="$Delay">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="101" name="property" description="Disables the selectable if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="101" name="property" description="Tolerance, in pixels, for when selecting should start. If specified,&#10;&#9;&#9;selecting will not start until the mouse has been dragged beyond the&#10;&#9;&#9;specified distance." type="integer" variable="$Distance">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="101" name="property" description="The matching child elements will be made selectees (able to be selected)." type="mixed" variable="$Filter">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="101" name="property" description="Specifies which mode to use for testing whether the lasso should select an&#10;&#9;&#9;item. Possible values: &#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;&lt;code&gt;&quot;fit&quot;&lt;/code&gt;: Lasso overlaps the&#10;&#9;&#9;item entirely.&lt;/li&gt; &#9;&#9;&#9;&#9;&#9;&lt;li&gt;&lt;code&gt;&quot;touch&quot;&lt;/code&gt;: Lasso overlaps the item&#10;&#9;&#9;by any amount.&lt;/li&gt;&lt;/ul&gt;" type="string" variable="$Tolerance">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="132" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="133" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="135" namespace="global" package="Default">
        <name>$mixAppendTo</name>
        <default>null</default>
        <docblock line="134">
          <description/>
          <long-description/>
          <tag line="134" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="137" namespace="global" package="Default">
        <name>$blnAutoRefresh</name>
        <default>null</default>
        <docblock line="136">
          <description/>
          <long-description/>
          <tag line="136" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="139" namespace="global" package="Default">
        <name>$mixCancel</name>
        <default>null</default>
        <docblock line="138">
          <description/>
          <long-description/>
          <tag line="138" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="141" namespace="global" package="Default">
        <name>$intDelay</name>
        <default/>
        <docblock line="140">
          <description/>
          <long-description/>
          <tag line="140" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="143" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="142">
          <description/>
          <long-description/>
          <tag line="142" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="145" namespace="global" package="Default">
        <name>$intDistance</name>
        <default/>
        <docblock line="144">
          <description/>
          <long-description/>
          <tag line="144" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="147" namespace="global" package="Default">
        <name>$mixFilter</name>
        <default>null</default>
        <docblock line="146">
          <description/>
          <long-description/>
          <tag line="146" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="149" namespace="global" package="Default">
        <name>$strTolerance</name>
        <default>null</default>
        <docblock line="148">
          <description/>
          <long-description/>
          <tag line="148" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="151" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="151">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="151">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="160" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="182" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="202" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="193">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="193" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="193" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="202">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="214">
          <description>Removes the selectable functionality completely.</description>
          <long-description>&lt;p&gt;This will return the
element back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="226" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="222">
          <description>Disables the selectable.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="233" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="229">
          <description>Enables the selectable.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="242" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="236">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="236" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="242">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="250" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="245">
          <description>Gets an object containing key/value pairs representing the current
selectable options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="262" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="253">
          <description>Sets the value of the selectable option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="253" name="param" description="" type="\" variable="$optionName"/>
          <tag line="253" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="262">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="262">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="271" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="265">
          <description>Sets one or more options for the
selectable.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A map of
option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="265" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="271">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="281" package="Controls\Base">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="274">
          <description>Refresh the position and size of each selectee element.</description>
          <long-description>&lt;p&gt;This method can be
used to manually recalculate the position and size of each selectee when
the &lt;a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;autoRefresh&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/a&gt; option is set to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;false&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="286" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="286">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="306" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="306">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="306">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="132" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="133" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="134" code="50019">No short description for property $mixAppendTo</critical>
      <critical line="136" code="50019">No short description for property $blnAutoRefresh</critical>
      <critical line="138" code="50019">No short description for property $mixCancel</critical>
      <critical line="140" code="50019">No short description for property $intDelay</critical>
      <critical line="142" code="50019">No short description for property $blnDisabled</critical>
      <critical line="144" code="50019">No short description for property $intDistance</critical>
      <critical line="146" code="50019">No short description for property $mixFilter</critical>
      <critical line="148" code="50019">No short description for property $strTolerance</critical>
      <error line="151" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="160" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="174" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="178" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="182" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="286" code="50010">No DocBlock was found for method __get()</error>
      <error line="306" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QPanel.class.php" hash="585ff6198bb9ed09ff737856db2109fe" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="Controls">
      <extends>\QBlockControl</extends>
      <name>QPanel</name>
      <full_name>\QPanel</full_name>
      <docblock line="2">
        <description>The QPanel Class is defined here.</description>
        <long-description>&lt;p&gt;QPanel class can be used to create composite controls which are to be rendered as blocks (not inline)&lt;/p&gt;</long-description>
        <tag line="2" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="12" namespace="global" package="Default">
        <name>$strTagName</name>
        <default>'div'</default>
        <docblock line="11">
          <description/>
          <long-description/>
          <tag line="11" name="var" description="HTML tag to the used for the Block Control" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="14" namespace="global" package="Default">
        <name>$strDefaultDisplayStyle</name>
        <default>\QDisplayStyle::Block</default>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="Default display style for the control. See QDisplayStyle class for available list" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="16" namespace="global" package="Default">
        <name>$blnIsBlockElement</name>
        <default>true</default>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="Is the control a block element?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>false</default>
        <docblock line="17">
          <description/>
          <long-description/>
          <tag line="17" name="var" description="Use htmlentities for the control?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/base_controls/QPanel.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QFileControl.class.php" hash="392fd362784716edb6b1ccf3244ec6e6" package="Controls">
    <docblock line="2">
      <description>This file contains the QFileControl class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="Controls">
      <extends>\QControl</extends>
      <name>QFileControl</name>
      <full_name>\QFileControl</full_name>
      <docblock line="8">
        <description>This class will render an HTML File input.</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property-read" description="is the name of the file that the user uploads" type="string" variable="$FileName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-read" description="is the MIME type of the file" type="string" variable="$Type">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-read" description="is the size in bytes of the file" type="integer" variable="$Size">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property-read" description="is the temporary full file path on the server where the file physically resides" type="string" variable="$File">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strFileName</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strType</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$intSize</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$strFile</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$strFormAttributes</name>
        <default>array('enctype' =&gt; 'multipart/form-data')</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="46" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="82">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="103">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="24" code="50018">No DocBlock was found for property $strFileName</error>
      <error line="25" code="50018">No DocBlock was found for property $strType</error>
      <error line="26" code="50018">No DocBlock was found for property $intSize</error>
      <error line="27" code="50018">No DocBlock was found for property $strFile</error>
      <error line="30" code="50018">No DocBlock was found for property $strFormAttributes</error>
      <error line="35" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="46" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="66" code="50010">No DocBlock was found for method Validate()</error>
      <error line="82" code="50010">No DocBlock was found for method __get()</error>
      <error line="103" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QSimpleTableBase.class.php" hash="b41d905adb8a0c96e4a083c46db5310a" package="Default">
    <class final="false" abstract="true" namespace="global" line="30" package="Controls">
      <extends>\QPaginatedControl</extends>
      <name>QSimpleTableBase</name>
      <full_name>\QSimpleTableBase</full_name>
      <docblock line="3">
        <description>&lt;p&gt;This control is used to display a simple html table.</description>
        <long-description>&lt;p&gt;The control itself will display things based off of an array of objects that gets set as the "Data Source".
It is particularly useful when combined with the Class::LoadArrayByXXX() functions or the Class::LoadAll()
that is generated by the CodeGen framework, or when combined with custom Class ArrayLoaders that you define
youself, but who's structure is based off of the CodeGen framework.&lt;/p&gt;

&lt;p&gt;For each item in a datasource's Array, a row (&amp;lt;tr&amp;gt;) will be generated.
You can define any number of QSimpleTableColumns which will result in a &amp;lt;td&amp;gt; for each row.
Using the QSimpleTableColumn's Accessor property, you can specify how the data for each cell should be
fetched from the datasource.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;NOTE&lt;/i&gt;: Unlike QDataGrid, this class does not use eval() for evaluating the cell values. Instead, a variety of
methods can be used to fetch the data for cells, including callable objects such as
closures (introduced in PHP 5,3).&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="Controls"/>
        <tag line="3" name="property" description="" type="string" variable="$RowCssClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="3" name="property" description="" type="string" variable="$AlternateRowCssClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="3" name="property" description="" type="string" variable="$HeaderRowCssClass">
          <type by_reference="false">string</type>
        </tag>
        <tag line="3" name="property" description="" type="boolean" variable="$ShowHeader">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="3" name="property" description="" type="boolean" variable="$ShowFooter">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="3" name="throws" description="" type="\QCallerException">
          <type by_reference="false">\QCallerException</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$objColumnArray</name>
        <default/>
        <docblock line="31">
          <description/>
          <long-description/>
          <tag line="31" name="var" description="" type="\QAbstractSimpleTableColumn[]">
            <type by_reference="false">\QAbstractSimpleTableColumn[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$strRowCssClass</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$strAlternateRowCssClass</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$strHeaderRowCssClass</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$blnShowHeader</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$blnShowFooter</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="40">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="40">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="Controls">
        <name>CreateIndexedColumn</name>
        <full_name>CreateIndexedColumn</full_name>
        <argument line="51">
          <name>$strName</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="51">
          <name>$mixIndex</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="51">
          <name>$intColumnIndex</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="Controls">
        <name>CreatePropertyColumn</name>
        <full_name>CreatePropertyColumn</full_name>
        <argument line="60">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="60">
          <name>$strProperty</name>
          <default/>
          <type/>
        </argument>
        <argument line="60">
          <name>$intColumnIndex</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="60">
          <name>$objBaseNode</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Controls">
        <name>CreateClosureColumn</name>
        <full_name>CreateClosureColumn</full_name>
        <argument line="66">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$objClosure</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$intColumnIndex</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Controls">
        <name>AddColumn</name>
        <full_name>AddColumn</full_name>
        <argument line="73">
          <name>$objColumn</name>
          <default/>
          <type>\QAbstractSimpleTableColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="Controls">
        <name>MoveColumn</name>
        <full_name>MoveColumn</full_name>
        <argument line="78">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$intColumnIndex</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="78">
          <name>$strNewName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Controls">
        <name>RenameColumn</name>
        <full_name>RenameColumn</full_name>
        <argument line="87">
          <name>$strOldName</name>
          <default/>
          <type/>
        </argument>
        <argument line="87">
          <name>$strNewName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="Controls">
        <name>AddColumnAt</name>
        <full_name>AddColumnAt</full_name>
        <argument line="93">
          <name>$intColumnIndex</name>
          <default/>
          <type/>
        </argument>
        <argument line="93">
          <name>$objColumn</name>
          <default/>
          <type>\QAbstractSimpleTableColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Controls">
        <name>RemoveColumn</name>
        <full_name>RemoveColumn</full_name>
        <docblock line="115">
          <description/>
          <long-description/>
          <tag line="115" name="param" description="0-based index of the column to remove" type="int" variable="$intColumnIndex">
            <type by_reference="false">int</type>
          </tag>
          <tag line="115" name="return" description="the removed column" type="\QAbstractSimpleTableColumn">
            <type by_reference="false">\QAbstractSimpleTableColumn</type>
          </tag>
          <tag line="115" name="throws" description="" type="\QIndexOutOfRangeException|\QInvalidCastException">
            <type by_reference="false">\QIndexOutOfRangeException</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$intColumnIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="Controls">
        <name>RemoveColumnByName</name>
        <full_name>RemoveColumnByName</full_name>
        <docblock line="137">
          <description>Remove the first column that has the given name</description>
          <long-description/>
          <tag line="137" name="param" description="name of the column to remove" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="return" description="the removed column or null of no column with the given name was found" type="\QAbstractSimpleTableColumn">
            <type by_reference="false">\QAbstractSimpleTableColumn</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="Controls">
        <name>RemoveColumnsByName</name>
        <full_name>RemoveColumnsByName</full_name>
        <docblock line="154">
          <description>Remove all the columns that have the given name</description>
          <long-description/>
          <tag line="154" name="param" description="name of the columns to remove" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="154" name="return" description="the array of columns removed" type="\QAbstractSimpleTableColumn[]">
            <type by_reference="false">\QAbstractSimpleTableColumn[]</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="Controls">
        <name>RemoveColumns</name>
        <full_name>RemoveColumns</full_name>
        <docblock line="163">
          <description>Remove all the columns that have any of the names in $strNamesArray</description>
          <long-description/>
          <tag line="163" name="param" description="names of the columns to remove" type="string[]" variable="$strNamesArray">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="163" name="return" description="the array of columns removed" type="\QAbstractSimpleTableColumn[]">
            <type by_reference="false">\QAbstractSimpleTableColumn[]</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$strNamesArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="Controls">
        <name>RemoveAllColumns</name>
        <full_name>RemoveAllColumns</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="191" package="Controls">
        <name>GetAllColumns</name>
        <full_name>GetAllColumns</full_name>
        <docblock line="188">
          <description/>
          <long-description/>
          <tag line="188" name="return" description="" type="\QAbstractSimpleTableColumn[]">
            <type by_reference="false">\QAbstractSimpleTableColumn[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="200" package="Controls">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <docblock line="195">
          <description>Get the column at the given index, or null if the index is not valid</description>
          <long-description/>
          <tag line="195" name="param" description="" type="\" variable="$intColumnIndex"/>
          <tag line="195" name="return" description="" type="\QAbstractSimpleTableColumn">
            <type by_reference="false">\QAbstractSimpleTableColumn</type>
          </tag>
        </docblock>
        <argument line="200">
          <name>$intColumnIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="211" package="Controls">
        <name>GetColumnByName</name>
        <full_name>GetColumnByName</full_name>
        <docblock line="206">
          <description>Get the first column that has the given name, or null if a column with the given name does not exist</description>
          <long-description/>
          <tag line="206" name="param" description="column name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="206" name="return" description="" type="\QAbstractSimpleTableColumn">
            <type by_reference="false">\QAbstractSimpleTableColumn</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="223" package="Controls">
        <name>GetColumnIndex</name>
        <full_name>GetColumnIndex</full_name>
        <docblock line="218">
          <description>Get the first column that has the given name, or null if a column with the given name does not exist</description>
          <long-description/>
          <tag line="218" name="param" description="column name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="218" name="return" description="" type="\QAbstractSimpleTableColumn">
            <type by_reference="false">\QAbstractSimpleTableColumn</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="Controls">
        <name>GetColumnsByName</name>
        <full_name>GetColumnsByName</full_name>
        <docblock line="233">
          <description>Get all the columns that have the given name</description>
          <long-description/>
          <tag line="233" name="param" description="column name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="return" description="" type="\QAbstractSimpleTableColumn[]">
            <type by_reference="false">\QAbstractSimpleTableColumn[]</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="246" package="Controls">
        <name>GetHeaderRowHtml</name>
        <full_name>GetHeaderRowHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="256" package="Controls">
        <name>GetDataGridRowHtml</name>
        <full_name>GetDataGridRowHtml</full_name>
        <argument line="256">
          <name>$objObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="256">
          <name>$intCurrentRowIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="277" package="Controls">
        <name>GetFooterRowHtml</name>
        <full_name>GetFooterRowHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="279" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="313" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="313">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="336" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="336">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="336">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/base_controls/QSimpleTableBase.class.php</error>
      <critical line="31" code="50019">No short description for property $objColumnArray</critical>
      <error line="34" code="50018">No DocBlock was found for property $strRowCssClass</error>
      <error line="35" code="50018">No DocBlock was found for property $strAlternateRowCssClass</error>
      <error line="36" code="50018">No DocBlock was found for property $strHeaderRowCssClass</error>
      <error line="37" code="50018">No DocBlock was found for property $blnShowHeader</error>
      <error line="38" code="50018">No DocBlock was found for property $blnShowFooter</error>
      <error line="40" code="50010">No DocBlock was found for method __construct()</error>
      <error line="49" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="51" code="50010">No DocBlock was found for method CreateIndexedColumn()</error>
      <error line="60" code="50010">No DocBlock was found for method CreatePropertyColumn()</error>
      <error line="66" code="50010">No DocBlock was found for method CreateClosureColumn()</error>
      <error line="73" code="50010">No DocBlock was found for method AddColumn()</error>
      <error line="78" code="50010">No DocBlock was found for method MoveColumn()</error>
      <error line="87" code="50010">No DocBlock was found for method RenameColumn()</error>
      <error line="93" code="50010">No DocBlock was found for method AddColumnAt()</error>
      <error line="115" code="50012">No short description for method RemoveColumn()</error>
      <error line="183" code="50010">No DocBlock was found for method RemoveAllColumns()</error>
      <error line="188" code="50012">No short description for method GetAllColumns()</error>
      <error line="246" code="50010">No DocBlock was found for method GetHeaderRowHtml()</error>
      <error line="256" code="50010">No DocBlock was found for method GetDataGridRowHtml()</error>
      <error line="277" code="50010">No DocBlock was found for method GetFooterRowHtml()</error>
      <error line="279" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="313" code="50010">No DocBlock was found for method __get()</error>
      <error line="336" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QImageRollover.class.php" hash="d81dc22411d55ca2f86a89b58564a379" package="Controls">
    <docblock line="2">
      <description>This file contains the QImageRollover class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Controls">
      <extends>\QControl</extends>
      <name>QImageRollover</name>
      <full_name>\QImageRollover</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="mixed" variable="$ImageStandard">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property" description="" type="mixed" variable="$ImageHover">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$AltText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$LinkUrl">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="22" namespace="global" package="Default">
        <name>$mixImageStandard</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$mixImageHover</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strLinkUrl</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strCustomLinkStyleArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$strAltText</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Controls">
        <name>SetCustomLinkStyle</name>
        <full_name>SetCustomLinkStyle</full_name>
        <argument line="33">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="33">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Controls">
        <name>GetCustomLinkStyle</name>
        <full_name>GetCustomLinkStyle</full_name>
        <argument line="43">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Controls">
        <name>RemoveCustomLinkStyle</name>
        <full_name>RemoveCustomLinkStyle</full_name>
        <argument line="50">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="59" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="Controls">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="118">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="139" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="139">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="139">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QImageRollover</critical>
      <error line="22" code="50018">No DocBlock was found for property $mixImageStandard</error>
      <error line="23" code="50018">No DocBlock was found for property $mixImageHover</error>
      <error line="24" code="50018">No DocBlock was found for property $strLinkUrl</error>
      <error line="25" code="50018">No DocBlock was found for property $strCustomLinkStyleArray</error>
      <error line="26" code="50018">No DocBlock was found for property $strAltText</error>
      <error line="31" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="33" code="50010">No DocBlock was found for method SetCustomLinkStyle()</error>
      <error line="43" code="50010">No DocBlock was found for method GetCustomLinkStyle()</error>
      <error line="50" code="50010">No DocBlock was found for method RemoveCustomLinkStyle()</error>
      <error line="59" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="99" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="113" code="50010">No DocBlock was found for method Validate()</error>
      <error line="118" code="50010">No DocBlock was found for method __get()</error>
      <error line="139" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QAutocompleteBase.class.php" hash="089637df8353ed5ec1461927c4ffd08d" package="Default">
    <docblock line="2">
      <description>Autocomplete Base File</description>
      <long-description>&lt;p&gt;The QAutocompleteBase class defined here provides an interface between the generated
QAutocompleteGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QAutocomplete.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\QListItem</extends>
      <name>QAutocompleteListItem</name>
      <full_name>\QAutocompleteListItem</full_name>
      <docblock line="12">
        <description/>
        <long-description/>
        <tag line="12" name="deprecated" description="since Qcubed 2.1.1. Please use QListItem&#10;List items that can be sent to an autocomplete in non-ajax mode. Put them in an array and send to -&gt;Source."/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="17">
          <description/>
          <long-description/>
          <tag line="17" name="deprecated" description="since Qcubed 2.1.1. Please use QListItem"/>
          <tag line="17" name="param" description="" type="\" variable="$strName"/>
          <tag line="17" name="param" description="" type="\" variable="$strValue"/>
          <tag line="17" name="param" description="" type="bool" variable="$blnSelected">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="17" name="param" description="" type="null" variable="$strItemGroup">
            <type by_reference="false">null</type>
          </tag>
          <tag line="17" name="param" description="" type="null" variable="$strOverrideParameters">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="25">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="25">
          <name>$blnSelected</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="25">
          <name>$strItemGroup</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="25">
          <name>$strOverrideParameters</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Default">
        <name>toJsObject</name>
        <full_name>toJsObject</full_name>
        <docblock line="30">
          <description/>
          <long-description/>
          <tag line="30" name="deprecated" description="since Qcubed 2.1.1. Please use QListItem"/>
          <tag line="30" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="43" package="Default">
      <extends>\QEvent</extends>
      <name>QAutocomplete_SourceEvent</name>
      <full_name>\QAutocomplete_SourceEvent</full_name>
      <docblock line="40">
        <description>Special event to handle source ajax callbacks</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="45" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QAutocomplete_Source'</value>
        <docblock line="44">
          <description>Event Name</description>
          <long-description/>
        </docblock>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="67" package="Controls\Base">
      <extends>\QAutocompleteGen</extends>
      <name>QAutocompleteBase</name>
      <full_name>\QAutocompleteBase</full_name>
      <docblock line="49">
        <description>Implements the JQuery UI Autocomplete widget</description>
        <long-description>&lt;p&gt;The Autocomplete is JQuery UIs version of a field with an attached drop down menu. As you type in
the field, the menu appears, and the items in the menu are filtered by what the user types. This class allows
you to use an array of QListItems, or an array of database objects as the source. You can also pass this array
statically in the Source parameter at creation time, or dynamically via Ajax by using SetDataBinder, and then
in your data binder function, setting the DataSource parameter.&lt;/p&gt;</long-description>
        <tag line="49" name="property" description="the id of the selected item. When QAutocompleteListItem objects are used for the DataSource, this corresponds to the Value of the item" type="string" variable="$SelectedId">
          <type by_reference="false">string</type>
        </tag>
        <tag line="49" name="property" description="if true, non matching values are not accepted by the input" type="boolean" variable="$MustMatch">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="49" name="property" description="if set, the Autocomplete will keep appending the new selections to the previous term, delimited by this string.&#10;   This is useful when making QAutocomplete handle multiple values (see http://jqueryui.com/demos/autocomplete/#multiple )." type="string" variable="$MultipleValueDelimiter">
          <type by_reference="false">string</type>
        </tag>
        <tag line="49" name="property-write" description="an array of strings, QAutocompleteListItem's," type="array" variable="$DataSource">
          <type by_reference="false">array</type>
        </tag>
        <tag line="49" name="link" description="http://jqueryui.com/autocomplete/" link="http://jqueryui.com/autocomplete/"/>
        <tag line="49" name="package" description="Controls\Base"/>
      </docblock>
      <constant namespace="global" line="69" package="Controls\Base">
        <name>RESPONSE_ATTR</name>
        <full_name>RESPONSE_ATTR</full_name>
        <value>'__qac_response'</value>
      </constant>
      <constant namespace="global" line="86" package="Controls\Base">
        <name>FILTER_CONTAINS</name>
        <full_name>FILTER_CONTAINS</full_name>
        <value>'function(array, term) { var matcher = new RegExp($.ui.autocomplete.escapeRegex(term), "i"); return $.grep(array, function(value) { return matcher.test(value.label || value.value || value); }); }'</value>
        <docblock line="81">
          <description>When this filter is passed to QAutocomplete::UseFilter, only the items in the source list that contain the typed term will be shown in the drop-down
This is the default filter used by the jQuery autocomplete.</description>
          <long-description>&lt;p&gt;Useful when resetting from a previousely set filter.&lt;/p&gt;</long-description>
          <tag line="81" name="see" description="\QAutocomplete::UseFilter" refers="\QAutocomplete::UseFilter"/>
        </docblock>
      </constant>
      <constant namespace="global" line="91" package="Controls\Base">
        <name>FILTER_STARTS_WITH</name>
        <full_name>FILTER_STARTS_WITH</full_name>
        <value>'function(array, term) { var matcher = new RegExp("^" + $.ui.autocomplete.escapeRegex(term), "i"); return $.grep(array, function(value) { return matcher.test(value.label || value.value || value); }); }'</value>
        <docblock line="87">
          <description>When this filter is passed to QAutocomplete::UseFilter, only the items in the source list that start with the typed term will be shown in the drop-down</description>
          <long-description/>
          <tag line="87" name="see" description="\QAutocomplete::UseFilter" refers="\QAutocomplete::UseFilter"/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="72" namespace="global" package="Default">
        <name>$strSelectedId</name>
        <default>null</default>
        <docblock line="71">
          <description/>
          <long-description/>
          <tag line="71" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" namespace="global" package="Default">
        <name>$blnUseAjax</name>
        <default>false</default>
        <docblock line="73">
          <description/>
          <long-description/>
          <tag line="73" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$blnMustMatch</name>
        <default>false</default>
        <docblock line="75">
          <description/>
          <long-description/>
          <tag line="75" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" namespace="global" package="Default">
        <name>$strMultipleValueDelimiter</name>
        <default>null</default>
        <docblock line="77">
          <description/>
          <long-description/>
          <tag line="77" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="108" package="Controls\Base">
        <name>UseFilter</name>
        <full_name>UseFilter</full_name>
        <docblock line="93">
          <description>Set a filter to use when using a simple array as a source (in non-ajax mode).</description>
          <long-description>&lt;p&gt;Note that ALL non-ajax autocompletes on the page
will use the new filter.&lt;/p&gt;</long-description>
          <tag line="93" name="static" description=""/>
          <tag line="93" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="93" name="param" description="represents a closure that will be used as the global filter function for jQuery autocomplete.&#10;The closure should take two arguments - array and term. array is the list of all available choices, term is what the user typed in the input box.&#10;It should return an array of suggestions to show in the drop-down.&#10;&lt;b&gt;Example:&lt;/b&gt; &lt;code&gt;QAutocomplete::UseFilter(QAutocomplete::FILTER_STARTS_WITH)&lt;/code&gt;" type="string|\QJsClosure" variable="$filter">
            <type by_reference="false">string</type>
            <type by_reference="false">\QJsClosure</type>
          </tag>
          <tag line="93" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="93" name="see" description="\QAutocomplete::FILTER_CONTAINS" refers="\QAutocomplete::FILTER_CONTAINS"/>
          <tag line="93" name="see" description="\QAutocomplete::FILTER_STARTS_WITH" refers="\QAutocomplete::FILTER_STARTS_WITH"/>
        </docblock>
        <argument line="108">
          <name>$filter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="134" package="Controls\Base">
        <name>SetDataBinder</name>
        <full_name>SetDataBinder</full_name>
        <docblock line="120">
          <description>Set the data binder for ajax filtering
Call this at creation time to set the data binder of the item list you will display.</description>
          <long-description>&lt;p&gt;The data binder
will be an AjaxAction function, and so will receive the following parameters:
- FormId
- ControlId
- Parameter
The Parameter in particular will be the term that you should use for filtering. There are situations
where the term will not be the same as the contents of the field.&lt;/p&gt;</long-description>
          <tag line="120" name="param" description="Name of the method which has to be bound" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="The parent control on which the action is to be bound" type="\QForm|\QControl" variable="$objParentControl">
            <type by_reference="false">\QForm</type>
            <type by_reference="false">\QControl</type>
          </tag>
          <tag line="120" name="param" description="Return the terms as a parameter to the handler" type="bool" variable="$blnReturnTermAsParameter">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="134">
          <name>$objParentControl</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="134">
          <name>$blnReturnTermAsParameter</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
        <docblock line="170">
          <description>Gets the Javascript part of the control which is sent to the client side upon the completion of Render</description>
          <long-description/>
          <tag line="170" name="return" description="The JS string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="273" package="Controls\Base">
        <name>prepareAjaxList</name>
        <full_name>prepareAjaxList</full_name>
        <argument line="273">
          <name>$dataSource</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="287" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="280">
          <description>PHP __set Magic method</description>
          <long-description/>
          <tag line="280" name="param" description="Property Name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="280" name="param" description="Property Value" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="280" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="287">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="287">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="374" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="367">
          <description>PHP __get magic method implementation</description>
          <long-description/>
          <tag line="367" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="367" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="367" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="374">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="12" code="50005">No short description for class \QAutocompleteListItem</critical>
      <error line="17" code="50012">No short description for method __construct()</error>
      <error line="30" code="50012">No short description for method toJsObject()</error>
      <critical line="71" code="50019">No short description for property $strSelectedId</critical>
      <critical line="73" code="50019">No short description for property $blnUseAjax</critical>
      <critical line="75" code="50019">No short description for property $blnMustMatch</critical>
      <critical line="77" code="50019">No short description for property $strMultipleValueDelimiter</critical>
      <error line="273" code="50010">No DocBlock was found for method prepareAjaxList()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QListItem.class.php" hash="5208cdb07b857f33c4ee9fb19a91727b" package="Controls">
    <docblock line="2">
      <description>QListItem.class.php contains the QListItem class</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Controls">
      <extends>\QBaseClass</extends>
      <name>QListItem</name>
      <full_name>\QListItem</full_name>
      <docblock line="7">
        <description>Utilized by the {@link QListControl} class which contains a private array of ListItems.</description>
        <long-description/>
        <tag line="7" name="package" description="Controls"/>
        <tag line="7" name="property" description="is what gets displayed" type="string" variable="$Name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="7" name="property" description="is any text that represents the value of the ListItem (e.g. maybe a DB Id)" type="string" variable="$Value">
          <type by_reference="false">string</type>
        </tag>
        <tag line="7" name="property" description="is a boolean of whether or not this item is selected or not (do only! use during initialization, otherwise this should be set by the {@link QListControl}!)" type="boolean" variable="$Selected">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="7" name="property" description="is the group (if any) in which the Item should be displayed" type="string" variable="$ItemGroup">
          <type by_reference="false">string</type>
        </tag>
        <tag line="7" name="property" description="is the QListItemStyle in which the Item should be rendered" type="\QListItemStyle" variable="$ItemStyle">
          <type by_reference="false">\QListItemStyle</type>
        </tag>
        <tag line="7" name="property" description="is optional text to display in the drop down menu of a QAutocomplete instead of the Name. The Name will still be what gets filled in to the text box." type="string" variable="$Label">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="22" namespace="global" package="Default">
        <name>$strName</name>
        <default>null</default>
        <docblock line="21">
          <description/>
          <long-description/>
          <tag line="21" name="var" description="Name of the Item" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strValue</name>
        <default>null</default>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="Value of the Item" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$blnSelected</name>
        <default>false</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="Is the item selected?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strItemGroup</name>
        <default>null</default>
        <docblock line="27">
          <description/>
          <long-description/>
          <tag line="27" name="var" description="Group to which the item belongs" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$objItemStyle</name>
        <default/>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="Inline style of the item" type="\QListItemStyle">
            <type by_reference="false">\QListItemStyle</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$strLabel</name>
        <default>null</default>
        <docblock line="31">
          <description/>
          <long-description/>
          <tag line="31" name="var" description="Label text for the item" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>Creates a QListItem</description>
          <long-description/>
          <tag line="37" name="param" description="is the displayed Name of the Item" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="is any text that represents the value of the ListItem (e.g. maybe a DB Id)" type="string" variable="$strValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="is a boolean of whether or not this item is selected or not (optional)" type="boolean" variable="$blnSelected">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="37" name="param" description="is the group (if any) in which the Item should be displayed" type="string" variable="$strItemGroup">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="allows you to override item styles.  It is either a string formatted as Property=Value&#10;                             or an array of the format array(property =&gt; value)" type="array" variable="$strOverrideParameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="37" name="return" description="" type="\QListItem">
            <type by_reference="false">\QListItem</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$blnSelected</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="51">
          <name>$strItemGroup</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="51">
          <name>$strOverrideParameters</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="Controls">
        <name>GetAttributes</name>
        <full_name>GetAttributes</full_name>
        <argument line="76">
          <name>$blnIncludeCustom</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$blnIncludeAction</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="Controls">
        <name>toJsObject</name>
        <full_name>toJsObject</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="96">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="118">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="118">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="76" code="50010">No DocBlock was found for method GetAttributes()</error>
      <error line="81" code="50010">No DocBlock was found for method toJsObject()</error>
      <error line="96" code="50010">No DocBlock was found for method __get()</error>
      <error line="118" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QImageBrowser.class.php" hash="6107f5956729fdf6afd5d708b2c57608" package="Controls">
    <docblock line="2">
      <description>This file contains the QImageBrowser class and supporting classes.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="35" package="Controls">
      <extends>\QPanel</extends>
      <name>QImageBrowserNav</name>
      <full_name>\QImageBrowserNav</full_name>
      <docblock line="8">
        <description>Control for a simple image browser.</description>
        <long-description>&lt;p&gt;The browser can have one or two navigation bars (with 4 buttons allowing to go back and forward,
and to the first and last images). It can also have a caption textbox, which can be editable.
A thumbnails panel is also provided with the browser. The layout is fully controlled by css.&lt;/p&gt;

&lt;p&gt;It is designed to allow almost every aspect of the browser to be customized. However typical defaults
are provided so in a simple case it can be used "out-of-the-box" (see the example).&lt;/p&gt;

&lt;p&gt;QImageBrowserBase is the abstract class that you may want to subclass if you need to customize
some functionality (such us the source of the images or how to load/save the captions). See the comments in
this class for details about how it can be customized. A concrete implementation called QImageBrowser is also
provided, which loads the images from a directory.&lt;/p&gt;

&lt;p&gt;QImageBrowserNav represents the simple 4 button navigation panel, it has getters and setters for all the
buttons, so you can replace the default buttons by anything you'd like (such as image buttons).&lt;/p&gt;

&lt;p&gt;QImageBrowserThumbnails represents the tumbnails navigation panel.&lt;/p&gt;</long-description>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="FirstButton the button to go to the first image" type="\QButton" variable="">
          <type by_reference="false">\QButton</type>
        </tag>
        <tag line="8" name="property" description="PrevButton the button to go to the previous image" type="\QButton" variable="">
          <type by_reference="false">\QButton</type>
        </tag>
        <tag line="8" name="property" description="NextButton the button to go to the next image" type="\QButton" variable="">
          <type by_reference="false">\QButton</type>
        </tag>
        <tag line="8" name="property" description="LastButton the button to go to the last image" type="\QButton" variable="">
          <type by_reference="false">\QButton</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$btnFirst</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$btnPrev</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$btnNext</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$btnLast</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="41">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="74" package="Controls">
        <name>setButtonActions</name>
        <full_name>setButtonActions</full_name>
        <argument line="74">
          <name>$arrButtons</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="97" package="Controls">
        <name>BackButtonsEnabled</name>
        <full_name>BackButtonsEnabled</full_name>
        <argument line="97">
          <name>$blnEnable</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="Controls">
        <name>ForwardButtonsEnabled</name>
        <full_name>ForwardButtonsEnabled</full_name>
        <argument line="102">
          <name>$blnEnable</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="107">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="123">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="186" package="Controls">
      <extends>\QPanel</extends>
      <name>QImageBrowserThumbnails</name>
      <full_name>\QImageBrowserThumbnails</full_name>
      <docblock line="183">
        <description/>
        <long-description/>
        <tag line="183" name="package" description="Controls"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="187" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="187">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="187">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="Controls">
        <name>reload</name>
        <full_name>reload</full_name>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="242" package="Default">
      <extends>\QPanel</extends>
      <name>QImageBrowserBase</name>
      <full_name>\QImageBrowserBase</full_name>
      <docblock line="233">
        <description/>
        <long-description/>
        <tag line="233" name="property-read" description="MainImage the main image control" type="\QImageControl" variable="">
          <type by_reference="false">\QImageControl</type>
        </tag>
        <tag line="233" name="property" description="Caption the caption control" type="\QTextBox" variable="">
          <type by_reference="false">\QTextBox</type>
        </tag>
        <tag line="233" name="property" description="SaveButton the save button control" type="\QButton" variable="">
          <type by_reference="false">\QButton</type>
        </tag>
        <tag line="233" name="property" description="Navigation1 the first navigation panel" type="\QImageBrowserNav" variable="">
          <type by_reference="false">\QImageBrowserNav</type>
        </tag>
        <tag line="233" name="property" description="Navigation2 the second navigation panel" type="\QImageBrowserNav" variable="">
          <type by_reference="false">\QImageBrowserNav</type>
        </tag>
        <tag line="233" name="property" description="Thumbnails the thumbnails panel" type="\QImageBrowserThumbnails" variable="">
          <type by_reference="false">\QImageBrowserThumbnails</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="243" namespace="global" package="Default">
        <name>$intCurrentImage</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="244" namespace="global" package="Default">
        <name>$imgMainImage</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="245" namespace="global" package="Default">
        <name>$txtCaption</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="246" namespace="global" package="Default">
        <name>$btnSave</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="247" namespace="global" package="Default">
        <name>$ibnNavigation1</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="248" namespace="global" package="Default">
        <name>$ibnNavigation2</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="249" namespace="global" package="Default">
        <name>$ibtThumbnails</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="258" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="251">
          <description/>
          <long-description/>
          <tag line="251" name="param" description="" type="\" variable="$objParentObject"/>
          <tag line="251" name="param" description="if true (default) don't allow captions to be edited (and don't show the save button)" type="bool" variable="$blnReadOnlyCaption">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="251" name="param" description="if true (default false),will show two navigation bars (which can layout with template/css)" type="bool" variable="$blnTwoNavBars">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="251" name="param" description="if true (default), will show two thumbnails panel (which you can layout with template/css)" type="bool" variable="$blnThumbnails">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="251" name="param" description="" type="null" variable="$strControlId">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="258">
          <name>$blnReadOnlyCaption</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="258">
          <name>$blnTwoNavBars</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="258">
          <name>$blnThumbnails</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="258">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="311" package="Default">
        <name>reload</name>
        <full_name>reload</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="317" package="Default">
        <name>setMainImage</name>
        <full_name>setMainImage</full_name>
        <argument line="317">
          <name>$intIdx</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="357" package="Default">
        <name>btnFirst_Click</name>
        <full_name>btnFirst_Click</full_name>
        <argument line="357">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="357">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="357">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="361" package="Default">
        <name>btnNext_Click</name>
        <full_name>btnNext_Click</full_name>
        <argument line="361">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="361">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="361">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="367" package="Default">
        <name>btnPrev_Click</name>
        <full_name>btnPrev_Click</full_name>
        <argument line="367">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="367">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="367">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="373" package="Default">
        <name>btnLast_Click</name>
        <full_name>btnLast_Click</full_name>
        <argument line="373">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="373">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="373">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="377" package="Default">
        <name>imgThm_Click</name>
        <full_name>imgThm_Click</full_name>
        <argument line="377">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="377">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="377">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="381" package="Default">
        <name>btnSave_Click</name>
        <full_name>btnSave_Click</full_name>
        <argument line="381">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="381">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="381">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="388" package="Default">
        <name>txtCaption_Change</name>
        <full_name>txtCaption_Change</full_name>
        <argument line="388">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="388">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="388">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="403" package="Default">
        <name>ImageCount</name>
        <full_name>ImageCount</full_name>
        <docblock line="398">
          <description>Return the total number of the images in this image browser</description>
          <long-description/>
          <tag line="398" name="abstract" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="411" package="Default">
        <name>ImagePath</name>
        <full_name>ImagePath</full_name>
        <docblock line="405">
          <description>Return the absolute path of the corresponding image.</description>
          <long-description/>
          <tag line="405" name="abstract" description=""/>
          <tag line="405" name="param" description="index of the image (between 0 and ImageCount()-1)" type="\" variable="$intIdx"/>
        </docblock>
        <argument line="411">
          <name>$intIdx</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="420" package="Default">
        <name>ThumbnailImagePath</name>
        <full_name>ThumbnailImagePath</full_name>
        <docblock line="413">
          <description>Return the absolute path of the corresponding thumbnail image.</description>
          <long-description>&lt;p&gt;This could be the same as the image, and the browser will scale it to the size of the thumbnail.&lt;/p&gt;</long-description>
          <tag line="413" name="abstract" description=""/>
          <tag line="413" name="param" description="index of the image (between 0 and ImageCount()-1)" type="\" variable="$intIdx"/>
        </docblock>
        <argument line="420">
          <name>$intIdx</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="428" package="Default">
        <name>loadCaption</name>
        <full_name>loadCaption</full_name>
        <docblock line="422">
          <description>Return the corresponding image caption</description>
          <long-description/>
          <tag line="422" name="abstract" description=""/>
          <tag line="422" name="param" description="index of the image (between 0 and ImageCount()-1)" type="\" variable="$intIdx"/>
        </docblock>
        <argument line="428">
          <name>$intIdx</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="436" package="Default">
        <name>saveCaption</name>
        <full_name>saveCaption</full_name>
        <docblock line="431">
          <description/>
          <long-description/>
          <tag line="431" name="abstract" description=""/>
          <tag line="431" name="param" description="index of the image (between 0 and ImageCount()-1)" type="\" variable="$intIdx"/>
          <tag line="431" name="param" description="caption to save" type="\" variable="$strCaption"/>
        </docblock>
        <argument line="436">
          <name>$intIdx</name>
          <default/>
          <type/>
        </argument>
        <argument line="436">
          <name>$strCaption</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="445" package="Default">
        <name>selectThumbnailCssClass</name>
        <full_name>selectThumbnailCssClass</full_name>
        <docblock line="439">
          <description>Return the added CSS class for the selected thumbnail image.</description>
          <long-description>&lt;p&gt;Overwrite this method if you'd like a different CSS class.&lt;/p&gt;</long-description>
          <tag line="439" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="455" package="Default">
        <name>invalidImagePath</name>
        <full_name>invalidImagePath</full_name>
        <docblock line="449">
          <description>The absolute path of an image that indicates that the current image path is invalid.</description>
          <long-description>&lt;p&gt;This is needed since we cannot render the QImageControl without a valid ImagePath.&lt;/p&gt;</long-description>
          <tag line="449" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="459" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="459">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="477" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="477">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="477">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="561" package="Controls">
      <extends>\QImageBrowserBase</extends>
      <name>QImageBrowser</name>
      <full_name>\QImageBrowser</full_name>
      <docblock line="551">
        <description>A simple implementation of the QImageBrowserBase, which takes the images from a provided
array of image paths (must be absolute paths).</description>
        <long-description>&lt;p&gt;It has a method that you can use to load
all the images from a directory. By default it aassumes that the captions are saved in the same
directory in files with an additional ".txt" extension.&lt;/p&gt;</long-description>
        <tag line="551" name="package" description="Controls"/>
        <tag line="551" name="property" description="ImagePaths the array of absolute paths for the images" type="array" variable="">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="562" namespace="global" package="Default">
        <name>$arrImagePaths</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="564" package="Controls">
        <name>LoadImagesFromDirectory</name>
        <full_name>LoadImagesFromDirectory</full_name>
        <argument line="564">
          <name>$strDir</name>
          <default/>
          <type/>
        </argument>
        <argument line="564">
          <name>$strPattern</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="586" package="Controls">
        <name>ImageCount</name>
        <full_name>ImageCount</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="591" package="Controls">
        <name>ImagePath</name>
        <full_name>ImagePath</full_name>
        <argument line="591">
          <name>$intIdx</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="595" package="Controls">
        <name>ThumbnailImagePath</name>
        <full_name>ThumbnailImagePath</full_name>
        <argument line="595">
          <name>$intIdx</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="599" package="Controls">
        <name>captionFileName</name>
        <full_name>captionFileName</full_name>
        <argument line="599">
          <name>$intIdx</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="604" package="Controls">
        <name>loadCaption</name>
        <full_name>loadCaption</full_name>
        <argument line="604">
          <name>$intIdx</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="617" package="Controls">
        <name>saveCaption</name>
        <full_name>saveCaption</full_name>
        <argument line="617">
          <name>$intIdx</name>
          <default/>
          <type/>
        </argument>
        <argument line="617">
          <name>$strCaption</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="622" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="622">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="634" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="634">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="634">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="36" code="50018">No DocBlock was found for property $btnFirst</error>
      <error line="37" code="50018">No DocBlock was found for property $btnPrev</error>
      <error line="38" code="50018">No DocBlock was found for property $btnNext</error>
      <error line="39" code="50018">No DocBlock was found for property $btnLast</error>
      <error line="41" code="50010">No DocBlock was found for method __construct()</error>
      <error line="74" code="50010">No DocBlock was found for method setButtonActions()</error>
      <error line="97" code="50010">No DocBlock was found for method BackButtonsEnabled()</error>
      <error line="102" code="50010">No DocBlock was found for method ForwardButtonsEnabled()</error>
      <error line="107" code="50010">No DocBlock was found for method __get()</error>
      <error line="123" code="50010">No DocBlock was found for method __set()</error>
      <critical line="183" code="50005">No short description for class \QImageBrowserThumbnails</critical>
      <error line="187" code="50010">No DocBlock was found for method __construct()</error>
      <error line="198" code="50010">No DocBlock was found for method reload()</error>
      <critical line="233" code="50005">No short description for class \QImageBrowserBase</critical>
      <error line="243" code="50018">No DocBlock was found for property $intCurrentImage</error>
      <error line="244" code="50018">No DocBlock was found for property $imgMainImage</error>
      <error line="245" code="50018">No DocBlock was found for property $txtCaption</error>
      <error line="246" code="50018">No DocBlock was found for property $btnSave</error>
      <error line="247" code="50018">No DocBlock was found for property $ibnNavigation1</error>
      <error line="248" code="50018">No DocBlock was found for property $ibnNavigation2</error>
      <error line="249" code="50018">No DocBlock was found for property $ibtThumbnails</error>
      <error line="251" code="50012">No short description for method __construct()</error>
      <error line="311" code="50010">No DocBlock was found for method reload()</error>
      <error line="317" code="50010">No DocBlock was found for method setMainImage()</error>
      <error line="357" code="50010">No DocBlock was found for method btnFirst_Click()</error>
      <error line="361" code="50010">No DocBlock was found for method btnNext_Click()</error>
      <error line="367" code="50010">No DocBlock was found for method btnPrev_Click()</error>
      <error line="373" code="50010">No DocBlock was found for method btnLast_Click()</error>
      <error line="377" code="50010">No DocBlock was found for method imgThm_Click()</error>
      <error line="381" code="50010">No DocBlock was found for method btnSave_Click()</error>
      <error line="388" code="50010">No DocBlock was found for method txtCaption_Change()</error>
      <error line="431" code="50012">No short description for method saveCaption()</error>
      <error line="459" code="50010">No DocBlock was found for method __get()</error>
      <error line="477" code="50010">No DocBlock was found for method __set()</error>
      <error line="562" code="50018">No DocBlock was found for property $arrImagePaths</error>
      <error line="564" code="50010">No DocBlock was found for method LoadImagesFromDirectory()</error>
      <error line="586" code="50010">No DocBlock was found for method ImageCount()</error>
      <error line="591" code="50010">No DocBlock was found for method ImagePath()</error>
      <error line="595" code="50010">No DocBlock was found for method ThumbnailImagePath()</error>
      <error line="599" code="50010">No DocBlock was found for method captionFileName()</error>
      <error line="604" code="50010">No DocBlock was found for method loadCaption()</error>
      <error line="617" code="50010">No DocBlock was found for method saveCaption()</error>
      <error line="622" code="50010">No DocBlock was found for method __get()</error>
      <error line="634" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDatepickerBoxGen.class.php" hash="55dbd36d33d40a0011de53b304499ced" package="Default">
    <docblock line="2">
      <description>QDatepickerBoxGen File</description>
      <long-description>&lt;p&gt;The abstract QDatepickerBoxGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QDatepickerBoxBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QDatepickerBox class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="38" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepickerBox_BeforeShowEvent</name>
      <full_name>\QDatepickerBox_BeforeShowEvent</full_name>
      <docblock line="32">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;A function that takes an input
		field and current datepicker instance and returns an options object to
		update the datepicker with.</description>
        <long-description>&lt;p&gt;It is called just before the datepicker is
        displayed.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="39" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepickerBox_BeforeShow'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'beforeShow'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="52" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepickerBox_BeforeShowDayEvent</name>
      <full_name>\QDatepickerBox_BeforeShowDayEvent</full_name>
      <docblock line="43">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;A function takes a date as a
		parameter and must return an array with &lt;code&gt;[0]&lt;/code&gt; equal to
		&lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; indicating whether or not this date is
		selectable, &lt;code&gt;[1]&lt;/code&gt; equal to a CSS class name or &lt;code&gt;""&lt;/code&gt;
		for the default presentation, and &lt;code&gt;[2]&lt;/code&gt; an optional popup
		tooltip for this date.</description>
        <long-description>&lt;p&gt;It is called for each day in the datepicker before
        it is displayed.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="53" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepickerBox_BeforeShowDay'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'beforeShowDay'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="63" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepickerBox_CalculateWeekEvent</name>
      <full_name>\QDatepickerBox_CalculateWeekEvent</full_name>
      <docblock line="57">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;jQuery.datepicker.iso8601Week&lt;/code&gt;A
		function to calculate the week of the year for a given date.</description>
        <long-description>&lt;p&gt;The default
        implementation uses the ISO 8601 definition: weeks start on a Monday; the
        first week of the year contains the first Thursday of the year.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="64" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepickerBox_CalculateWeek'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="65" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'calculateWeek'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="74" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepickerBox_ChangeMonthYearEvent</name>
      <full_name>\QDatepickerBox_ChangeMonthYearEvent</full_name>
      <docblock line="68">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker moves
		to a new month and/or year.</description>
        <long-description>&lt;p&gt;The function receives the selected year, month
        (1-12), and the datepicker instance as parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;refers
        to the associated input field.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="75" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepickerBox_ChangeMonthYear'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'onChangeMonthYear'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="85" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepickerBox_CloseEvent</name>
      <full_name>\QDatepickerBox_CloseEvent</full_name>
      <docblock line="79">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker is
		closed, whether or not a date is selected.</description>
        <long-description>&lt;p&gt;The function receives the
        selected date as text (&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;""&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if none) and the datepicker instance
        as parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;refers to the associated input field.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="86" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepickerBox_Close'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="87" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'onClose'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="96" package="Default">
      <extends>\QJqUiPropertyEvent</extends>
      <name>QDatepickerBox_SelectEvent</name>
      <full_name>\QDatepickerBox_SelectEvent</full_name>
      <docblock line="90">
        <description>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker is
		selected.</description>
        <long-description>&lt;p&gt;The function receives the selected date as text and the
        datepicker instance as parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;refers to the
        associated input field.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="97" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'QDatepickerBox_Select'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="98" namespace="global" package="Default">
        <name>$strJqProperty</name>
        <default>'onSelect'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="295" package="Controls\Base">
      <extends>\QTextBox</extends>
      <name>QDatepickerBoxGen</name>
      <full_name>\QDatepickerBoxGen</full_name>
      <docblock line="102">
        <description>Generated QDatepickerBoxGen class.</description>
        <long-description>&lt;p&gt;This is the QDatepickerBoxGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QDatepickerBoxBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="102" name="see" description="\global\QDatepickerBoxBase" refers="\global\QDatepickerBoxBase"/>
        <tag line="102" name="package" description="Controls\Base"/>
        <tag line="102" name="property" description="An input element that is to be updated with the selected date from the&#10;&#9;&#9;datepicker. Use the &lt;a&gt;&lt;code&gt;altFormat&lt;/code&gt;&lt;/a&gt; option to change the&#10;&#9;&#9;format of the date within this field. Leave as blank for no alternate&#10;&#9;&#9;field." type="mixed" variable="$AltField">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="The &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; to be used for the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;altField&lt;/code&gt;&lt;/a&gt; option. This allows one date format to be&#10;&#9;&#9;shown to the user for selection purposes, while a different format is&#10;&#9;&#9;actually sent behind the scenes. For a full list of the possible formats&#10;&#9;&#9;see the [[UI/Datepicker/formatDate|formatDate]] function" type="string" variable="$AltFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="The text to display after each date field, e.g., to show the required&#10;&#9;&#9;format." type="string" variable="$AppendText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="Set to &lt;code&gt;true&lt;/code&gt; to automatically resize the input field to&#10;&#9;&#9;accommodate dates in the current &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt;." type="boolean" variable="$AutoSize">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;A function that takes an input&#10;&#9;&#9;field and current datepicker instance and returns an options object to&#10;&#9;&#9;update the datepicker with. It is called just before the datepicker is&#10;&#9;&#9;displayed." type="\QJsClosure" variable="$OnBeforeShow">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;A function takes a date as a&#10;&#9;&#9;parameter and must return an array with &lt;code&gt;[0]&lt;/code&gt; equal to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; indicating whether or not this date is&#10;&#9;&#9;selectable, &lt;code&gt;[1]&lt;/code&gt; equal to a CSS class name or &lt;code&gt;&quot;&quot;&lt;/code&gt;&#10;&#9;&#9;for the default presentation, and &lt;code&gt;[2]&lt;/code&gt; an optional popup&#10;&#9;&#9;tooltip for this date. It is called for each day in the datepicker before&#10;&#9;&#9;it is displayed." type="\QJsClosure" variable="$OnBeforeShowDay">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="The URL for the popup button image. If set, the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;buttonText&lt;/code&gt;&lt;/a&gt; option becomes the &lt;code&gt;alt&lt;/code&gt; value&#10;&#9;&#9;and is not directly displayed." type="string" variable="$ButtonImage">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="Whether the button image should be rendered by itself instead of inside a&#10;&#9;&#9;button element." type="boolean" variable="$ButtonImageOnly">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The text to display on the trigger button. Use in conjunction with the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;showOn&lt;/code&gt;&lt;/a&gt; option set to &lt;code&gt;&quot;button&quot;&lt;/code&gt; or&#10;&#9;&#9;&lt;code&gt;&quot;both&quot;&lt;/code&gt;." type="string" variable="$ButtonText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;jQuery.datepicker.iso8601Week&lt;/code&gt;A&#10;&#9;&#9;function to calculate the week of the year for a given date. The default&#10;&#9;&#9;implementation uses the ISO 8601 definition: weeks start on a Monday; the&#10;&#9;&#9;first week of the year contains the first Thursday of the year." type="\QJsClosure" variable="$OnCalculateWeek">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="Whether the month should be rendered as a dropdown instead of text." type="boolean" variable="$ChangeMonth">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="Whether the year should be rendered as a dropdown instead of text. Use the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;yearRange&lt;/code&gt;&lt;/a&gt; option to control which years are made&#10;&#9;&#9;available for selection." type="boolean" variable="$ChangeYear">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The text to display for the close link. Use the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;showButtonPanel&lt;/code&gt;&lt;/a&gt; option to display this button." type="string" variable="$CloseText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="When &lt;code&gt;true&lt;/code&gt;, entry in the input field is constrained to those&#10;&#9;&#9;characters allowed by the current &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option." type="boolean" variable="$ConstrainInput">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The text to display for the current day link. Use the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;showButtonPanel&lt;/code&gt;&lt;/a&gt; option to display this button." type="string" variable="$CurrentText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="The format for parsed and displayed dates. For a full list of the possible&#10;&#9;&#9;formats see the &lt;code&gt;[[UI/Datepicker/formatDate|formatDate]]&lt;/code&gt;&#10;&#9;&#9;function." type="string" variable="$JqDateFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="The list of long day names, starting from Sunday, for use as requested via&#10;&#9;&#9;the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option." type="array" variable="$DayNames">
          <type by_reference="false">array</type>
        </tag>
        <tag line="102" name="property" description="The list of minimised day names, starting from Sunday, for use as column&#10;&#9;&#9;headers within the datepicker." type="array" variable="$DayNamesMin">
          <type by_reference="false">array</type>
        </tag>
        <tag line="102" name="property" description="The list of abbreviated day names, starting from Sunday, for use as&#10;&#9;&#9;requested via the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option." type="array" variable="$DayNamesShort">
          <type by_reference="false">array</type>
        </tag>
        <tag line="102" name="property" description="Set the date to highlight on first opening if the field is blank. Specify&#10;&#9;&#9;either an actual date via a Date object or as a string in the current&#10;&#9;&#9;&lt;code&gt;[[UI/Datepicker#option-dateFormat|dateFormat]]&lt;/code&gt;, or a number of&#10;&#9;&#9;days from today (e.g. +7) or a string of values and periods ('y' for years,&#10;&#9;&#9;'m' for months, 'w' for weeks, 'd' for days, e.g. '+1m +7d'), or null for&#10;&#9;&#9;today.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Date&lt;/strong&gt;: A date object containing&#10;&#9;&#9;the default date.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: A number of days from&#10;&#9;&#9;today. For example &lt;code&gt;2&lt;/code&gt; represents two days from today and&#10;&#9;&#9;&lt;code&gt;-1&lt;/code&gt; represents yesterday.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A&#10;&#9;&#9;string in the format defined by the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option,&#10;&#9;&#9;or a relative date. Relative dates must contain value and period pairs;&#10;&#9;&#9;valid periods are &lt;code&gt;&quot;y&quot;&lt;/code&gt; for years, &lt;code&gt;&quot;m&quot;&lt;/code&gt; for months,&#10;&#9;&#9;&lt;code&gt;&quot;w&quot;&lt;/code&gt; for weeks, and &lt;code&gt;&quot;d&quot;&lt;/code&gt; for days. For example,&#10;&#9;&#9;&lt;code&gt;&quot;+1m +7d&quot;&lt;/code&gt; represents one month and seven days from&#10;&#9;&#9;today.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$DefaultDate">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="Control the speed at which the datepicker appears, it may be a time in&#10;&#9;&#9;milliseconds or a string representing one of the three predefined speeds&#10;&#9;&#9;(&quot;slow&quot;, &quot;normal&quot;, &quot;fast&quot;)." type="mixed" variable="$Duration">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="Set the first day of the week: Sunday is &lt;code&gt;0&lt;/code&gt;, Monday is&#10;&#9;&#9;&lt;code&gt;1&lt;/code&gt;, etc." type="integer" variable="$FirstDay">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="102" name="property" description="When &lt;code&gt;true&lt;/code&gt;, the current day link moves to the currently&#10;&#9;&#9;selected date instead of today." type="boolean" variable="$GotoCurrent">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="Normally the previous and next links are disabled when not applicable (see&#10;&#9;&#9;the &lt;a&gt;&lt;code&gt;minDate&lt;/code&gt;&lt;/a&gt; and &lt;a&gt;&lt;code&gt;maxDate&lt;/code&gt;&lt;/a&gt; options).&#10;&#9;&#9;You can hide them altogether by setting this attribute to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$HideIfNoPrevNext">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="Whether the current language is drawn from right to left." type="boolean" variable="$IsRTL">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The maximum selectable date. When set to &lt;code&gt;null&lt;/code&gt;, there is no&#10;&#9;&#9;maximum.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Date&lt;/strong&gt;: A date object containing&#10;&#9;&#9;the maximum date.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: A number of days from&#10;&#9;&#9;today. For example &lt;code&gt;2&lt;/code&gt; represents two days from today and&#10;&#9;&#9;&lt;code&gt;-1&lt;/code&gt; represents yesterday.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A&#10;&#9;&#9;string in the format defined by the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option,&#10;&#9;&#9;or a relative date. Relative dates must contain value and period pairs;&#10;&#9;&#9;valid periods are &lt;code&gt;&quot;y&quot;&lt;/code&gt; for years, &lt;code&gt;&quot;m&quot;&lt;/code&gt; for months,&#10;&#9;&#9;&lt;code&gt;&quot;w&quot;&lt;/code&gt; for weeks, and &lt;code&gt;&quot;d&quot;&lt;/code&gt; for days. For example,&#10;&#9;&#9;&lt;code&gt;&quot;+1m +7d&quot;&lt;/code&gt; represents one month and seven days from&#10;&#9;&#9;today.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$MaxDate">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="The minimum selectable date. When set to &lt;code&gt;null&lt;/code&gt;, there is no&#10;&#9;&#9;minimum.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Date&lt;/strong&gt;: A date object containing&#10;&#9;&#9;the minimum date.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: A number of days from&#10;&#9;&#9;today. For example &lt;code&gt;2&lt;/code&gt; represents two days from today and&#10;&#9;&#9;&lt;code&gt;-1&lt;/code&gt; represents yesterday.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A&#10;&#9;&#9;string in the format defined by the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option,&#10;&#9;&#9;or a relative date. Relative dates must contain value and period pairs;&#10;&#9;&#9;valid periods are &lt;code&gt;&quot;y&quot;&lt;/code&gt; for years, &lt;code&gt;&quot;m&quot;&lt;/code&gt; for months,&#10;&#9;&#9;&lt;code&gt;&quot;w&quot;&lt;/code&gt; for weeks, and &lt;code&gt;&quot;d&quot;&lt;/code&gt; for days. For example,&#10;&#9;&#9;&lt;code&gt;&quot;+1m +7d&quot;&lt;/code&gt; represents one month and seven days from&#10;&#9;&#9;today.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$MinDate">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="The list of full month names, for use as requested via the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option." type="array" variable="$MonthNames">
          <type by_reference="false">array</type>
        </tag>
        <tag line="102" name="property" description="The list of abbreviated month names, as used in the month header on each&#10;&#9;&#9;datepicker and as requested via the &lt;a&gt;&lt;code&gt;dateFormat&lt;/code&gt;&lt;/a&gt; option." type="array" variable="$MonthNamesShort">
          <type by_reference="false">array</type>
        </tag>
        <tag line="102" name="property" description="Whether the &lt;a&gt;&lt;code&gt;prevText&lt;/code&gt;&lt;/a&gt; and &lt;a&gt;&lt;code&gt;nextText&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;options should be parsed as dates by the&#10;&#9;&#9;&lt;code&gt;[[UI/Datepicker/formatDate|formatDate]]&lt;/code&gt; function, allowing&#10;&#9;&#9;them to display the target month names for example." type="boolean" variable="$NavigationAsDateFormat">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The text to display for the next month link. With the standard ThemeRoller&#10;&#9;&#9;styling, this value is replaced by an icon." type="string" variable="$NextText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="The number of months to show at once.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: The number of months to&#10;&#9;&#9;display in a single row.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Array&lt;/strong&gt;: An array defining&#10;&#9;&#9;the number of rows and columns to display.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$NumberOfMonths">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker moves&#10;&#9;&#9;to a new month and/or year. The function receives the selected year, month&#10;&#9;&#9;(1-12), and the datepicker instance as parameters. &lt;code&gt;this&lt;/code&gt; refers&#10;&#9;&#9;to the associated input field." type="\QJsClosure" variable="$OnChangeMonthYear">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker is&#10;&#9;&#9;closed, whether or not a date is selected. The function receives the&#10;&#9;&#9;selected date as text (&lt;code&gt;&quot;&quot;&lt;/code&gt; if none) and the datepicker instance&#10;&#9;&#9;as parameters. &lt;code&gt;this&lt;/code&gt; refers to the associated input field." type="\QJsClosure" variable="$OnClose">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt;Called when the datepicker is&#10;&#9;&#9;selected. The function receives the selected date as text and the&#10;&#9;&#9;datepicker instance as parameters. &lt;code&gt;this&lt;/code&gt; refers to the&#10;&#9;&#9;associated input field." type="\QJsClosure" variable="$OnSelect">
          <type by_reference="false">\QJsClosure</type>
        </tag>
        <tag line="102" name="property" description="The text to display for the previous month link. With the standard&#10;&#9;&#9;ThemeRoller styling, this value is replaced by an icon." type="string" variable="$PrevText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="Whether days in other months shown before or after the current month are&#10;&#9;&#9;selectable. This only applies if the &lt;a&gt;&lt;code&gt;showOtherMonths&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option is set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$SelectOtherMonths">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="The cutoff year for determining the century for a date (used in conjunction&#10;&#9;&#9;with &lt;code&gt;[[UI/Datepicker#option-dateFormat|dateFormat]]&lt;/code&gt; 'y'). Any&#10;&#9;&#9;dates entered with a year value less than or equal to the cutoff year are&#10;&#9;&#9;considered to be in the current century, while those greater than it are&#10;&#9;&#9;deemed to be in the previous century.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: A value between&#10;&#9;&#9;&lt;code&gt;0&lt;/code&gt; and &lt;code&gt;99&lt;/code&gt; indicating the cutoff year.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A relative number of years from the current&#10;&#9;&#9;year, e.g., &lt;code&gt;&quot;+3&quot;&lt;/code&gt; or &lt;code&gt;&quot;-5&quot;&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$ShortYearCutoff">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="The name of the animation used to show and hide the datepicker. Use&#10;&#9;&#9;&lt;code&gt;&quot;show&quot;&lt;/code&gt; (the default), &lt;code&gt;&quot;slideDown&quot;&lt;/code&gt;,&#10;&#9;&#9;&lt;code&gt;&quot;fadeIn&quot;&lt;/code&gt;, any of the &lt;a&gt;jQuery UI effects&lt;/a&gt;. Set to an empty&#10;&#9;&#9;string to disable animation." type="string" variable="$ShowAnim">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="Whether to show the button panel." type="boolean" variable="$ShowButtonPanel">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="When displaying multiple months via the &lt;a&gt;&lt;code&gt;numberOfMonths&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option, the &lt;code&gt;showCurrentAtPos&lt;/code&gt; option defines which position to&#10;&#9;&#9;display the current month in." type="integer" variable="$ShowCurrentAtPos">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="102" name="property" description="Whether to show the month after the year in the header." type="boolean" variable="$ShowMonthAfterYear">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="When the datepicker should appear. The datepicker can appear when the field&#10;&#9;&#9;receives focus (&lt;code&gt;&quot;focus&quot;&lt;/code&gt;), when a button is clicked&#10;&#9;&#9;(&lt;code&gt;&quot;button&quot;&lt;/code&gt;), or when either event occurs (&lt;code&gt;&quot;both&quot;&lt;/code&gt;)." type="string" variable="$ShowOn">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="If using one of the jQuery UI effects for the &lt;a&gt;&lt;code&gt;showAnim&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option, you can provide additional settings for that animation via this&#10;&#9;&#9;option." type="mixed" variable="$ShowOptions">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="102" name="property" description="Whether to display dates in other months (non-selectable) at the start or&#10;&#9;&#9;end of the current month. To make these days selectable use the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;selectOtherMonths&lt;/code&gt;&lt;/a&gt; option." type="boolean" variable="$ShowOtherMonths">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="When &lt;code&gt;true&lt;/code&gt;, a column is added to show the week of the year. The&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;calculateWeek&lt;/code&gt;&lt;/a&gt; option determines how the week of the&#10;&#9;&#9;year is calculated. You may also want to change the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;firstDay&lt;/code&gt;&lt;/a&gt; option." type="boolean" variable="$ShowWeek">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="102" name="property" description="Set how many months to move when clicking the previous/next links." type="integer" variable="$StepMonths">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="102" name="property" description="The text to display for the week of the year column heading. Use the&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;showWeek&lt;/code&gt;&lt;/a&gt; option to display this column." type="string" variable="$WeekHeader">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="The range of years displayed in the year drop-down: either relative to&#10;&#9;&#9;today's year (&lt;code&gt;&quot;-nn:+nn&quot;&lt;/code&gt;), relative to the currently selected&#10;&#9;&#9;year (&lt;code&gt;&quot;c-nn:c+nn&quot;&lt;/code&gt;), absolute (&lt;code&gt;&quot;nnnn:nnnn&quot;&lt;/code&gt;), or&#10;&#9;&#9;combinations of these formats (&lt;code&gt;&quot;nnnn:-nn&quot;&lt;/code&gt;). Note that this&#10;&#9;&#9;option only affects what appears in the drop-down, to restrict which dates&#10;&#9;&#9;may be selected use the &lt;a&gt;&lt;code&gt;minDate&lt;/code&gt;&lt;/a&gt; and/or&#10;&#9;&#9;&lt;a&gt;&lt;code&gt;maxDate&lt;/code&gt;&lt;/a&gt; options." type="string" variable="$YearRange">
          <type by_reference="false">string</type>
        </tag>
        <tag line="102" name="property" description="Additional text to display after the year in the month headers." type="string" variable="$YearSuffix">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="296" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="297" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="299" namespace="global" package="Default">
        <name>$mixAltField</name>
        <default>null</default>
        <docblock line="298">
          <description/>
          <long-description/>
          <tag line="298" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="301" namespace="global" package="Default">
        <name>$strAltFormat</name>
        <default>null</default>
        <docblock line="300">
          <description/>
          <long-description/>
          <tag line="300" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="303" namespace="global" package="Default">
        <name>$strAppendText</name>
        <default>null</default>
        <docblock line="302">
          <description/>
          <long-description/>
          <tag line="302" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="305" namespace="global" package="Default">
        <name>$blnAutoSize</name>
        <default>null</default>
        <docblock line="304">
          <description/>
          <long-description/>
          <tag line="304" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="307" namespace="global" package="Default">
        <name>$mixOnBeforeShow</name>
        <default>null</default>
        <docblock line="306">
          <description/>
          <long-description/>
          <tag line="306" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="309" namespace="global" package="Default">
        <name>$mixOnBeforeShowDay</name>
        <default>null</default>
        <docblock line="308">
          <description/>
          <long-description/>
          <tag line="308" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="311" namespace="global" package="Default">
        <name>$strButtonImage</name>
        <default>null</default>
        <docblock line="310">
          <description/>
          <long-description/>
          <tag line="310" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="313" namespace="global" package="Default">
        <name>$blnButtonImageOnly</name>
        <default>null</default>
        <docblock line="312">
          <description/>
          <long-description/>
          <tag line="312" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="315" namespace="global" package="Default">
        <name>$strButtonText</name>
        <default>null</default>
        <docblock line="314">
          <description/>
          <long-description/>
          <tag line="314" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="317" namespace="global" package="Default">
        <name>$mixOnCalculateWeek</name>
        <default>null</default>
        <docblock line="316">
          <description/>
          <long-description/>
          <tag line="316" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="319" namespace="global" package="Default">
        <name>$blnChangeMonth</name>
        <default>null</default>
        <docblock line="318">
          <description/>
          <long-description/>
          <tag line="318" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="321" namespace="global" package="Default">
        <name>$blnChangeYear</name>
        <default>null</default>
        <docblock line="320">
          <description/>
          <long-description/>
          <tag line="320" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="323" namespace="global" package="Default">
        <name>$strCloseText</name>
        <default>null</default>
        <docblock line="322">
          <description/>
          <long-description/>
          <tag line="322" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="325" namespace="global" package="Default">
        <name>$blnConstrainInput</name>
        <default>null</default>
        <docblock line="324">
          <description/>
          <long-description/>
          <tag line="324" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="327" namespace="global" package="Default">
        <name>$strCurrentText</name>
        <default>null</default>
        <docblock line="326">
          <description/>
          <long-description/>
          <tag line="326" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="329" namespace="global" package="Default">
        <name>$strJqDateFormat</name>
        <default>null</default>
        <docblock line="328">
          <description/>
          <long-description/>
          <tag line="328" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="331" namespace="global" package="Default">
        <name>$arrDayNames</name>
        <default>null</default>
        <docblock line="330">
          <description/>
          <long-description/>
          <tag line="330" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="333" namespace="global" package="Default">
        <name>$arrDayNamesMin</name>
        <default>null</default>
        <docblock line="332">
          <description/>
          <long-description/>
          <tag line="332" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="335" namespace="global" package="Default">
        <name>$arrDayNamesShort</name>
        <default>null</default>
        <docblock line="334">
          <description/>
          <long-description/>
          <tag line="334" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="337" namespace="global" package="Default">
        <name>$mixDefaultDate</name>
        <default>null</default>
        <docblock line="336">
          <description/>
          <long-description/>
          <tag line="336" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="339" namespace="global" package="Default">
        <name>$mixDuration</name>
        <default>null</default>
        <docblock line="338">
          <description/>
          <long-description/>
          <tag line="338" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="341" namespace="global" package="Default">
        <name>$intFirstDay</name>
        <default/>
        <docblock line="340">
          <description/>
          <long-description/>
          <tag line="340" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="343" namespace="global" package="Default">
        <name>$blnGotoCurrent</name>
        <default>null</default>
        <docblock line="342">
          <description/>
          <long-description/>
          <tag line="342" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="345" namespace="global" package="Default">
        <name>$blnHideIfNoPrevNext</name>
        <default>null</default>
        <docblock line="344">
          <description/>
          <long-description/>
          <tag line="344" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="347" namespace="global" package="Default">
        <name>$blnIsRTL</name>
        <default>null</default>
        <docblock line="346">
          <description/>
          <long-description/>
          <tag line="346" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="349" namespace="global" package="Default">
        <name>$mixMaxDate</name>
        <default>null</default>
        <docblock line="348">
          <description/>
          <long-description/>
          <tag line="348" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="351" namespace="global" package="Default">
        <name>$mixMinDate</name>
        <default>null</default>
        <docblock line="350">
          <description/>
          <long-description/>
          <tag line="350" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="353" namespace="global" package="Default">
        <name>$arrMonthNames</name>
        <default>null</default>
        <docblock line="352">
          <description/>
          <long-description/>
          <tag line="352" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="355" namespace="global" package="Default">
        <name>$arrMonthNamesShort</name>
        <default>null</default>
        <docblock line="354">
          <description/>
          <long-description/>
          <tag line="354" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="357" namespace="global" package="Default">
        <name>$blnNavigationAsDateFormat</name>
        <default>null</default>
        <docblock line="356">
          <description/>
          <long-description/>
          <tag line="356" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="359" namespace="global" package="Default">
        <name>$strNextText</name>
        <default>null</default>
        <docblock line="358">
          <description/>
          <long-description/>
          <tag line="358" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="361" namespace="global" package="Default">
        <name>$mixNumberOfMonths</name>
        <default>null</default>
        <docblock line="360">
          <description/>
          <long-description/>
          <tag line="360" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="363" namespace="global" package="Default">
        <name>$mixOnChangeMonthYear</name>
        <default>null</default>
        <docblock line="362">
          <description/>
          <long-description/>
          <tag line="362" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="365" namespace="global" package="Default">
        <name>$mixOnClose</name>
        <default>null</default>
        <docblock line="364">
          <description/>
          <long-description/>
          <tag line="364" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="367" namespace="global" package="Default">
        <name>$mixOnSelect</name>
        <default>null</default>
        <docblock line="366">
          <description/>
          <long-description/>
          <tag line="366" name="var" description="" type="\QJsClosure">
            <type by_reference="false">\QJsClosure</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="369" namespace="global" package="Default">
        <name>$strPrevText</name>
        <default>null</default>
        <docblock line="368">
          <description/>
          <long-description/>
          <tag line="368" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="371" namespace="global" package="Default">
        <name>$blnSelectOtherMonths</name>
        <default>null</default>
        <docblock line="370">
          <description/>
          <long-description/>
          <tag line="370" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="373" namespace="global" package="Default">
        <name>$mixShortYearCutoff</name>
        <default>null</default>
        <docblock line="372">
          <description/>
          <long-description/>
          <tag line="372" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="375" namespace="global" package="Default">
        <name>$strShowAnim</name>
        <default>null</default>
        <docblock line="374">
          <description/>
          <long-description/>
          <tag line="374" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="377" namespace="global" package="Default">
        <name>$blnShowButtonPanel</name>
        <default>null</default>
        <docblock line="376">
          <description/>
          <long-description/>
          <tag line="376" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="379" namespace="global" package="Default">
        <name>$intShowCurrentAtPos</name>
        <default/>
        <docblock line="378">
          <description/>
          <long-description/>
          <tag line="378" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="381" namespace="global" package="Default">
        <name>$blnShowMonthAfterYear</name>
        <default>null</default>
        <docblock line="380">
          <description/>
          <long-description/>
          <tag line="380" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="383" namespace="global" package="Default">
        <name>$strShowOn</name>
        <default>null</default>
        <docblock line="382">
          <description/>
          <long-description/>
          <tag line="382" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="385" namespace="global" package="Default">
        <name>$mixShowOptions</name>
        <default>null</default>
        <docblock line="384">
          <description/>
          <long-description/>
          <tag line="384" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="387" namespace="global" package="Default">
        <name>$blnShowOtherMonths</name>
        <default>null</default>
        <docblock line="386">
          <description/>
          <long-description/>
          <tag line="386" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="389" namespace="global" package="Default">
        <name>$blnShowWeek</name>
        <default>null</default>
        <docblock line="388">
          <description/>
          <long-description/>
          <tag line="388" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="391" namespace="global" package="Default">
        <name>$intStepMonths</name>
        <default>null</default>
        <docblock line="390">
          <description/>
          <long-description/>
          <tag line="390" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="393" namespace="global" package="Default">
        <name>$strWeekHeader</name>
        <default>null</default>
        <docblock line="392">
          <description/>
          <long-description/>
          <tag line="392" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="395" namespace="global" package="Default">
        <name>$strYearRange</name>
        <default>null</default>
        <docblock line="394">
          <description/>
          <long-description/>
          <tag line="394" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="397" namespace="global" package="Default">
        <name>$strYearSuffix</name>
        <default>null</default>
        <docblock line="396">
          <description/>
          <long-description/>
          <tag line="396" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="399" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="399">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="399">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="408" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="464" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="468" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="472" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="492" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="483">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="483" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="483" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="483" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="492">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="509" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="504">
          <description>Removes the datepicker functionality completely.</description>
          <long-description>&lt;p&gt;This will return the
element back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="528" package="Controls\Base">
        <name>Dialog</name>
        <full_name>Dialog</full_name>
        <docblock line="512">
          <description>Opens the datepicker in a dialog box.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;date&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; or &lt;a&gt;Date&lt;/a&gt; The initial date.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;onSelect&lt;/strong&gt; Type: &lt;a&gt;Function&lt;/a&gt;() A callback function
when a date is selected.</description>
          <long-description>&lt;p&gt;The function receives the date text and date
picker instance as parameters.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;settings&lt;/strong&gt; Type:
&lt;a&gt;Options&lt;/a&gt; The new settings for the date picker.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pos&lt;/strong&gt; Type: &lt;a&gt;Number[2] or MouseEvent&lt;/a&gt; The position
of the top/left of the dialog as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[x, y]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or a&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;that contains the coordinates. If not specified the
dialog is centered on the screen.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</long-description>
          <tag line="512" name="param" description="" type="\" variable="$date"/>
          <tag line="512" name="param" description="" type="\" variable="$onSelect"/>
          <tag line="512" name="param" description="" type="\" variable="$settings"/>
          <tag line="512" name="param" description="" type="\" variable="$pos"/>
        </docblock>
        <argument line="528">
          <name>$date</name>
          <default/>
          <type/>
        </argument>
        <argument line="528">
          <name>$onSelect</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="528">
          <name>$settings</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="528">
          <name>$pos</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="536" package="Controls\Base">
        <name>GetDate</name>
        <full_name>GetDate</full_name>
        <docblock line="531">
          <description>Returns the current date for the datepicker or &lt;code&gt;null&lt;/code&gt; if no date
has been selected.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="543" package="Controls\Base">
        <name>Hide</name>
        <full_name>Hide</full_name>
        <docblock line="539">
          <description>Close a previously opened date picker.&lt;ul&gt;&lt;li&gt;This method does not accept
any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="550" package="Controls\Base">
        <name>IsDisabled</name>
        <full_name>IsDisabled</full_name>
        <docblock line="546">
          <description>Determine whether a date picker has been disabled.&lt;ul&gt;&lt;li&gt;This method does
not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="559" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="553">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="553" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="559">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="567" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="562">
          <description>Gets an object containing key/value pairs representing the current
datepicker options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="579" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="570">
          <description>Sets the value of the datepicker option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="570" name="param" description="" type="\" variable="$optionName"/>
          <tag line="570" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="579">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="579">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="588" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="582">
          <description>Sets one or more options for the
datepicker.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A map of
option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="582" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="588">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="595" package="Controls\Base">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="591">
          <description>Redraw the date picker, after having made some external
modifications.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="609" package="Controls\Base">
        <name>SetDate</name>
        <full_name>SetDate</full_name>
        <docblock line="598">
          <description>Sets the date for the datepicker.</description>
          <long-description>&lt;p&gt;The new date may be a&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;object or a string in the current &lt;a&gt;date format&lt;/a&gt; (e.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"01/26/2009"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;), a number of days from today (e.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+7&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;) or a string of values and periods (&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"y"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for
years,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"m"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for months,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"w"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for weeks,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"d"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for days, e.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"+1m +7d"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;), or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;null&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to clear the selected date.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;date&lt;/strong&gt;
Type: &lt;a&gt;String&lt;/a&gt; or &lt;a&gt;Date&lt;/a&gt; The new date.&lt;/li&gt;&lt;/ul&gt;</long-description>
          <tag line="598" name="param" description="" type="\" variable="$date"/>
        </docblock>
        <argument line="609">
          <name>$date</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="617" package="Controls\Base">
        <name>Show</name>
        <full_name>Show</full_name>
        <docblock line="612">
          <description>Open the date picker.</description>
          <long-description>&lt;p&gt;If the datepicker is attached to an input, the input
must be visible for the datepicker to be shown.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not
accept any arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="622" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="622">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="684" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="684">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="684">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="40" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="54" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="65" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="76" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="87" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="98" code="50018">No DocBlock was found for property $strJqProperty</error>
      <error line="296" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="297" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="298" code="50019">No short description for property $mixAltField</critical>
      <critical line="300" code="50019">No short description for property $strAltFormat</critical>
      <critical line="302" code="50019">No short description for property $strAppendText</critical>
      <critical line="304" code="50019">No short description for property $blnAutoSize</critical>
      <critical line="306" code="50019">No short description for property $mixOnBeforeShow</critical>
      <critical line="308" code="50019">No short description for property $mixOnBeforeShowDay</critical>
      <critical line="310" code="50019">No short description for property $strButtonImage</critical>
      <critical line="312" code="50019">No short description for property $blnButtonImageOnly</critical>
      <critical line="314" code="50019">No short description for property $strButtonText</critical>
      <critical line="316" code="50019">No short description for property $mixOnCalculateWeek</critical>
      <critical line="318" code="50019">No short description for property $blnChangeMonth</critical>
      <critical line="320" code="50019">No short description for property $blnChangeYear</critical>
      <critical line="322" code="50019">No short description for property $strCloseText</critical>
      <critical line="324" code="50019">No short description for property $blnConstrainInput</critical>
      <critical line="326" code="50019">No short description for property $strCurrentText</critical>
      <critical line="328" code="50019">No short description for property $strJqDateFormat</critical>
      <critical line="330" code="50019">No short description for property $arrDayNames</critical>
      <critical line="332" code="50019">No short description for property $arrDayNamesMin</critical>
      <critical line="334" code="50019">No short description for property $arrDayNamesShort</critical>
      <critical line="336" code="50019">No short description for property $mixDefaultDate</critical>
      <critical line="338" code="50019">No short description for property $mixDuration</critical>
      <critical line="340" code="50019">No short description for property $intFirstDay</critical>
      <critical line="342" code="50019">No short description for property $blnGotoCurrent</critical>
      <critical line="344" code="50019">No short description for property $blnHideIfNoPrevNext</critical>
      <critical line="346" code="50019">No short description for property $blnIsRTL</critical>
      <critical line="348" code="50019">No short description for property $mixMaxDate</critical>
      <critical line="350" code="50019">No short description for property $mixMinDate</critical>
      <critical line="352" code="50019">No short description for property $arrMonthNames</critical>
      <critical line="354" code="50019">No short description for property $arrMonthNamesShort</critical>
      <critical line="356" code="50019">No short description for property $blnNavigationAsDateFormat</critical>
      <critical line="358" code="50019">No short description for property $strNextText</critical>
      <critical line="360" code="50019">No short description for property $mixNumberOfMonths</critical>
      <critical line="362" code="50019">No short description for property $mixOnChangeMonthYear</critical>
      <critical line="364" code="50019">No short description for property $mixOnClose</critical>
      <critical line="366" code="50019">No short description for property $mixOnSelect</critical>
      <critical line="368" code="50019">No short description for property $strPrevText</critical>
      <critical line="370" code="50019">No short description for property $blnSelectOtherMonths</critical>
      <critical line="372" code="50019">No short description for property $mixShortYearCutoff</critical>
      <critical line="374" code="50019">No short description for property $strShowAnim</critical>
      <critical line="376" code="50019">No short description for property $blnShowButtonPanel</critical>
      <critical line="378" code="50019">No short description for property $intShowCurrentAtPos</critical>
      <critical line="380" code="50019">No short description for property $blnShowMonthAfterYear</critical>
      <critical line="382" code="50019">No short description for property $strShowOn</critical>
      <critical line="384" code="50019">No short description for property $mixShowOptions</critical>
      <critical line="386" code="50019">No short description for property $blnShowOtherMonths</critical>
      <critical line="388" code="50019">No short description for property $blnShowWeek</critical>
      <critical line="390" code="50019">No short description for property $intStepMonths</critical>
      <critical line="392" code="50019">No short description for property $strWeekHeader</critical>
      <critical line="394" code="50019">No short description for property $strYearRange</critical>
      <critical line="396" code="50019">No short description for property $strYearSuffix</critical>
      <error line="399" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="408" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="464" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="468" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="472" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="622" code="50010">No DocBlock was found for method __get()</error>
      <error line="684" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QResizableBase.class.php" hash="4b4ac24b2fb04824ad5d4c9fb727ffea" package="Default">
    <docblock line="2">
      <description>Resizable Base Control</description>
      <long-description>&lt;p&gt;The QResizableBase class defined here provides an interface between the generated
QResizableGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QResizable.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="25" package="Controls\Base">
      <extends>\QResizableGen</extends>
      <name>QResizableBase</name>
      <full_name>\QResizableBase</full_name>
      <docblock line="11">
        <description>Implements the JQuery UI Resizable capabilities into a QControl</description>
        <long-description>&lt;p&gt;This class is designed to work as a kind of add-on class to a QControl, giving its capabilities
to the control. To make a QControl resizable, simply set $ctl-&gt;Resizable = true. You can then
get to this class to further manipulate the aspects of the resizable through $ctl-&gt;ResizeObj.&lt;/p&gt;</long-description>
        <tag line="11" name="property-read" description="Amount of change in width that happened on the last drag" type="Integer" variable="$DeltaX">
          <type by_reference="false">Integer</type>
        </tag>
        <tag line="11" name="property-read" description="Amount of change in height that happened on the last drag" type="Integer" variable="$DeltaY">
          <type by_reference="false">Integer</type>
        </tag>
        <tag line="11" name="link" description="http://jqueryui.com/resizable/" link="http://jqueryui.com/resizable/"/>
        <tag line="11" name="package" description="Controls\Base"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$aryOriginalSize</name>
        <default>null</default>
        <docblock line="27">
          <description/>
          <long-description/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$aryNewSize</name>
        <default>null</default>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Controls\Base">
        <name>getJqControlId</name>
        <full_name>getJqControlId</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Controls\Base">
        <name>Render</name>
        <full_name>Render</full_name>
        <argument line="37">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="38" package="Controls\Base">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Controls\Base">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Controls\Base">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="63">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="95" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="95">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="27" code="50019">No short description for property $aryOriginalSize</critical>
      <critical line="29" code="50019">No short description for property $aryNewSize</critical>
      <error line="33" code="50010">No DocBlock was found for method getJqControlId()</error>
      <error line="37" code="50010">No DocBlock was found for method Render()</error>
      <error line="38" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="39" code="50010">No DocBlock was found for method Validate()</error>
      <error line="40" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="45" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="63" code="50010">No DocBlock was found for method __set()</error>
      <error line="95" code="50010">No DocBlock was found for method __get()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QNumericTextBox.class.php" hash="b1f34a6ebfe63625f9015bd2cac7e6b8" package="Controls">
    <docblock line="2">
      <description>This file contains the QNumericTextBox class</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="25" package="Controls">
      <extends>\QTextBox</extends>
      <name>QNumericTextBox</name>
      <full_name>\QNumericTextBox</full_name>
      <docblock line="9">
        <description>A subclass of TextBox with its validate method overridden -- Validate will also ensure
that the Text is a valid integer/float and (if applicable) is in the range of Minimum &lt;= x &lt;= Maximum.</description>
        <long-description>&lt;p&gt;This class is abstract. QIntegerTextBox and QFloatTextBox are derived from it.&lt;/p&gt;</long-description>
        <tag line="9" name="package" description="Controls"/>
        <tag line="9" name="property" description="(optional) is the maximum value the integer/float can be" type="mixed" variable="$Maximum">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="9" name="property" description="(optional) is the minimum value the integer/float can be" type="mixed" variable="$Minimum">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="9" name="property" description="(optional) is the step interval for allowed values ( beginning from $Minimum if set)" type="mixed" variable="$Step">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="9" name="property" description="Text to show when the input is invalid" type="string" variable="$LabelForInvalid">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property" description="Text to show when the input is greater than the allowed value" type="string" variable="$LabelForGreater">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property" description="Text to show when the input is lesser than the minimum allowed value" type="string" variable="$LabelForLess">
          <type by_reference="false">string</type>
        </tag>
        <tag line="9" name="property" description="set this property to show an error message if the entered value is not step-aligned&#10;                         if not set the value is changed to the next step-aligned value (no error)" type="string" variable="$LabelForNotStepAligned">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$strDataType</name>
        <default>null</default>
        <docblock line="31">
          <description/>
          <long-description/>
          <tag line="31" name="var" description="Data type of the input (float|integer)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$mixMaximum</name>
        <default>null</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="Maximum allowed Value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$mixMinimum</name>
        <default>null</default>
        <docblock line="36">
          <description/>
          <long-description/>
          <tag line="36" name="var" description="Minimum allowed value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$mixStep</name>
        <default>null</default>
        <docblock line="38">
          <description/>
          <long-description/>
          <tag line="38" name="var" description="Float or Integer value, the multiple of which the input must be" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="global" package="Default">
        <name>$strLabelForInvalid</name>
        <default/>
        <docblock line="41">
          <description/>
          <long-description/>
          <tag line="41" name="var" description="The text to show when the value is invalid" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$strLabelForLess</name>
        <default/>
        <docblock line="43">
          <description/>
          <long-description/>
          <tag line="43" name="var" description="Text to show when the input value is less than minimum allowed value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="global" package="Default">
        <name>$strLabelForGreater</name>
        <default/>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="Text to show when the input value is greater than the maximum allowed value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$strLabelForNotStepAligned</name>
        <default>null</default>
        <docblock line="47">
          <description/>
          <long-description/>
          <tag line="47" name="var" description="Text to show when the input value is not step aligned" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="53">
          <description>Constructor for the control</description>
          <long-description/>
          <tag line="53" name="param" description="" type="\QControl|\QForm" variable="$objParentObject">
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
          </tag>
          <tag line="53" name="param" description="" type="null|string" variable="$strControlId">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="67">
          <description/>
          <long-description/>
          <tag line="67" name="return" description="whether or not the input passed all the values" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="118">
          <description>PHP __get magic method implementation</description>
          <long-description/>
          <tag line="118" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="return" description="" type="array|bool|int|mixed|null|\QControl|\QForm|string">
            <type by_reference="false">array</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">int</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">\QForm</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="164" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="156">
          <description>PHP __set magic method implementation</description>
          <long-description/>
          <tag line="156" name="param" description="Property Name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="Property value" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="156" name="throws" description="" type="\Exception|\QInvalidCastException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="164">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="67" code="50012">No short description for method Validate()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QJqRadioButtonGen.class.php" hash="d61232f2386fc231f0a68b094ad7512b" package="Default">
    <docblock line="2">
      <description>QJqRadioButtonGen File</description>
      <long-description>&lt;p&gt;The abstract QJqRadioButtonGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QJqRadioButtonBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QJqRadioButton class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="36" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QJqRadioButton_CreateEvent</name>
      <full_name>\QJqRadioButton_CreateEvent</full_name>
      <docblock line="30">
        <description>Triggered when the button is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="37" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'buttoncreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="72" package="Controls\Base">
      <extends>\QRadioButton</extends>
      <name>QJqRadioButtonGen</name>
      <full_name>\QJqRadioButtonGen</full_name>
      <docblock line="42">
        <description>Generated QJqRadioButtonGen class.</description>
        <long-description>&lt;p&gt;This is the QJqRadioButtonGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QJqRadioButtonBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="42" name="see" description="\global\QJqRadioButtonBase" refers="\global\QJqRadioButtonBase"/>
        <tag line="42" name="package" description="Controls\Base"/>
        <tag line="42" name="property" description="Disables the button if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="42" name="property" description="Icons to display, with or without text (see &lt;a&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt;&#10;&#9;&#9;option). By default, the primary icon is displayed on the left of the label&#10;&#9;&#9;text and the secondary is displayed on the right. The positioning can be&#10;&#9;&#9;controlled via CSS. The value for the &lt;code&gt;primary&lt;/code&gt; and&#10;&#9;&#9;&lt;code&gt;secondary&lt;/code&gt; properties must be a class name, e.g.,&#10;&#9;&#9;&lt;code&gt;&quot;ui-icon-gear&quot;&lt;/code&gt;. For using only one icon: &lt;code&gt;icons: {&#10;&#9;&#9;primary: &quot;ui-icon-locked&quot; }&lt;/code&gt;. For using two icons: &lt;code&gt;icons: {&#10;&#9;&#9;primary: &quot;ui-icon-gear&quot;, secondary: &quot;ui-icon-triangle-1-s&quot; }&lt;/code&gt;." type="mixed" variable="$Icons">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="42" name="property" description="Text to show in the button. When not specified (&lt;code&gt;null&lt;/code&gt;), the&#10;&#9;&#9;element's HTML content is used, or its &lt;code&gt;value&lt;/code&gt; attribute if the&#10;&#9;&#9;element is an input element of type submit or reset, or the HTML content of&#10;&#9;&#9;the associated label element if the element is an input of type radio or&#10;&#9;&#9;checkbox." type="string" variable="$Label">
          <type by_reference="false">string</type>
        </tag>
        <tag line="42" name="property" description="Whether to show the label. When set to &lt;code&gt;false&lt;/code&gt; no text will be&#10;&#9;&#9;displayed, but the &lt;a&gt;&lt;code&gt;icons&lt;/code&gt;&lt;/a&gt; option must be enabled,&#10;&#9;&#9;otherwise the &lt;code&gt;text&lt;/code&gt; option will be ignored." type="boolean" variable="$JqText">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="73" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="74" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="76" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="75">
          <description/>
          <long-description/>
          <tag line="75" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" namespace="global" package="Default">
        <name>$mixIcons</name>
        <default>null</default>
        <docblock line="77">
          <description/>
          <long-description/>
          <tag line="77" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="80" namespace="global" package="Default">
        <name>$strLabel</name>
        <default>null</default>
        <docblock line="79">
          <description/>
          <long-description/>
          <tag line="79" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="82" namespace="global" package="Default">
        <name>$blnJqText</name>
        <default>null</default>
        <docblock line="81">
          <description/>
          <long-description/>
          <tag line="81" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="84" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="84">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="93" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="131" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="122">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="122" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="122" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="131">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="143">
          <description>Removes the button functionality completely.</description>
          <long-description>&lt;p&gt;This will return the element
back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="151">
          <description>Disables the button.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="158">
          <description>Enables the button.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="165">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="165" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="171">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="174">
          <description>Gets an object containing key/value pairs representing the current button
options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="190" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="181">
          <description>Sets the value of the button option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="181" name="param" description="" type="\" variable="$optionName"/>
          <tag line="181" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="190">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="190">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="193">
          <description>Sets one or more options for the button.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="193" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="198">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="207" package="Controls\Base">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="201">
          <description>Refreshes the visual state of the button.</description>
          <long-description>&lt;p&gt;Useful for updating button state
after the native element's checked or disabled state is changed
programmatically.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="212" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="212">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="228" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="228">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="228">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="73" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="74" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="75" code="50019">No short description for property $blnDisabled</critical>
      <critical line="77" code="50019">No short description for property $mixIcons</critical>
      <critical line="79" code="50019">No short description for property $strLabel</critical>
      <critical line="81" code="50019">No short description for property $blnJqText</critical>
      <error line="84" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="93" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="103" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="107" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="111" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="212" code="50010">No DocBlock was found for method __get()</error>
      <error line="228" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDatepickerBase.class.php" hash="1e39984d1f0248e5adc7289536519b76" package="Default">
    <docblock line="2">
      <description>Datepicker Base File</description>
      <long-description>&lt;p&gt;The QDatepickerBase class defined here provides an interface between the generated
QDatepickerGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QDatepicker.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="Controls\Base">
      <extends>\QDatepickerGen</extends>
      <name>QDatepickerBase</name>
      <full_name>\QDatepickerBase</full_name>
      <docblock line="11">
        <description>Impelements a JQuery UI Datepicker</description>
        <long-description>&lt;p&gt;A Datepicker is a field that is designed to just allow dates, and to popup a calendar for picking dates.&lt;/p&gt;</long-description>
        <tag line="11" name="property" description="The format to use for displaying the date in the field" type="string" variable="$DateFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="11" name="property" description="Alias for DateFormat" type="string" variable="$DateTimeFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="11" name="property" description="The date to set the field to" type="\QDateTime" variable="$DateTime">
          <type by_reference="false">\QDateTime</type>
        </tag>
        <tag line="11" name="property" description="Alias for MinDate" type="mixed" variable="$Minimum">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="11" name="property" description="Alias for MaxDate" type="mixed" variable="$Maximum">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="11" name="property" description="Textual date to set it to" type="string" variable="$Text">
          <type by_reference="false">string</type>
        </tag>
        <tag line="11" name="link" description="http://jqueryui.com/datepicker/" link="http://jqueryui.com/datepicker/"/>
        <tag line="11" name="package" description="Controls\Base"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strDateTimeFormat</name>
        <default>"MM/DD/YY"</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$dttDateTime</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Controls\Base">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="31">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="31">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="40" package="Controls\Base">
        <name>OnSelectJs</name>
        <full_name>OnSelectJs</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="49">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="70">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="70">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="28" code="50018">No DocBlock was found for property $strDateTimeFormat</error>
      <error line="29" code="50018">No DocBlock was found for property $dttDateTime</error>
      <error line="31" code="50010">No DocBlock was found for method __construct()</error>
      <error line="40" code="50010">No DocBlock was found for method OnSelectJs()</error>
      <error line="49" code="50010">No DocBlock was found for method __get()</error>
      <error line="70" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QRadioButtonList.class.php" hash="e9446c0c645c0476c3ee382f9bc11824" package="Controls">
    <docblock line="2">
      <description>This file contains the QRadioButtonList class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="35" package="Controls">
      <extends>\QListControl</extends>
      <name>QRadioButtonList</name>
      <full_name>\QRadioButtonList</full_name>
      <docblock line="8">
        <description>This class will render a List of HTML Radio Buttons (inhereting from ListControl).</description>
        <long-description>&lt;p&gt;By definition, radio button lists are single-select ListControls.&lt;/p&gt;

&lt;p&gt;So assuming you have a list of 10 items, and you have RepeatColumn set to 3:&lt;/p&gt;

&lt;p&gt;RepeatDirection::Horizontal would render as:
1   2   3
4   5   6
7   8   9
10&lt;/p&gt;

&lt;p&gt;RepeatDirection::Vertical would render as:
1   5   8
2   6   9
3   7   10
4&lt;/p&gt;</long-description>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="specifies if each ListItem's Name should be displayed to the left or to the right of the radio button." type="string" variable="$TextAlign">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$HtmlEntities">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="specified the HTML Table's CellPadding" type="integer" variable="$CellPadding">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="specified the HTML Table's CellSpacing" type="integer" variable="$CellSpacing">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="specifies how many columns should be rendered in the HTML Table" type="integer" variable="$RepeatColumns">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="specifies which direction should the list go first: horizontal or vertical" type="string" variable="$RepeatDirection">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <constant namespace="global" line="36" package="Controls">
        <name>ButtonModeNone</name>
        <full_name>ButtonModeNone</full_name>
        <value>0</value>
      </constant>
      <constant namespace="global" line="37" package="Controls">
        <name>ButtonModeJq</name>
        <full_name>ButtonModeJq</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="38" package="Controls">
        <name>ButtonModeSet</name>
        <full_name>ButtonModeSet</full_name>
        <value>2</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$strTextAlign</name>
        <default>\QTextAlign::Right</default>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$blnHtmlEntities</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="global" package="Default">
        <name>$intCellPadding</name>
        <default>-1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Default">
        <name>$intCellSpacing</name>
        <default>-1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="53" namespace="global" package="Default">
        <name>$intRepeatColumns</name>
        <default>1</default>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$strRepeatDirection</name>
        <default>\QRepeatDirection::Vertical</default>
      </property>
      <property final="false" static="false" visibility="protected" line="55" namespace="global" package="Default">
        <name>$objItemStyle</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="global" package="Default">
        <name>$intButtonMode</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="58">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="Controls">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="94" package="Controls">
        <name>GetItemHtml</name>
        <full_name>GetItemHtml</full_name>
        <argument line="94">
          <name>$objItem</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$strActions</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$strTabIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="139" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="250" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="265" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="265">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="294" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="294">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="294">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="45" code="50018">No DocBlock was found for property $strTextAlign</error>
      <error line="48" code="50018">No DocBlock was found for property $blnHtmlEntities</error>
      <error line="51" code="50018">No DocBlock was found for property $intCellPadding</error>
      <error line="52" code="50018">No DocBlock was found for property $intCellSpacing</error>
      <error line="53" code="50018">No DocBlock was found for property $intRepeatColumns</error>
      <error line="54" code="50018">No DocBlock was found for property $strRepeatDirection</error>
      <error line="55" code="50018">No DocBlock was found for property $objItemStyle</error>
      <error line="56" code="50018">No DocBlock was found for property $intButtonMode</error>
      <error line="58" code="50010">No DocBlock was found for method __construct()</error>
      <error line="66" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="82" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="94" code="50010">No DocBlock was found for method GetItemHtml()</error>
      <error line="139" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="250" code="50010">No DocBlock was found for method Validate()</error>
      <error line="265" code="50010">No DocBlock was found for method __get()</error>
      <error line="294" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QFileAssetDialog.class.php" hash="e7327f2c01d45c5f2b6af70d1f5f8ba5" package="Default">
    <class final="false" abstract="false" namespace="global" line="8" package="Controls">
      <extends>\QDialogBox</extends>
      <name>QFileAssetDialog</name>
      <full_name>\QFileAssetDialog</full_name>
      <docblock line="2">
        <description>This file contains the QFileAssetDialog class.</description>
        <long-description/>
        <tag line="2" name="package" description="Controls"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="9" namespace="global" package="Default">
        <name>$lblMessage</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="10" namespace="global" package="Default">
        <name>$flcFileAsset</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="11" namespace="global" package="Default">
        <name>$lblError</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="12" namespace="global" package="Default">
        <name>$btnUpload</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="13" namespace="global" package="Default">
        <name>$btnCancel</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$objSpinner</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$strFileUploadCallback</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="17">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="17">
          <name>$strFileUploadCallback</name>
          <default/>
          <type/>
        </argument>
        <argument line="17">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="Controls">
        <name>btnUpload_Click</name>
        <full_name>btnUpload_Click</full_name>
        <argument line="52">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
        <argument line="52">
          <name>$strControlId</name>
          <default/>
          <type/>
        </argument>
        <argument line="52">
          <name>$strParameter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Controls">
        <name>ShowError</name>
        <full_name>ShowError</full_name>
        <argument line="67">
          <name>$strErrorMessage</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/base_controls/QFileAssetDialog.class.php</error>
      <error line="9" code="50018">No DocBlock was found for property $lblMessage</error>
      <error line="10" code="50018">No DocBlock was found for property $flcFileAsset</error>
      <error line="11" code="50018">No DocBlock was found for property $lblError</error>
      <error line="12" code="50018">No DocBlock was found for property $btnUpload</error>
      <error line="13" code="50018">No DocBlock was found for property $btnCancel</error>
      <error line="14" code="50018">No DocBlock was found for property $objSpinner</error>
      <error line="15" code="50018">No DocBlock was found for property $strFileUploadCallback</error>
      <error line="17" code="50010">No DocBlock was found for method __construct()</error>
      <error line="52" code="50010">No DocBlock was found for method btnUpload_Click()</error>
      <error line="67" code="50010">No DocBlock was found for method ShowError()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QImageControlBase.class.php" hash="dfe4623036dadd5ac47edf76e9ef84ba" package="Controls">
    <docblock line="2">
      <description>This file contains the QImageControlBase class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="25" package="Controls">
      <extends>\QControl</extends>
      <name>QImageControlBase</name>
      <full_name>\QImageControlBase</full_name>
      <docblock line="8">
        <description>This class will render an Image Control of any image file in the system</description>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="boolean" variable="$ScaleCanvasDown">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$ScaleImageUp">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ImageType">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$Quality">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$CacheFolder">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$CacheFilename">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$ImagePath">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$AlternateText">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-write" description="" type="string" variable="$BackColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-write" description="" type="string" variable="$Width">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-write" description="" type="string" variable="$Height">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$strBackColor</name>
        <default>'ffffff'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$blnScaleCanvasDown</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$blnScaleImageUp</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$strImageType</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$intQuality</name>
        <default>100</default>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$strImagePath</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$strAlternateText</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$strCacheFolder</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$strCacheFilename</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="global" package="Default">
        <name>$strSourceImageType</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$strCachedActualFilePath</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="56">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="56">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Controls">
        <name>RenderAsImgSrc</name>
        <full_name>RenderAsImgSrc</full_name>
        <argument line="61">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="122" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Controls">
        <name>Serialize</name>
        <full_name>Serialize</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="196" package="Controls">
        <name>Run</name>
        <full_name>Run</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="210" package="Controls">
        <name>FlowThrough</name>
        <full_name>FlowThrough</full_name>
        <argument line="210">
          <name>$strPath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="267" package="Controls">
        <name>SetupContentType</name>
        <full_name>SetupContentType</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="287" package="Controls">
        <name>RenderImage</name>
        <full_name>RenderImage</full_name>
        <argument line="287">
          <name>$strPath</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="530" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="530">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="561" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="561">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="561">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="268">Update Cache Parameters</todo>
    </markers>
    <parse_markers>
      <error line="31" code="50018">No DocBlock was found for property $strBackColor</error>
      <error line="32" code="50018">No DocBlock was found for property $blnScaleCanvasDown</error>
      <error line="33" code="50018">No DocBlock was found for property $blnScaleImageUp</error>
      <error line="36" code="50018">No DocBlock was found for property $strImageType</error>
      <error line="37" code="50018">No DocBlock was found for property $intQuality</error>
      <error line="39" code="50018">No DocBlock was found for property $strImagePath</error>
      <error line="40" code="50018">No DocBlock was found for property $strAlternateText</error>
      <error line="43" code="50018">No DocBlock was found for property $strCacheFolder</error>
      <error line="44" code="50018">No DocBlock was found for property $strCacheFilename</error>
      <error line="47" code="50018">No DocBlock was found for property $strSourceImageType</error>
      <error line="48" code="50018">No DocBlock was found for property $strCachedActualFilePath</error>
      <error line="53" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="54" code="50010">No DocBlock was found for method Validate()</error>
      <error line="56" code="50010">No DocBlock was found for method __construct()</error>
      <error line="61" code="50010">No DocBlock was found for method RenderAsImgSrc()</error>
      <error line="122" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="178" code="50010">No DocBlock was found for method Serialize()</error>
      <error line="196" code="50010">No DocBlock was found for method Run()</error>
      <error line="210" code="50010">No DocBlock was found for method FlowThrough()</error>
      <error line="267" code="50010">No DocBlock was found for method SetupContentType()</error>
      <error line="287" code="50010">No DocBlock was found for method RenderImage()</error>
      <error line="530" code="50010">No DocBlock was found for method __get()</error>
      <error line="561" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QAutocompleteGen.class.php" hash="91d3d16fa523dffc2b4064f5f660eb57" package="Default">
    <docblock line="2">
      <description>QAutocompleteGen File</description>
      <long-description>&lt;p&gt;The abstract QAutocompleteGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QAutocompleteBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QAutocomplete class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="37" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAutocomplete_ChangeEvent</name>
      <full_name>\QAutocomplete_ChangeEvent</full_name>
      <docblock line="30">
        <description>Triggered when the field is blurred, if the value has
		changed.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;  &lt;ul&gt;&lt;li&gt;&lt;strong&gt;item&lt;/strong&gt;
		Type: &lt;a&gt;jQuery&lt;/a&gt; The item selected from the menu, if any.</description>
        <long-description>&lt;p&gt;Otherwise the
        property is&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;null&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="38" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'autocompletechange'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="48" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAutocomplete_CloseEvent</name>
      <full_name>\QAutocomplete_CloseEvent</full_name>
      <docblock line="40">
        <description>Triggered when the menu is hidden.</description>
        <long-description>&lt;p&gt;Not every&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;close&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;event will
        be accompanied by a&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;change&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;    event.&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;event&amp;lt;/strong&amp;gt; Type: &amp;lt;a&amp;gt;Event&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;ui&amp;lt;/strong&amp;gt; Type: &amp;lt;a&amp;gt;Object&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Note: The
    &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;ui&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; object is empty but included for consistency with other
    events.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</long-description>
      </docblock>
      <constant namespace="global" line="49" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'autocompleteclose'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="57" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAutocomplete_CreateEvent</name>
      <full_name>\QAutocomplete_CreateEvent</full_name>
      <docblock line="51">
        <description>Triggered when the autocomplete is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="58" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'autocompletecreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="70" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAutocomplete_FocusEvent</name>
      <full_name>\QAutocomplete_FocusEvent</full_name>
      <docblock line="60">
        <description>Triggered when focus is moved to an item (not selecting).</description>
        <long-description>&lt;p&gt;The default
        action is to replace the text field's value with the value of the focused
        item, though only if the event was triggered by a keyboard interaction.&lt;/p&gt;

&lt;p&gt;Canceling this event prevents the value from being updated, but does
        not prevent the menu item from being
        focused.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;  &lt;ul&gt;&lt;li&gt;&lt;strong&gt;item&lt;/strong&gt;
        Type: &lt;a&gt;jQuery&lt;/a&gt; The focused item.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="71" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'autocompletefocus'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="80" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAutocomplete_OpenEvent</name>
      <full_name>\QAutocomplete_OpenEvent</full_name>
      <docblock line="73">
        <description>Triggered when the suggestion menu is opened or
		updated.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The
		&lt;code&gt;ui&lt;/code&gt; object is empty but included for consistency with other
		events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="81" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'autocompleteopen'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="97" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAutocomplete_ResponseEvent</name>
      <full_name>\QAutocomplete_ResponseEvent</full_name>
      <docblock line="83">
        <description>Triggered after a search completes, before the menu is shown.</description>
        <long-description>&lt;p&gt;Useful for
        local manipulation of suggestion data, where a custom
        &lt;a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/a&gt; option callback is not required. This event is
        always triggered when a search completes, even if the menu will not be
        shown because there are no results or the Autocomplete is
        disabled.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;ul&gt;&lt;li&gt;&lt;strong&gt;content&lt;/strong&gt; Type: &lt;a&gt;Array&lt;/a&gt; Contains the response
        data and can be modified to change the results that will be shown. This
        data is already normalized, so if you modify the data, make sure to include
        both &lt;pre&gt;&lt;code&gt;value&lt;/code&gt;&lt;/pre&gt; and &lt;pre&gt;&lt;code&gt;label&lt;/code&gt;&lt;/pre&gt; properties for each
        item.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="98" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'autocompleteresponse'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="108" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAutocomplete_SearchEvent</name>
      <full_name>\QAutocomplete_SearchEvent</full_name>
      <docblock line="100">
        <description>Triggered before a search is performed, after &lt;a&gt;&lt;code&gt;minLength&lt;/code&gt;&lt;/a&gt;
		and &lt;a&gt;&lt;code&gt;delay&lt;/code&gt;&lt;/a&gt; are met.</description>
        <long-description>&lt;p&gt;If canceled, then no request will be
        started and no items suggested.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
        &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note: The &lt;pre&gt;&lt;code&gt;ui&lt;/code&gt;&lt;/pre&gt; object is empty but included for
        consistency with other events.&lt;/em&gt;&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="109" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'autocompletesearch'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="120" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QAutocomplete_SelectEvent</name>
      <full_name>\QAutocomplete_SelectEvent</full_name>
      <docblock line="111">
        <description>Triggered when an item is selected from the menu.</description>
        <long-description>&lt;p&gt;The default action is to
        replace the text field's value with the value of the selected item.&lt;/p&gt;

&lt;p&gt;Canceling this event prevents the value from being updated, but does
        not prevent the menu from closing.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
        &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
        &lt;ul&gt;&lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The selected
        item.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
      </docblock>
      <constant namespace="global" line="121" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'autocompleteselect'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="199" package="Controls\Base">
      <extends>\QTextBox</extends>
      <name>QAutocompleteGen</name>
      <full_name>\QAutocompleteGen</full_name>
      <docblock line="126">
        <description>Generated QAutocompleteGen class.</description>
        <long-description>&lt;p&gt;This is the QAutocompleteGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QAutocompleteBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="126" name="see" description="\global\QAutocompleteBase" refers="\global\QAutocompleteBase"/>
        <tag line="126" name="package" description="Controls\Base"/>
        <tag line="126" name="property" description="Which element the menu should be appended to. Override this when the&#10;&#9;&#9;autocomplete is inside a &lt;code&gt;position: fixed&lt;/code&gt; element. Otherwise&#10;&#9;&#9;the popup menu would still scroll with the page." type="mixed" variable="$AppendTo">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="126" name="property" description="If set to &lt;code&gt;true&lt;/code&gt; the first item will automatically be focused&#10;&#9;&#9;when the menu is shown." type="boolean" variable="$AutoFocus">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="126" name="property" description="The delay in milliseconds between when a keystroke occurs and when a search&#10;&#9;&#9;is performed. A zero-delay makes sense for local data (more responsive),&#10;&#9;&#9;but can produce a lot of load for remote data, while being less responsive." type="integer" variable="$Delay">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="126" name="property" description="Disables the autocomplete if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="126" name="property" description="The minimum number of characters a user must type before a search is&#10;&#9;&#9;performed. Zero is useful for local data with just a few items, but a&#10;&#9;&#9;higher value should be used when a single character search could match a&#10;&#9;&#9;few thousand items." type="integer" variable="$MinLength">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="126" name="property" description="Identifies the position of the suggestions menu in relation to the&#10;&#9;&#9;associated input element. The &lt;code&gt;of&lt;/code&gt; option defaults to the input&#10;&#9;&#9;element, but you can specify another element to position against. You can&#10;&#9;&#9;refer to the &lt;a&gt;jQuery UI Position&lt;/a&gt; utility for more details about the&#10;&#9;&#9;various options." type="mixed" variable="$Position">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="126" name="property" description="Defines the data to use, must be specified. &#9;&#9;&#9;&#9;&lt;p&gt;Independent of the&#10;&#9;&#9;variant you use, the label is always treated as text. If you want the label&#10;&#9;&#9;to be treated as html you can use &lt;a&gt;Scott González' html extension&lt;/a&gt;.&#10;&#9;&#9;The demos all focus on different variations of the &lt;code&gt;source&lt;/code&gt;&#10;&#9;&#9;option - look for one that matches your use case, and check out the&#10;&#9;&#9;code.&lt;/p&gt;&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Array&lt;/strong&gt;:  &#9;&#9;&#9;&#9;&#9;An array can be&#10;&#9;&#9;used for local data. There are two supported formats: &#9;&#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;An array&#10;&#9;&#9;of strings: &lt;code&gt;[ &quot;Choice1&quot;, &quot;Choice2&quot; ]&lt;/code&gt;&lt;/li&gt; &#9;&#9;&#9;&#9;&#9;&#9;&lt;li&gt;An array&#10;&#9;&#9;of objects with &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; properties:&#10;&#9;&#9;&lt;code&gt;[ { label: &quot;Choice1&quot;, value: &quot;value1&quot; }, ... ]&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;The label property is displayed in the suggestion menu. The value will&#10;&#9;&#9;be inserted into the input element when a user selects an item. If just one&#10;&#9;&#9;property is specified, it will be used for both, e.g., if you provide only&#10;&#9;&#9;&lt;code&gt;value&lt;/code&gt; properties, the value will also be used as the&#10;&#9;&#9;label.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: When a string is used, the&#10;&#9;&#9;Autocomplete plugin expects that string to point to a URL resource that&#10;&#9;&#9;will return JSON data. It can be on the same host or on a different one&#10;&#9;&#9;(must provide JSONP). The Autocomplete plugin does not filter the results,&#10;&#9;&#9;instead a query string is added with a &lt;code&gt;term&lt;/code&gt; field, which the&#10;&#9;&#9;server-side script should use for filtering the results. For example, if&#10;&#9;&#9;the &lt;code&gt;source&lt;/code&gt; option is set to &lt;code&gt;&quot;http://example.com&quot;&lt;/code&gt;&#10;&#9;&#9;and the user types &lt;code&gt;foo&lt;/code&gt;, a GET request would be made to&#10;&#9;&#9;&lt;code&gt;http://example.com?term=foo&lt;/code&gt;. The data itself can be in the&#10;&#9;&#9;same format as the local data described above.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Function&lt;/strong&gt;:  &#9;&#9;&#9;&#9;&#9;The third variation, a callback,&#10;&#9;&#9;provides the most flexibility and can be used to connect any data source to&#10;&#9;&#9;Autocomplete. The callback gets two arguments: &#9;&#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;A&#10;&#9;&#9;&lt;code&gt;request&lt;/code&gt; object, with a single &lt;code&gt;term&lt;/code&gt; property,&#10;&#9;&#9;which refers to the value currently in the text input. For example, if the&#10;&#9;&#9;user enters &lt;code&gt;&quot;new yo&quot;&lt;/code&gt; in a city field, the Autocomplete term&#10;&#9;&#9;will equal &lt;code&gt;&quot;new yo&quot;&lt;/code&gt;.&lt;/li&gt; &#9;&#9;&#9;&#9;&#9;&#9;&lt;li&gt;A &lt;code&gt;response&lt;/code&gt;&#10;&#9;&#9;callback, which expects a single argument: the data to suggest to the user.&#10;&#9;&#9;This data should be filtered based on the provided term, and can be in any&#10;&#9;&#9;of the formats described above for simple local data. It's important when&#10;&#9;&#9;providing a custom source callback to handle errors during the request. You&#10;&#9;&#9;must always call the &lt;code&gt;response&lt;/code&gt; callback even if you encounter&#10;&#9;&#9;an error. This ensures that the widget always has the correct&#10;&#9;&#9;state.&lt;/li&gt;&lt;/ul&gt; &#9;&#9;&#9;&#9;&#9;&lt;p&gt;When filtering data locally, you can make use of&#10;&#9;&#9;the built-in &lt;code&gt;$.ui.autocomplete.escapeRegex&lt;/code&gt; function. It'll&#10;&#9;&#9;take a single string argument and escape all regex characters, making the&#10;&#9;&#9;result safe to pass to &lt;code&gt;new RegExp()&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Source">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="200" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="201" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="203" namespace="global" package="Default">
        <name>$mixAppendTo</name>
        <default>null</default>
        <docblock line="202">
          <description/>
          <long-description/>
          <tag line="202" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="205" namespace="global" package="Default">
        <name>$blnAutoFocus</name>
        <default>null</default>
        <docblock line="204">
          <description/>
          <long-description/>
          <tag line="204" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="207" namespace="global" package="Default">
        <name>$intDelay</name>
        <default>null</default>
        <docblock line="206">
          <description/>
          <long-description/>
          <tag line="206" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="209" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="208">
          <description/>
          <long-description/>
          <tag line="208" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="211" namespace="global" package="Default">
        <name>$intMinLength</name>
        <default>null</default>
        <docblock line="210">
          <description/>
          <long-description/>
          <tag line="210" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="213" namespace="global" package="Default">
        <name>$mixPosition</name>
        <default>null</default>
        <docblock line="212">
          <description/>
          <long-description/>
          <tag line="212" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="215" namespace="global" package="Default">
        <name>$mixSource</name>
        <default/>
        <docblock line="214">
          <description/>
          <long-description/>
          <tag line="214" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="217" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="217">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="217">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="226" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="239" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="243" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="247" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="267" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="258">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="258" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="258" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="258" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="267">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="284" package="Controls\Base">
        <name>Close</name>
        <full_name>Close</full_name>
        <docblock line="279">
          <description>Closes the Autocomplete menu.</description>
          <long-description>&lt;p&gt;Useful in combination with the
&lt;a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;search&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/a&gt; method, to close the open menu.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This
method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="292" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="287">
          <description>Removes the autocomplete functionality completely.</description>
          <long-description>&lt;p&gt;This will return the
element back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="295">
          <description>Disables the autocomplete.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="306" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="302">
          <description>Enables the autocomplete.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="315" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="309">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="309" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="315">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="323" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="318">
          <description>Gets an object containing key/value pairs representing the current
autocomplete options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="335" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="326">
          <description>Sets the value of the autocomplete option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="326" name="param" description="" type="\" variable="$optionName"/>
          <tag line="326" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="335">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="335">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="344" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="338">
          <description>Sets one or more options for the
autocomplete.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A map of
option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="338" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="344">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="356" package="Controls\Base">
        <name>Search</name>
        <full_name>Search</full_name>
        <docblock line="347">
          <description>Triggers a &lt;a&gt;&lt;code&gt;search&lt;/code&gt;&lt;/a&gt; event and invokes the data source if
the event is not canceled.</description>
          <long-description>&lt;p&gt;Can be used by a selectbox-like button to open
the suggestions when clicked. When invoked with no parameters, the current
input's value is used. Can be called with an empty string and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;minLength: 0&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to display all
items.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;String&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;</long-description>
          <tag line="347" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="356">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="361" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="361">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="380" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="380">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="380">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="200" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="201" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="202" code="50019">No short description for property $mixAppendTo</critical>
      <critical line="204" code="50019">No short description for property $blnAutoFocus</critical>
      <critical line="206" code="50019">No short description for property $intDelay</critical>
      <critical line="208" code="50019">No short description for property $blnDisabled</critical>
      <critical line="210" code="50019">No short description for property $intMinLength</critical>
      <critical line="212" code="50019">No short description for property $mixPosition</critical>
      <critical line="214" code="50019">No short description for property $mixSource</critical>
      <error line="217" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="226" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="239" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="243" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="247" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="361" code="50010">No DocBlock was found for method __get()</error>
      <error line="380" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDateTimePicker.class.php" hash="924ac61d2b7647652683444a2511edd1" package="Controls">
    <docblock line="2">
      <description>This file contains the QDateTimePicker class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Controls">
      <extends>\QControl</extends>
      <name>QDateTimePicker</name>
      <full_name>\QDateTimePicker</full_name>
      <docblock line="8">
        <description>This class is meant to be a date-picker.</description>
        <long-description>&lt;p&gt;It will essentially render an uneditable HTML textbox
as well as a calendar icon.  The idea is that if you click on the icon or the textbox,
it will pop up a calendar in a new small window.&lt;/p&gt;</long-description>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="mixed" variable="$DateTime">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$DateTimePickerType">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$DateTimePickerFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$MinimumYear">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="integer" variable="$MaximumYear">
          <type by_reference="false">integer</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$dttDateTime</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strDateTimePickerType</name>
        <default>\QDateTimePickerType::Date</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strDateTimePickerFormat</name>
        <default>\QDateTimePickerFormat::MonthDayYear</default>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$intMinimumYear</name>
        <default>1970</default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$intMaximumYear</name>
        <default>2020</default>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$intSelectedMonth</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$intSelectedDay</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$intSelectedYear</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>'date_time_picker.js'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$strCssClass</name>
        <default>'datetimepicker'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="114" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="306" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="349" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="349">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="378" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="378">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="378">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="27" code="50018">No DocBlock was found for property $dttDateTime</error>
      <error line="28" code="50018">No DocBlock was found for property $strDateTimePickerType</error>
      <error line="29" code="50018">No DocBlock was found for property $strDateTimePickerFormat</error>
      <error line="31" code="50018">No DocBlock was found for property $intMinimumYear</error>
      <error line="32" code="50018">No DocBlock was found for property $intMaximumYear</error>
      <error line="34" code="50018">No DocBlock was found for property $intSelectedMonth</error>
      <error line="35" code="50018">No DocBlock was found for property $intSelectedDay</error>
      <error line="36" code="50018">No DocBlock was found for property $intSelectedYear</error>
      <error line="39" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="40" code="50018">No DocBlock was found for property $strCssClass</error>
      <error line="45" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="114" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="306" code="50010">No DocBlock was found for method Validate()</error>
      <error line="349" code="50010">No DocBlock was found for method __get()</error>
      <error line="378" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDateTimeTextBox.class.php" hash="a8bb155d182170c50b4ee01da00e0a0a" package="Controls">
    <docblock line="2">
      <description>This file contains the QDateTimeTextBox class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Controls">
      <extends>\QTextBox</extends>
      <name>QDateTimeTextBox</name>
      <full_name>\QDateTimeTextBox</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="\QDateTime" variable="$Maximum">
          <type by_reference="false">\QDateTime</type>
        </tag>
        <tag line="8" name="property" description="" type="\QDateTime" variable="$Minimum">
          <type by_reference="false">\QDateTime</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$DateTimeFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="\QDateTime" variable="$DateTime">
          <type by_reference="false">\QDateTime</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$LabelForInvalid">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$dttMinimum</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$dttMaximum</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strDateTimeFormat</name>
        <default>"MMM D, YYYY"</default>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$dttDateTime</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strLabelForInvalid</name>
        <default>'For example, "Mar 20, 4:30pm" or "Mar 20"'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$calLinkedControl</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="43" package="Controls">
        <name>ParseForDateTimeValue</name>
        <full_name>ParseForDateTimeValue</full_name>
        <argument line="43">
          <name>$strText</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Controls">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="133">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="155">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="155">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QDateTimeTextBox</critical>
      <error line="23" code="50018">No DocBlock was found for property $dttMinimum</error>
      <error line="24" code="50018">No DocBlock was found for property $dttMaximum</error>
      <error line="25" code="50018">No DocBlock was found for property $strDateTimeFormat</error>
      <error line="26" code="50018">No DocBlock was found for property $dttDateTime</error>
      <error line="28" code="50018">No DocBlock was found for property $strLabelForInvalid</error>
      <error line="29" code="50018">No DocBlock was found for property $calLinkedControl</error>
      <error line="35" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="43" code="50010">No DocBlock was found for method ParseForDateTimeValue()</error>
      <error line="83" code="50010">No DocBlock was found for method Validate()</error>
      <error line="133" code="50010">No DocBlock was found for method __get()</error>
      <error line="155" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDataRepeater.class.php" hash="abd760459cf97b790461f6f8f8719033" package="Controls">
    <docblock line="2">
      <description>This file contains the QDataRepeater class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Controls">
      <extends>\QPaginatedControl</extends>
      <name>QDataRepeater</name>
      <full_name>\QDataRepeater</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="string" variable="$Template">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property-read" description="" type="integer" variable="$CurrentItemIndex">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$TagName">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="22" namespace="global" package="Default">
        <name>$strTemplate</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$intCurrentItemIndex</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strTagName</name>
        <default>'div'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Controls">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="32" package="Controls">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="76">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="96">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QDataRepeater</critical>
      <error line="22" code="50018">No DocBlock was found for property $strTemplate</error>
      <error line="23" code="50018">No DocBlock was found for property $intCurrentItemIndex</error>
      <error line="25" code="50018">No DocBlock was found for property $strTagName</error>
      <error line="30" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="32" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="76" code="50010">No DocBlock was found for method __get()</error>
      <error line="96" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QSortableGen.class.php" hash="d1fa6d40e8164f4b8ce9bd4e0254788e" package="Default">
    <docblock line="2">
      <description>QSortableGen File</description>
      <long-description>&lt;p&gt;The abstract QSortableGen class defined here is
code-generated and contains options, events and methods scraped from the
JQuery UI documentation Web site. It is not generated by the typical
codegen process, but rather is generated periodically by the core QCubed
team and checked in. However, the code to generate this file is
in the assets/_core/php/_devetools/jquery_ui_gen/jq_control_gen.php file
and you can regenerate the files if you need to.&lt;/p&gt;

&lt;p&gt;The comments in this file are taken from the JQuery UI site, so they do
not always make sense with regard to QCubed. They are simply provided
as reference. Note that this is very low-level code, and does not always
update QCubed state variables. See the QSortableBase
file, which contains code to interface between this generated file and QCubed.&lt;/p&gt;

&lt;p&gt;Because subsequent re-code generations will overwrite any changes to this
file, you should leave this file unaltered to prevent yourself from losing
any information or code changes.  All customizations should be done by
overriding existing or implementing new methods, properties and variables
in the QSortable class file.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="46" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_ActivateEvent</name>
      <full_name>\QSortable_ActivateEvent</full_name>
      <docblock line="30">
        <description>This event is triggered when using connected lists, every connected list on
		drag start receives it.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt;
		&lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="47" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortactivate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="65" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_BeforeStopEvent</name>
      <full_name>\QSortable_BeforeStopEvent</full_name>
      <docblock line="49">
        <description>This event is triggered when sorting stops, but when the placeholder/helper
		is still available.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="66" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortbeforestop'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="84" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_ChangeEvent</name>
      <full_name>\QSortable_ChangeEvent</full_name>
      <docblock line="68">
        <description>This event is triggered during sorting, but only when the DOM position has
		changed.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="85" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortchange'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="93" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_CreateEvent</name>
      <full_name>\QSortable_CreateEvent</full_name>
      <docblock line="87">
        <description>Triggered when the sortable is created.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;ui&lt;/code&gt; object is empty but included for
		consistency with other events.&lt;/em&gt;&lt;/p&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="94" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortcreate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="112" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_DeactivateEvent</name>
      <full_name>\QSortable_DeactivateEvent</full_name>
      <docblock line="96">
        <description>This event is triggered when sorting was stopped, is propagated to all
		possible connected lists.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt;
		&lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="113" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortdeactivate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="131" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_OutEvent</name>
      <full_name>\QSortable_OutEvent</full_name>
      <docblock line="115">
        <description>This event is triggered when a sortable item is moved away from a connected
		list.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="132" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortout'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="150" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_OverEvent</name>
      <full_name>\QSortable_OverEvent</full_name>
      <docblock line="134">
        <description>This event is triggered when a sortable item is moved into a connected
		list.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="151" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortover'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="169" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_ReceiveEvent</name>
      <full_name>\QSortable_ReceiveEvent</full_name>
      <docblock line="153">
        <description>This event is triggered when a connected sortable list has received an item
		from another list.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="170" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortreceive'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="188" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_RemoveEvent</name>
      <full_name>\QSortable_RemoveEvent</full_name>
      <docblock line="172">
        <description>This event is triggered when a sortable item has been dragged out from the
		list and into another.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt;
		&lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="189" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortremove'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="206" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_SortEvent</name>
      <full_name>\QSortable_SortEvent</full_name>
      <docblock line="191">
        <description>This event is triggered during sorting.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type:
		&lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="207" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sort'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="224" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_StartEvent</name>
      <full_name>\QSortable_StartEvent</full_name>
      <docblock line="209">
        <description>This event is triggered when sorting starts.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt;
		Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="225" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortstart'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="243" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_StopEvent</name>
      <full_name>\QSortable_StopEvent</full_name>
      <docblock line="227">
        <description>This event is triggered when sorting has
		stopped.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="244" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortstop'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="262" package="Default">
      <extends>\QJqUiEvent</extends>
      <name>QSortable_UpdateEvent</name>
      <full_name>\QSortable_UpdateEvent</full_name>
      <docblock line="246">
        <description>This event is triggered when the user stopped sorting and the DOM position
		has changed.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;event&lt;/strong&gt; Type: &lt;a&gt;Event&lt;/a&gt; &lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;ui&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt;
		&lt;ul&gt;&lt;li&gt;&lt;strong&gt;helper&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The jQuery object
		representing the helper being sorted&lt;/li&gt; &lt;li&gt;&lt;strong&gt;item&lt;/strong&gt; Type:
		&lt;a&gt;jQuery&lt;/a&gt; The jQuery object representing the current dragged
		element&lt;/li&gt; &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		absolute position of the helper represented as &lt;code&gt;{ top, left
		}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The current
		position of the helper represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;originalPosition&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; The original
		position of the element represented as &lt;code&gt;{ top, left }&lt;/code&gt;&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;sender&lt;/strong&gt; Type: &lt;a&gt;jQuery&lt;/a&gt; The sortable that the item
		comes from if moving from one sortable to another&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="263" package="Default">
        <name>EventName</name>
        <full_name>EventName</full_name>
        <value>'sortupdate'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="355" package="Controls\Base">
      <extends>\QPanel</extends>
      <name>QSortableGen</name>
      <full_name>\QSortableGen</full_name>
      <docblock line="268">
        <description>Generated QSortableGen class.</description>
        <long-description>&lt;p&gt;This is the QSortableGen class which is automatically generated
by scraping the JQuery UI documentation website. As such, it includes all the options
as listed by the JQuery UI website, which may or may not be appropriate for QCubed. See
the QSortableBase class for any glue code to make this class more
usable in QCubed.&lt;/p&gt;</long-description>
        <tag line="268" name="see" description="\global\QSortableBase" refers="\global\QSortableBase"/>
        <tag line="268" name="package" description="Controls\Base"/>
        <tag line="268" name="property" description="Defines where the helper that moves with the mouse is being appended to&#10;&#9;&#9;during the drag (for example, to resolve overlap/zIndex&#10;&#9;&#9;issues).&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;jQuery&lt;/strong&gt;: A jQuery object&#10;&#9;&#9;containing the element to append the helper to.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Element&lt;/strong&gt;: The element to append the helper to.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: A selector specifying which element to&#10;&#9;&#9;append the helper to.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: The string&#10;&#9;&#9;&lt;code&gt;&quot;parent&quot;&lt;/code&gt; will cause the helper to be a sibling of the sortable&#10;&#9;&#9;item.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$AppendTo">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="268" name="property" description="If defined, the items can be dragged only horizontally or vertically.&#10;&#9;&#9;Possible values: &lt;code&gt;&quot;x&quot;&lt;/code&gt;, &lt;code&gt;&quot;y&quot;&lt;/code&gt;." type="string" variable="$Axis">
          <type by_reference="false">string</type>
        </tag>
        <tag line="268" name="property" description="Prevents sorting if you start on elements matching the selector." type="mixed" variable="$Cancel">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="268" name="property" description="A selector of other sortable elements that the items from this list should&#10;&#9;&#9;be connected to. This is a one-way relationship, if you want the items to&#10;&#9;&#9;be connected in both directions, the &lt;code&gt;connectWith&lt;/code&gt; option must&#10;&#9;&#9;be set on both sortable elements." type="mixed" variable="$ConnectWith">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="268" name="property" description="&lt;p&gt;Defines a bounding box that the sortable items are contrained to while&#10;&#9;&#9;dragging.&lt;/p&gt;  &#9;&#9;&#9;&#9;&lt;p&gt;Note: The element specified for containment must have&#10;&#9;&#9;a calculated width and height (though it need not be explicit). For&#10;&#9;&#9;example, if you have &lt;code&gt;float: left&lt;/code&gt; sortable children and specify&#10;&#9;&#9;&lt;code&gt;containment: &quot;parent&quot;&lt;/code&gt; be sure to have &lt;code&gt;float: left&lt;/code&gt;&#10;&#9;&#9;on the sortable/parent container as well or it will have &lt;code&gt;height:&#10;&#9;&#9;0&lt;/code&gt;, causing undefined behavior.&lt;/p&gt;&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Element&lt;/strong&gt;: An element to use as&#10;&#9;&#9;the container.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Selector&lt;/strong&gt;: A selector specifying an&#10;&#9;&#9;element to use as the container.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: A string&#10;&#9;&#9;identifying an element to use as the container. Possible values:&#10;&#9;&#9;&lt;code&gt;&quot;parent&quot;&lt;/code&gt;, &lt;code&gt;&quot;document&quot;&lt;/code&gt;,&#10;&#9;&#9;&lt;code&gt;&quot;window&quot;&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Containment">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="268" name="property" description="Defines the cursor that is being shown while sorting." type="string" variable="$Cursor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="268" name="property" description="Moves the sorting element or helper so the cursor always appears to drag&#10;&#9;&#9;from the same position. Coordinates can be given as a hash using a&#10;&#9;&#9;combination of one or two keys: &lt;code&gt;{ top, left, right, bottom }&lt;/code&gt;." type="mixed" variable="$CursorAt">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="268" name="property" description="Time in milliseconds to define when the sorting should start. Adding a&#10;&#9;&#9;delay helps preventing unwanted drags when clicking on an element." type="integer" variable="$Delay">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="268" name="property" description="Disables the sortable if set to &lt;code&gt;true&lt;/code&gt;." type="boolean" variable="$Disabled">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="268" name="property" description="Tolerance, in pixels, for when sorting should start. If specified, sorting&#10;&#9;&#9;will not start until after mouse is dragged beyond distance. Can be used to&#10;&#9;&#9;allow for clicks on elements within a handle." type="integer" variable="$Distance">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="268" name="property" description="If &lt;code&gt;false&lt;/code&gt;, items from this sortable can't be dropped on an&#10;&#9;&#9;empty connect sortable (see the &lt;a&gt;&lt;code&gt;connectWith&lt;/code&gt;&lt;/a&gt; option." type="boolean" variable="$DropOnEmpty">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="268" name="property" description="If &lt;code&gt;true&lt;/code&gt;, forces the helper to have a size." type="boolean" variable="$ForceHelperSize">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="268" name="property" description="If true, forces the placeholder to have a size." type="boolean" variable="$ForcePlaceholderSize">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="268" name="property" description="Snaps the sorting element or helper to a grid, every x and y pixels. Array&#10;&#9;&#9;values: &lt;code&gt;[ x, y ]&lt;/code&gt;." type="array" variable="$Grid">
          <type by_reference="false">array</type>
        </tag>
        <tag line="268" name="property" description="Restricts sort start click to the specified element." type="mixed" variable="$Handle">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="268" name="property" description="Allows for a helper element to be used for dragging&#10;&#9;&#9;display.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt;: If set to&#10;&#9;&#9;&lt;code&gt;&quot;clone&quot;&lt;/code&gt;, then the element will be cloned and the clone will be&#10;&#9;&#9;dragged.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Function&lt;/strong&gt;: A function that will return a&#10;&#9;&#9;DOMElement to use while dragging. The function receives the event and the&#10;&#9;&#9;element being sorted.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Helper">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="268" name="property" description="Specifies which items inside the element should be sortable." type="mixed" variable="$Items">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="268" name="property" description="Defines the opacity of the helper while sorting. From &lt;code&gt;0.01&lt;/code&gt; to&#10;&#9;&#9;&lt;code&gt;1&lt;/code&gt;." type="integer" variable="$Opacity">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="268" name="property" description="A class name that gets applied to the otherwise white space." type="string" variable="$Placeholder">
          <type by_reference="false">string</type>
        </tag>
        <tag line="268" name="property" description="Whether the sortable items should revert to their new positions using a&#10;&#9;&#9;smooth animation.&lt;strong&gt;Multiple types&#10;&#9;&#9;supported:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;: When set to&#10;&#9;&#9;&lt;code&gt;true&lt;/code&gt;, the items will animate with the default duration.&lt;/li&gt;&#10;&#9;&#9;&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;: The duration for the animation, in&#10;&#9;&#9;milliseconds.&lt;/li&gt;&lt;/ul&gt;" type="mixed" variable="$Revert">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="268" name="property" description="If set to true, the page scrolls when coming to an edge." type="boolean" variable="$Scroll">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="268" name="property" description="Defines how near the mouse must be to an edge to start scrolling." type="integer" variable="$ScrollSensitivity">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="268" name="property" description="The speed at which the window should scroll once the mouse pointer gets&#10;&#9;&#9;within the &lt;a&gt;&lt;code&gt;scrollSensitivity&lt;/code&gt;&lt;/a&gt; distance." type="integer" variable="$ScrollSpeed">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="268" name="property" description="Specifies which mode to use for testing whether the item being moved is&#10;&#9;&#9;hovering over another item. Possible values:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;ul&gt;&lt;li&gt;&lt;code&gt;&quot;intersect&quot;&lt;/code&gt;: The item overlaps the other item by&#10;&#9;&#9;at least 50%.&lt;/li&gt; &#9;&#9;&#9;&#9;&#9;&lt;li&gt;&lt;code&gt;&quot;pointer&quot;&lt;/code&gt;: The mouse pointer&#10;&#9;&#9;overlaps the other item.&lt;/li&gt;&lt;/ul&gt;" type="string" variable="$Tolerance">
          <type by_reference="false">string</type>
        </tag>
        <tag line="268" name="property" description="Z-index for element/helper while being sorted." type="integer" variable="$ZIndex">
          <type by_reference="false">integer</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="356" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="357" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="359" namespace="global" package="Default">
        <name>$mixAppendTo</name>
        <default>null</default>
        <docblock line="358">
          <description/>
          <long-description/>
          <tag line="358" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="361" namespace="global" package="Default">
        <name>$strAxis</name>
        <default>null</default>
        <docblock line="360">
          <description/>
          <long-description/>
          <tag line="360" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="363" namespace="global" package="Default">
        <name>$mixCancel</name>
        <default>null</default>
        <docblock line="362">
          <description/>
          <long-description/>
          <tag line="362" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="365" namespace="global" package="Default">
        <name>$mixConnectWith</name>
        <default>null</default>
        <docblock line="364">
          <description/>
          <long-description/>
          <tag line="364" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="367" namespace="global" package="Default">
        <name>$mixContainment</name>
        <default>null</default>
        <docblock line="366">
          <description/>
          <long-description/>
          <tag line="366" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="369" namespace="global" package="Default">
        <name>$strCursor</name>
        <default>null</default>
        <docblock line="368">
          <description/>
          <long-description/>
          <tag line="368" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="371" namespace="global" package="Default">
        <name>$mixCursorAt</name>
        <default>null</default>
        <docblock line="370">
          <description/>
          <long-description/>
          <tag line="370" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="373" namespace="global" package="Default">
        <name>$intDelay</name>
        <default/>
        <docblock line="372">
          <description/>
          <long-description/>
          <tag line="372" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="375" namespace="global" package="Default">
        <name>$blnDisabled</name>
        <default>null</default>
        <docblock line="374">
          <description/>
          <long-description/>
          <tag line="374" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="377" namespace="global" package="Default">
        <name>$intDistance</name>
        <default>null</default>
        <docblock line="376">
          <description/>
          <long-description/>
          <tag line="376" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="379" namespace="global" package="Default">
        <name>$blnDropOnEmpty</name>
        <default>null</default>
        <docblock line="378">
          <description/>
          <long-description/>
          <tag line="378" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="381" namespace="global" package="Default">
        <name>$blnForceHelperSize</name>
        <default>null</default>
        <docblock line="380">
          <description/>
          <long-description/>
          <tag line="380" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="383" namespace="global" package="Default">
        <name>$blnForcePlaceholderSize</name>
        <default>null</default>
        <docblock line="382">
          <description/>
          <long-description/>
          <tag line="382" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="385" namespace="global" package="Default">
        <name>$arrGrid</name>
        <default>null</default>
        <docblock line="384">
          <description/>
          <long-description/>
          <tag line="384" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="387" namespace="global" package="Default">
        <name>$mixHandle</name>
        <default>null</default>
        <docblock line="386">
          <description/>
          <long-description/>
          <tag line="386" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="389" namespace="global" package="Default">
        <name>$mixHelper</name>
        <default>null</default>
        <docblock line="388">
          <description/>
          <long-description/>
          <tag line="388" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="391" namespace="global" package="Default">
        <name>$mixItems</name>
        <default>null</default>
        <docblock line="390">
          <description/>
          <long-description/>
          <tag line="390" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="393" namespace="global" package="Default">
        <name>$intOpacity</name>
        <default>null</default>
        <docblock line="392">
          <description/>
          <long-description/>
          <tag line="392" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="395" namespace="global" package="Default">
        <name>$strPlaceholder</name>
        <default>null</default>
        <docblock line="394">
          <description/>
          <long-description/>
          <tag line="394" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="397" namespace="global" package="Default">
        <name>$mixRevert</name>
        <default>null</default>
        <docblock line="396">
          <description/>
          <long-description/>
          <tag line="396" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="399" namespace="global" package="Default">
        <name>$blnScroll</name>
        <default>null</default>
        <docblock line="398">
          <description/>
          <long-description/>
          <tag line="398" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="401" namespace="global" package="Default">
        <name>$intScrollSensitivity</name>
        <default>null</default>
        <docblock line="400">
          <description/>
          <long-description/>
          <tag line="400" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="403" namespace="global" package="Default">
        <name>$intScrollSpeed</name>
        <default>null</default>
        <docblock line="402">
          <description/>
          <long-description/>
          <tag line="402" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="405" namespace="global" package="Default">
        <name>$strTolerance</name>
        <default>null</default>
        <docblock line="404">
          <description/>
          <long-description/>
          <tag line="404" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="407" namespace="global" package="Default">
        <name>$intZIndex</name>
        <default>null</default>
        <docblock line="406">
          <description/>
          <long-description/>
          <tag line="406" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="409" package="Controls\Base">
        <name>makeJsProperty</name>
        <full_name>makeJsProperty</full_name>
        <argument line="409">
          <name>$strProp</name>
          <default/>
          <type/>
        </argument>
        <argument line="409">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="418" package="Controls\Base">
        <name>makeJqOptions</name>
        <full_name>makeJqOptions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="449" package="Controls\Base">
        <name>getJqSetupFunction</name>
        <full_name>getJqSetupFunction</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="453" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="457" package="Controls\Base">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="477" package="Controls\Base">
        <name>CallJqUiMethod</name>
        <full_name>CallJqUiMethod</full_name>
        <docblock line="468">
          <description>Call a JQuery UI Method on the object.</description>
          <long-description>&lt;p&gt;A helper function to call a jQuery UI Method. Takes variable number of arguments.&lt;/p&gt;</long-description>
          <tag line="468" name="param" description="the method name to call" type="string" variable="$strMethodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="468" name="internal" description="param $mixed [optional] $mixParam1"/>
          <tag line="468" name="internal" description="param $mixed [optional] $mixParam2"/>
        </docblock>
        <argument line="477">
          <name>$strMethodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="495" package="Controls\Base">
        <name>Cancel</name>
        <full_name>Cancel</full_name>
        <docblock line="489">
          <description>Cancels a change in the current sortable and reverts it to the state prior
to when the current sort was started.</description>
          <long-description>&lt;p&gt;Useful in the stop and receive
callback functions.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="503" package="Controls\Base">
        <name>Destroy</name>
        <full_name>Destroy</full_name>
        <docblock line="498">
          <description>Removes the sortable functionality completely.</description>
          <long-description>&lt;p&gt;This will return the element
back to its pre-init state.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="510" package="Controls\Base">
        <name>Disable</name>
        <full_name>Disable</full_name>
        <docblock line="506">
          <description>Disables the sortable.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="517" package="Controls\Base">
        <name>Enable</name>
        <full_name>Enable</full_name>
        <docblock line="513">
          <description>Enables the sortable.&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="526" package="Controls\Base">
        <name>Option</name>
        <full_name>Option</full_name>
        <docblock line="520">
          <description>Gets the value currently associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to get.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="520" name="param" description="" type="\" variable="$optionName"/>
        </docblock>
        <argument line="526">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="533" package="Controls\Base">
        <name>Option1</name>
        <full_name>Option1</full_name>
        <docblock line="529">
          <description>Gets an object containing key/value pairs representing the current sortable
options hash.&lt;ul&gt;&lt;li&gt;This method does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="545" package="Controls\Base">
        <name>Option2</name>
        <full_name>Option2</full_name>
        <docblock line="536">
          <description>Sets the value of the sortable option associated with the specified
&lt;code&gt;optionName&lt;/code&gt;.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;optionName&lt;/strong&gt; Type:
&lt;a&gt;String&lt;/a&gt; The name of the option to set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; A value to set for the
option.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="536" name="param" description="" type="\" variable="$optionName"/>
          <tag line="536" name="param" description="" type="\" variable="$value"/>
        </docblock>
        <argument line="545">
          <name>$optionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="545">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="553" package="Controls\Base">
        <name>Option3</name>
        <full_name>Option3</full_name>
        <docblock line="548">
          <description>Sets one or more options for the sortable.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;
Type: &lt;a&gt;Object&lt;/a&gt; A map of option-value pairs to set.&lt;/li&gt;&lt;/ul&gt;</description>
          <long-description/>
          <tag line="548" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="553">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="561" package="Controls\Base">
        <name>Refresh</name>
        <full_name>Refresh</full_name>
        <docblock line="556">
          <description>Refresh the sortable items.</description>
          <long-description>&lt;p&gt;Triggers the reloading of all sortable items,
causing new items to be recognized.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method does not accept any
arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="569" package="Controls\Base">
        <name>RefreshPositions</name>
        <full_name>RefreshPositions</full_name>
        <docblock line="564">
          <description>Refresh the cached positions of the sortable items.</description>
          <long-description>&lt;p&gt;Calling this method
refreshes the cached item positions of all sortables.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;This method
does not accept any arguments.&lt;/li&gt;&lt;/ul&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="600" package="Controls\Base">
        <name>Serialize</name>
        <full_name>Serialize</full_name>
        <docblock line="572">
          <description>&lt;p&gt;Serializes the sortable's item &lt;code&gt;id&lt;/code&gt;s into a form/ajax
submittable string.</description>
          <long-description>&lt;p&gt;Calling this method produces a hash that can be
appended to any url to easily submit a new item order back to the
server.&lt;/p&gt;                 &lt;p&gt;It works by default by looking at the &lt;pre&gt;&lt;code&gt;id&lt;/code&gt;&lt;/pre&gt;
of each item in the format&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"setname_number"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;, and it spits out
a hash like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"setname[]=number&amp;amp;setname[]=number"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;.&lt;/p&gt;
                &lt;p&gt;&lt;em&gt;Note: If serialize returns an empty string, make sure the&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;id&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;attributes include an underscore.  They must be in the
form:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"set_number"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example, a 3 element list with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;id&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;attributes&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"foo_1"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"foo_5"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"foo_2"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will serialize to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"foo[]=1&amp;amp;foo[]=5&amp;amp;foo[]=2"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;. You can use an underscore,
equal sign or hyphen to separate the set and number. For example&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"foo=1"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"foo-1"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;, and&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"foo_1"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;all
serialize to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"foo[]=1"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;.&lt;/em&gt;&lt;/p&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; Type:
&lt;a&gt;Object&lt;/a&gt; Options to customize the serialization.
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt; (default: &lt;pre&gt;&lt;code&gt;the part of the attribute in
front of the separator&lt;/code&gt;&lt;/pre&gt;) Type: &lt;a&gt;String&lt;/a&gt; Replaces
&lt;pre&gt;&lt;code&gt;part1[]&lt;/code&gt;&lt;/pre&gt; with the specified value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;attribute&lt;/strong&gt; (default: &lt;pre&gt;&lt;code&gt;"id"&lt;/code&gt;&lt;/pre&gt;) Type:
&lt;a&gt;String&lt;/a&gt; The name of the attribute to use for the values.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;expression&lt;/strong&gt; (default: &lt;pre&gt;&lt;code&gt;/(.+)[-=_](.+)/&lt;/code&gt;&lt;/pre&gt;)
Type: &lt;a&gt;RegExp&lt;/a&gt; A regular expression used to split the attribute value
into key and value parts.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</long-description>
          <tag line="572" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="600">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="611" package="Controls\Base">
        <name>ToArray</name>
        <full_name>ToArray</full_name>
        <docblock line="603">
          <description>Serializes the sortable's item id's into an array of
string.&lt;ul&gt;&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt; Type: &lt;a&gt;Object&lt;/a&gt; Options to
customize the serialization.</description>
          <long-description>&lt;ul&gt;&lt;li&gt;&lt;strong&gt;attribute&lt;/strong&gt; (default:
&lt;pre&gt;&lt;code&gt;"id"&lt;/code&gt;&lt;/pre&gt;) Type: &lt;a&gt;String&lt;/a&gt; The name of the attribute to use for
the values.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</long-description>
          <tag line="603" name="param" description="" type="\" variable="$options"/>
        </docblock>
        <argument line="611">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="616" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="616">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="653" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="653">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="653">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="356" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="357" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <critical line="358" code="50019">No short description for property $mixAppendTo</critical>
      <critical line="360" code="50019">No short description for property $strAxis</critical>
      <critical line="362" code="50019">No short description for property $mixCancel</critical>
      <critical line="364" code="50019">No short description for property $mixConnectWith</critical>
      <critical line="366" code="50019">No short description for property $mixContainment</critical>
      <critical line="368" code="50019">No short description for property $strCursor</critical>
      <critical line="370" code="50019">No short description for property $mixCursorAt</critical>
      <critical line="372" code="50019">No short description for property $intDelay</critical>
      <critical line="374" code="50019">No short description for property $blnDisabled</critical>
      <critical line="376" code="50019">No short description for property $intDistance</critical>
      <critical line="378" code="50019">No short description for property $blnDropOnEmpty</critical>
      <critical line="380" code="50019">No short description for property $blnForceHelperSize</critical>
      <critical line="382" code="50019">No short description for property $blnForcePlaceholderSize</critical>
      <critical line="384" code="50019">No short description for property $arrGrid</critical>
      <critical line="386" code="50019">No short description for property $mixHandle</critical>
      <critical line="388" code="50019">No short description for property $mixHelper</critical>
      <critical line="390" code="50019">No short description for property $mixItems</critical>
      <critical line="392" code="50019">No short description for property $intOpacity</critical>
      <critical line="394" code="50019">No short description for property $strPlaceholder</critical>
      <critical line="396" code="50019">No short description for property $mixRevert</critical>
      <critical line="398" code="50019">No short description for property $blnScroll</critical>
      <critical line="400" code="50019">No short description for property $intScrollSensitivity</critical>
      <critical line="402" code="50019">No short description for property $intScrollSpeed</critical>
      <critical line="404" code="50019">No short description for property $strTolerance</critical>
      <critical line="406" code="50019">No short description for property $intZIndex</critical>
      <error line="409" code="50010">No DocBlock was found for method makeJsProperty()</error>
      <error line="418" code="50010">No DocBlock was found for method makeJqOptions()</error>
      <error line="449" code="50010">No DocBlock was found for method getJqSetupFunction()</error>
      <error line="453" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="457" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="616" code="50010">No DocBlock was found for method __get()</error>
      <error line="653" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDroppableBase.class.php" hash="56400418d209b7b6138d6411dd14db82" package="Default">
    <docblock line="2">
      <description>The QDroppableBase class defined here provides an interface between the generated
QDroppableGen class, and QCubed.</description>
      <long-description>&lt;p&gt;This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QDroppable.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="21" package="Controls\Base">
      <extends>\QDroppableGen</extends>
      <name>QDroppableBase</name>
      <full_name>\QDroppableBase</full_name>
      <docblock line="9">
        <description>Implements the Droppable capabilities of JQuery UI in a QControl</description>
        <long-description>&lt;p&gt;This class is designed to work as a kind of add-on class to a QControl, giving its capabilities
to the control. To make a QControl droppable, simply set $ctl-&gt;Droppable = true. You can then
get to this class to further manipulate the aspects of the droppable through $ctl-&gt;DropObj.&lt;/p&gt;</long-description>
        <tag line="9" name="property" description="ControlId of a control that was dropped onto this" type="String" variable="$DroppedId">
          <type by_reference="false">String</type>
        </tag>
        <tag line="9" name="link" description="http://jqueryui.com/droppable/" link="http://jqueryui.com/droppable/"/>
        <tag line="9" name="package" description="Controls\Base"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strDroppedId</name>
        <default>null</default>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Controls\Base">
        <name>getJqControlId</name>
        <full_name>getJqControlId</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Controls\Base">
        <name>Render</name>
        <full_name>Render</full_name>
        <argument line="32">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="33" package="Controls\Base">
        <name>GetControlHtml</name>
        <full_name>GetControlHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Controls\Base">
        <name>Validate</name>
        <full_name>Validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Controls\Base">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="56">
          <description>PHP __set magic method implementation</description>
          <long-description/>
          <tag line="56" name="param" description="Name of the property" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="Value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="throws" description="" type="\QCallerException|\QInvalidCastException">
            <type by_reference="false">\QCallerException</type>
            <type by_reference="false">\QInvalidCastException</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="Controls\Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="86">
          <description>PHP __get magic method implementation</description>
          <long-description/>
          <tag line="86" name="param" description="Property Name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="86" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="24" code="50019">No short description for property $strDroppedId</critical>
      <error line="28" code="50010">No DocBlock was found for method getJqControlId()</error>
      <error line="32" code="50010">No DocBlock was found for method Render()</error>
      <error line="33" code="50010">No DocBlock was found for method GetControlHtml()</error>
      <error line="34" code="50010">No DocBlock was found for method Validate()</error>
      <error line="35" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="44" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QTabsBase.class.php" hash="26e71fb656f960651650b8f9aaae0635" package="Default">
    <docblock line="2">
      <description>QTabs Base File</description>
      <long-description>&lt;p&gt;The QTabsBase class defined here provides an interface between the generated
QTabsGen class, and QCubed. This file is part of the core and will be overwritten
when you update QCubed. To override, make your changes to the QTabs.class.php file instead.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="23" package="Controls\Base">
      <extends>\QTabsGen</extends>
      <name>QTabsBase</name>
      <full_name>\QTabsBase</full_name>
      <docblock line="12">
        <description>Impelements JQuery Ui Tabs</description>
        <long-description>&lt;p&gt;Tabs are similary to an Accorion, but tabs along the top are used to switch between panels. The top
level html items in the panel will become the items that are switched.&lt;/p&gt;</long-description>
        <tag line="12" name="property-write" description="" type="array" variable="$Headers">
          <type by_reference="false">array</type>
        </tag>
        <tag line="12" name="link" description="http://jqueryui.com/tabs/" link="http://jqueryui.com/tabs/"/>
        <tag line="12" name="package" description="Controls\Base"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$objTabHeadersArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$blnAutoRenderChildren</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$intSelected</name>
        <default>0</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Controls\Base">
        <name>GetControlJavaScript</name>
        <full_name>GetControlJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="37" package="Controls\Base">
        <name>getSelectedInputId</name>
        <full_name>getSelectedInputId</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Controls\Base">
        <name>ParsePostData</name>
        <full_name>ParsePostData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="48" package="Controls\Base">
        <name>RenderChildren</name>
        <full_name>RenderChildren</full_name>
        <argument line="48">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="67" package="Controls\Base">
        <name>GetTabHeaderHtml</name>
        <full_name>GetTabHeaderHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Controls\Base">
        <name>SetHeader</name>
        <full_name>SetHeader</full_name>
        <docblock line="92">
          <description>Set the tab header for a tab</description>
          <long-description>&lt;p&gt;Give it a control and a name to set the header&lt;/p&gt;

&lt;p&gt;TBD: impelment ajax fetch of tab content&lt;/p&gt;</long-description>
          <tag line="92" name="param" description="either the 0-based index of the header, or the section control or that control's id" type="integer|\QControl|string" variable="$mixHeaderIndicator">
            <type by_reference="false">integer</type>
            <type by_reference="false">\QControl</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="param" description="string or control to render as the tab header" type="string|\QControl" variable="$mixHeader">
            <type by_reference="false">string</type>
            <type by_reference="false">\QControl</type>
          </tag>
          <tag line="92" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$mixHeaderIndicator</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$mixHeader</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Controls\Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="108">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="25" code="50018">No DocBlock was found for property $objTabHeadersArray</error>
      <error line="26" code="50018">No DocBlock was found for property $blnAutoRenderChildren</error>
      <error line="27" code="50018">No DocBlock was found for property $intSelected</error>
      <error line="29" code="50010">No DocBlock was found for method GetControlJavaScript()</error>
      <error line="37" code="50010">No DocBlock was found for method getSelectedInputId()</error>
      <error line="41" code="50010">No DocBlock was found for method ParsePostData()</error>
      <error line="48" code="50010">No DocBlock was found for method RenderChildren()</error>
      <error line="67" code="50010">No DocBlock was found for method GetTabHeaderHtml()</error>
      <error line="108" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/base_controls/QDialogBox.class.php" hash="0db88088ff079c23a0ad7a166d98a072" package="Controls">
    <docblock line="2">
      <description>This file contains the QDialogBox class.</description>
      <long-description/>
      <tag line="2" name="package" description="Controls"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Controls">
      <extends>\QPanel</extends>
      <name>QDialogBox</name>
      <full_name>\QDialogBox</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="package" description="Controls"/>
        <tag line="8" name="property" description="" type="string" variable="$MatteColor">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$MatteOpacity">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$MatteClickable">
          <type by_reference="false">string</type>
        </tag>
        <tag line="8" name="property" description="" type="boolean" variable="$Modal">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="8" name="property" description="" type="string" variable="$AnyKeyCloses">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$strTitle</name>
        <default>""</default>
      </property>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$strJavaScripts</name>
        <default>__JQUERY_EFFECTS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Default">
        <name>$strStyleSheets</name>
        <default>__JQUERY_CSS__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$strMatteColor</name>
        <default>'#000000'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$intMatteOpacity</name>
        <default>50</default>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strDialogWidth</name>
        <default>'350'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$blnMatteClickable</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$blnAnyKeyCloses</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$blnModal</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Controls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="34">
          <name>$objParentObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="34">
          <name>$strControlId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Controls">
        <name>GetShowDialogJavaScript</name>
        <full_name>GetShowDialogJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="Controls">
        <name>GetHideDialogJavaScript</name>
        <full_name>GetHideDialogJavaScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="Controls">
        <name>ShowDialogBox</name>
        <full_name>ShowDialogBox</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Controls">
        <name>HideDialogBox</name>
        <full_name>HideDialogBox</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Controls">
        <name>GetEndScript</name>
        <full_name>GetEndScript</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="Controls">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="90">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="Controls">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="113">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="113">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \QDialogBox</critical>
      <error line="18" code="50018">No DocBlock was found for property $strTitle</error>
      <error line="19" code="50018">No DocBlock was found for property $strJavaScripts</error>
      <error line="20" code="50018">No DocBlock was found for property $strStyleSheets</error>
      <error line="23" code="50018">No DocBlock was found for property $strMatteColor</error>
      <error line="24" code="50018">No DocBlock was found for property $intMatteOpacity</error>
      <error line="25" code="50018">No DocBlock was found for property $strDialogWidth</error>
      <error line="29" code="50018">No DocBlock was found for property $blnMatteClickable</error>
      <error line="30" code="50018">No DocBlock was found for property $blnAnyKeyCloses</error>
      <error line="32" code="50018">No DocBlock was found for property $blnModal</error>
      <error line="34" code="50010">No DocBlock was found for method __construct()</error>
      <error line="39" code="50010">No DocBlock was found for method GetShowDialogJavaScript()</error>
      <error line="60" code="50010">No DocBlock was found for method GetHideDialogJavaScript()</error>
      <error line="64" code="50010">No DocBlock was found for method ShowDialogBox()</error>
      <error line="73" code="50010">No DocBlock was found for method HideDialogBox()</error>
      <error line="79" code="50010">No DocBlock was found for method GetEndScript()</error>
      <error line="90" code="50010">No DocBlock was found for method __get()</error>
      <error line="113" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QPluginInstallerBase.class.php" hash="d5ab3a6ee0e62603a1b22a802513ca77" package="PluginManager">
    <docblock line="2">
      <description/>
      <long-description/>
      <tag line="2" name="package" description="PluginManager"/>
      <tag line="2" name="author" description="Alex Weinstein &lt;alex94040@yahoo.com&gt;"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="12" package="Default">
      <extends/>
      <name>QPluginInstallerBase</name>
      <full_name>\QPluginInstallerBase</full_name>
      <docblock line="7">
        <description>This class has shared settings and constants that are used by both the
plugin installer and uninstaller child classes.</description>
        <long-description>&lt;p&gt;It also has a very useful function for the outside world: isPluginInstalled().&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="15" package="Default">
        <name>ONLINE_PLUGIN_REPOSITORY</name>
        <full_name>ONLINE_PLUGIN_REPOSITORY</full_name>
        <value>"http://trac.qcu.be/projects/qcubed/wiki/plugins"</value>
      </constant>
      <constant namespace="global" line="17" package="Default">
        <name>PLUGIN_EXTRACTION_DIR</name>
        <full_name>PLUGIN_EXTRACTION_DIR</full_name>
        <value>"/tmp/plugin.tmp/"</value>
      </constant>
      <constant namespace="global" line="21" package="Default">
        <name>PLUGIN_CONFIG_FILE</name>
        <full_name>PLUGIN_CONFIG_FILE</full_name>
        <value>"plugin.xml"</value>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="Name of the the file defines plugin settings in XML format." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="26" package="Default">
        <name>PLUGIN_CONFIG_GENERATION_FILE</name>
        <full_name>PLUGIN_CONFIG_GENERATION_FILE</full_name>
        <value>"install.php"</value>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="Name of the the file defines plugin settings in PHP format." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="private" line="13" namespace="global" package="Default">
        <name>$strLastError</name>
        <default>""</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="29" package="Default">
        <name>getMasterConfigFilePath</name>
        <full_name>getMasterConfigFilePath</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="33" package="Default">
        <name>getMasterIncludeFilePath</name>
        <full_name>getMasterIncludeFilePath</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="37" package="Default">
        <name>getMasterExamplesFilePath</name>
        <full_name>getMasterExamplesFilePath</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="41" package="Default">
        <name>getLastError</name>
        <full_name>getLastError</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="48" package="Default">
        <name>isPluginInstalled</name>
        <full_name>isPluginInstalled</full_name>
        <docblock line="45">
          <description>Given a plugin name, returns true if a plugin with this name is installed on the system.</description>
          <long-description/>
        </docblock>
        <argument line="48">
          <name>$strPluginName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="61" package="Default">
        <name>replaceFileSection</name>
        <full_name>replaceFileSection</full_name>
        <argument line="61">
          <name>$strFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="61">
          <name>$strSearch</name>
          <default/>
          <type/>
        </argument>
        <argument line="61">
          <name>$strReplace</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="73" package="Default">
        <name>writeFileHelper</name>
        <full_name>writeFileHelper</full_name>
        <docblock line="69">
          <description>Copies the file to the destination folder for the plugin,
creating all relevant directories in the process, if necessary.</description>
          <long-description/>
        </docblock>
        <argument line="73">
          <name>$strSourcePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="73">
          <name>$strDestinationPath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="89" package="Default">
        <name>getBeginMarker</name>
        <full_name>getBeginMarker</full_name>
        <argument line="89">
          <name>$strId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="93" package="Default">
        <name>getEndMarker</name>
        <full_name>getEndMarker</full_name>
        <argument line="93">
          <name>$strId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="97" package="Default">
        <name>cleanupExtractedFiles</name>
        <full_name>cleanupExtractedFiles</full_name>
        <argument line="97">
          <name>$strExtractedFolderName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="103" package="Default">
        <name>stripExtraNewlines</name>
        <full_name>stripExtraNewlines</full_name>
        <argument line="103">
          <name>$strInput</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file qcubed/_core/framework/QPluginInstallerBase.class.php</critical>
      <error line="13" code="50018">No DocBlock was found for property $strLastError</error>
      <error line="29" code="50010">No DocBlock was found for method getMasterConfigFilePath()</error>
      <error line="33" code="50010">No DocBlock was found for method getMasterIncludeFilePath()</error>
      <error line="37" code="50010">No DocBlock was found for method getMasterExamplesFilePath()</error>
      <error line="41" code="50010">No DocBlock was found for method getLastError()</error>
      <error line="45" code="50015">Argument $strPluginName is missing from the Docblock of isPluginInstalled()</error>
      <error line="61" code="50010">No DocBlock was found for method replaceFileSection()</error>
      <error line="69" code="50015">Argument $strSourcePath is missing from the Docblock of writeFileHelper()</error>
      <error line="69" code="50015">Argument $strDestinationPath is missing from the Docblock of writeFileHelper()</error>
      <error line="89" code="50010">No DocBlock was found for method getBeginMarker()</error>
      <error line="93" code="50010">No DocBlock was found for method getEndMarker()</error>
      <error line="97" code="50010">No DocBlock was found for method cleanupExtractedFiles()</error>
      <error line="103" code="50010">No DocBlock was found for method stripExtraNewlines()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QDbBackedSessionHandler.class.php" hash="53336b16f8bfa55f4a6bf8346820d5c9" package="Default">
    <class final="false" abstract="false" namespace="global" line="10" package="Sessions">
      <extends>\QBaseClass</extends>
      <name>QDbBackedSessionHandler</name>
      <full_name>\QDbBackedSessionHandler</full_name>
      <docblock line="3">
        <description>Created by vaibhav on 1/28/12 (3:34 AM).</description>
        <long-description>&lt;p&gt;This file contains the QDbBackedSessionHandler class.&lt;/p&gt;</long-description>
        <tag line="3" name="package" description="Sessions"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="15" namespace="global" package="Default">
        <name>$intDbIndex</name>
        <default/>
        <docblock line="12">
          <description/>
          <long-description/>
          <tag line="12" name="var" description="The index in the database array" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="20" namespace="global" package="Default">
        <name>$strTableName</name>
        <default/>
        <docblock line="17">
          <description/>
          <long-description/>
          <tag line="17" name="var" description="The table name to be used for saving sessions." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="28" package="Sessions">
        <name>Initialize</name>
        <full_name>Initialize</full_name>
        <docblock line="22">
          <description/>
          <long-description/>
          <tag line="22" name="static" description=""/>
          <tag line="22" name="param" description="The index in the database array" type="int" variable="$intDbIndex">
            <type by_reference="false">int</type>
          </tag>
          <tag line="22" name="param" description="The table name to be used for saving sessions." type="string" variable="$strTableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="22" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$intDbIndex</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="28">
          <name>$strTableName</name>
          <default>"qc_session"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="58" package="Sessions">
        <name>SessionOpen</name>
        <full_name>SessionOpen</full_name>
        <argument line="58">
          <name>$save_path</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$session_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="63" package="Sessions">
        <name>SessionClose</name>
        <full_name>SessionClose</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="68" package="Sessions">
        <name>SessionRead</name>
        <full_name>SessionRead</full_name>
        <argument line="68">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="93" package="Sessions">
        <name>SessionExists</name>
        <full_name>SessionExists</full_name>
        <argument line="93">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="110" package="Sessions">
        <name>SessionWrite</name>
        <full_name>SessionWrite</full_name>
        <argument line="110">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="110">
          <name>$strSessionData</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="129" package="Sessions">
        <name>SessionDestroy</name>
        <full_name>SessionDestroy</full_name>
        <argument line="129">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="141" package="Sessions">
        <name>SessionGarbageCollect</name>
        <full_name>SessionGarbageCollect</full_name>
        <argument line="141">
          <name>$intMaxSessionLifetime</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QDbBackedSessionHandler.class.php</error>
      <error line="22" code="50012">No short description for method Initialize()</error>
      <error line="58" code="50010">No DocBlock was found for method SessionOpen()</error>
      <error line="63" code="50010">No DocBlock was found for method SessionClose()</error>
      <error line="68" code="50010">No DocBlock was found for method SessionRead()</error>
      <error line="93" code="50010">No DocBlock was found for method SessionExists()</error>
      <error line="110" code="50010">No DocBlock was found for method SessionWrite()</error>
      <error line="129" code="50010">No DocBlock was found for method SessionDestroy()</error>
      <error line="141" code="50010">No DocBlock was found for method SessionGarbageCollect()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QTimer.class.php" hash="2a8f7c7d51e12b502163dd3e0b87a750" package="Default">
    <class final="false" abstract="false" namespace="global" line="10" package="Default">
      <extends/>
      <name>QTimer</name>
      <full_name>\QTimer</full_name>
      <docblock line="3">
        <description>QTimer class can help you lightweight profiling of your applications.</description>
        <long-description>&lt;p&gt;Use it to measure how long tasks take.&lt;/p&gt;</long-description>
        <tag line="3" name="author" description="Ago Luberg"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$strName</name>
        <default/>
        <docblock line="11">
          <description>Name of the timer</description>
          <long-description/>
          <tag line="11" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Default">
        <name>$intCountStarted</name>
        <default>0</default>
        <docblock line="16">
          <description>Total count of timer starts</description>
          <long-description/>
          <tag line="16" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$fltTimeStart</name>
        <default>-1</default>
        <docblock line="21">
          <description>Timer start time.</description>
          <long-description>&lt;p&gt;If -1, then timer is not started&lt;/p&gt;</long-description>
          <tag line="21" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$fltTime</name>
        <default>0</default>
        <docblock line="26">
          <description>Timer run time.</description>
          <long-description>&lt;p&gt;If timer is stopped, then execution time is kept here&lt;/p&gt;</long-description>
          <tag line="26" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="119" namespace="global" package="Default">
        <name>$objTimerArray</name>
        <default>array()</default>
        <docblock line="115">
          <description>Array of QTime instances</description>
          <long-description/>
          <tag line="115" name="var" description="" type="\QTimer[]">
            <type by_reference="false">\QTimer[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="38" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="32">
          <description>QTimer - private constructor (Factory Pattern)</description>
          <long-description/>
          <tag line="32" name="param" description="Timer name" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="param" description="Whether timer is started" type="boolean" variable="$blnStart">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="32" name="return" description="" type="\QTimer">
            <type by_reference="false">\QTimer</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$blnStart</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Default">
        <name>StartTimer</name>
        <full_name>StartTimer</full_name>
        <docblock line="45">
          <description>Starts timer</description>
          <long-description/>
          <tag line="45" name="return" description="" type="\QTimer">
            <type by_reference="false">\QTimer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="62" package="Default">
        <name>GetTimerTime</name>
        <full_name>GetTimerTime</full_name>
        <docblock line="58">
          <description>Returns timer's time</description>
          <long-description/>
          <tag line="58" name="return" description="Timer's time. If timer is not running, returns null." type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Default">
        <name>ResetTimer</name>
        <full_name>ResetTimer</full_name>
        <docblock line="69">
          <description>Resets timer</description>
          <long-description/>
          <tag line="69" name="return" description="Timer's time before reset" type="\flat">
            <type by_reference="false">\flat</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="Default">
        <name>StopTimer</name>
        <full_name>StopTimer</full_name>
        <docblock line="80">
          <description>Stops timer.</description>
          <long-description>&lt;p&gt;Saves current time for later usage&lt;/p&gt;</long-description>
          <tag line="80" name="return" description="Timer's time" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="90">
          <description>Default toString method for timer</description>
          <long-description/>
          <tag line="90" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="101" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="101">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="126" package="Default">
        <name>Start</name>
        <full_name>Start</full_name>
        <docblock line="121">
          <description>Starts (new) timer with given name</description>
          <long-description/>
          <tag line="121" name="param" description="Timer name" type="\string[optional]" variable="$strName">
            <type by_reference="false">\string[optional]</type>
          </tag>
          <tag line="121" name="return" description="" type="\QTimer">
            <type by_reference="false">\QTimer</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$strName</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="136" package="Default">
        <name>GetTime</name>
        <full_name>GetTime</full_name>
        <docblock line="131">
          <description>Gets time from timer with given name</description>
          <long-description/>
          <tag line="131" name="param" description="Timer name" type="\string[optional]" variable="$strName">
            <type by_reference="false">\string[optional]</type>
          </tag>
          <tag line="131" name="return" description="Timer's time" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$strName</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="150" package="Default">
        <name>Stop</name>
        <full_name>Stop</full_name>
        <docblock line="145">
          <description>Stops time for timer with given name</description>
          <long-description/>
          <tag line="145" name="param" description="Timer name" type="\string[optional]" variable="$strName">
            <type by_reference="false">\string[optional]</type>
          </tag>
          <tag line="145" name="return" description="Timer's time" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$strName</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="164" package="Default">
        <name>Reset</name>
        <full_name>Reset</full_name>
        <docblock line="159">
          <description>Resets timer with given name</description>
          <long-description/>
          <tag line="159" name="param" description="Timer name" type="\string[optional]" variable="$strName">
            <type by_reference="false">\string[optional]</type>
          </tag>
          <tag line="159" name="return" description="Timer's time before reset or null if timer does not exist" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$strName</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="177" package="Default">
        <name>GetTimer</name>
        <full_name>GetTimer</full_name>
        <docblock line="172">
          <description>Returns timer with a given name</description>
          <long-description/>
          <tag line="172" name="param" description="Timer name" type="\string[optional]" variable="$strName">
            <type by_reference="false">\string[optional]</type>
          </tag>
          <tag line="172" name="return" description="or null if a timer was not found" type="\QTimer">
            <type by_reference="false">\QTimer</type>
          </tag>
        </docblock>
        <argument line="177">
          <name>$strName</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="186" package="Default">
        <name>GetTimerInstance</name>
        <full_name>GetTimerInstance</full_name>
        <argument line="186">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="186">
          <name>$blnCreateNew</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="204" package="Default">
        <name>VarDump</name>
        <full_name>VarDump</full_name>
        <docblock line="199">
          <description>Dumps all the timers and their info</description>
          <long-description/>
          <tag line="199" name="param" description="If true (default), dump will be printed. If false, dump will be returned" type="\boolean[optional]" variable="$blnDisplayOutput">
            <type by_reference="false">\boolean[optional]</type>
          </tag>
          <tag line="199" name="return" description="" type="string|void">
            <type by_reference="false">string</type>
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$blnDisplayOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QTimer.class.php</error>
      <error line="101" code="50010">No DocBlock was found for method __get()</error>
      <error line="186" code="50010">No DocBlock was found for method GetTimerInstance()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QFile.class.php" hash="b1c861a7c77320441e99d6f42bba8c7a" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>QFile</name>
      <full_name>\QFile</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="4" package="Default">
        <name>readFile</name>
        <full_name>readFile</full_name>
        <argument line="4">
          <name>$strFilePath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="15" package="Default">
        <name>writeFile</name>
        <full_name>writeFile</full_name>
        <argument line="15">
          <name>$strFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="15">
          <name>$strContents</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="36" package="Default">
        <name>isWritable</name>
        <full_name>isWritable</full_name>
        <docblock line="27">
          <description>Will work despite of Windows ACLs bug</description>
          <long-description>&lt;p&gt;NOTE: use a trailing slash for folders!!!&lt;/p&gt;

&lt;p&gt;See http://bugs.php.net/bug.php?id=27609 AND http://bugs.php.net/bug.php?id=30931
Source: &lt;a href="http://www.php.net/is_writable#73596"&gt;http://www.php.net/is_writable#73596&lt;/a&gt;&lt;/p&gt;</long-description>
        </docblock>
        <argument line="36">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QFile.class.php</error>
      <error line="3" code="50000">No DocBlock was found for \QFile</error>
      <error line="4" code="50010">No DocBlock was found for method readFile()</error>
      <error line="15" code="50010">No DocBlock was found for method writeFile()</error>
      <error line="27" code="50015">Argument $path is missing from the Docblock of isWritable()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QI18n.class.php" hash="7a9ee98da1d7205b5e8112883eae27cd" package="Default">
    <class final="false" abstract="false" namespace="global" line="8" package="Default">
      <extends>\QBaseClass</extends>
      <name>QI18n</name>
      <full_name>\QI18n</full_name>
      <docblock line="3">
        <description>Factory class for translations</description>
        <long-description/>
        <tag line="3" name="author" description="Ago Luberg"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="15" namespace="global" package="Default">
        <name>$DefaultTranslationClass</name>
        <default>'QTranslationPoParser'</default>
        <docblock line="9">
          <description>Default translation class.</description>
          <long-description>&lt;p&gt;If this is specified, both Initialize and Load
methods will create an instance of given translation (if not different class
is not specified).&lt;/p&gt;</long-description>
          <tag line="9" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="26" package="Default">
        <name>Initialize</name>
        <full_name>Initialize</full_name>
        <docblock line="17">
          <description>Initializes application translation.</description>
          <long-description>&lt;p&gt;Creates an instance of translation and sets it
to QApplication::$LanguageObject&lt;/p&gt;</long-description>
          <tag line="17" name="param" description="Translation class name" type="\string[optional]" variable="$strTranslationClass">
            <type by_reference="false">\string[optional]</type>
          </tag>
          <tag line="17" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="17" name="return" description="" type="\QTranslationBase">
            <type by_reference="false">\QTranslationBase</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$strTranslationClass</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="49" package="Default">
        <name>Load</name>
        <full_name>Load</full_name>
        <docblock line="36">
          <description>Loads translation with given language and country code.</description>
          <long-description/>
          <tag line="36" name="param" description="" type="null" variable="$strLanguageCode">
            <type by_reference="false">null</type>
          </tag>
          <tag line="36" name="param" description="" type="null" variable="$strCountryCode">
            <type by_reference="false">null</type>
          </tag>
          <tag line="36" name="param" description="" type="null" variable="$strTranslationClass">
            <type by_reference="false">null</type>
          </tag>
          <tag line="36" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="36" name="internal" description="param $string [optional] $strLanguageCode Language code"/>
          <tag line="36" name="internal" description="param $string [optional] $strCountryCode Country code"/>
          <tag line="36" name="internal" description="param $string [optional] $strTranslationClass Translation class name"/>
          <tag line="36" name="return" description="" type="\QTranslationBase">
            <type by_reference="false">\QTranslationBase</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$strLanguageCode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="49">
          <name>$strCountryCode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="49">
          <name>$strTranslationClass</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QI18n.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QCacheProviderLocalMemory.class.php" hash="eacdf9465fc4ceaee54497b4ef0072c6" package="Default">
    <class final="false" abstract="false" namespace="global" line="9" package="Default">
      <extends>\QAbstractCacheProvider</extends>
      <name>QCacheProviderLocalMemory</name>
      <full_name>\QCacheProviderLocalMemory</full_name>
      <docblock line="4">
        <description>Cache provider that uses a local in memory array.</description>
        <long-description>&lt;p&gt;The lifespan of this cache is the request, unless 'KeepInSession' option is used, in which case the lifespan
is the session.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="11" namespace="global" package="Default">
        <name>$arrLocalCache</name>
        <default/>
        <docblock line="10">
          <description/>
          <long-description/>
          <tag line="10" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="param" description="configuration options for this cache provider. Currently supported options are&#10;  'KeepInSession': if set to true the cache will be kept in session" type="array" variable="$objOptionsArray">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="17">
          <name>$objOptionsArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>Get</name>
        <full_name>Get</full_name>
        <docblock line="28">
          <description>Get the object that has the given key from the cache</description>
          <long-description/>
          <tag line="28" name="param" description="the key of the object in the cache" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="Default">
        <name>Set</name>
        <full_name>Set</full_name>
        <docblock line="47">
          <description>Set the object into the cache with the given key</description>
          <long-description/>
          <tag line="47" name="param" description="the key to use for the object" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="param" description="the object to put in the cache" type="object" variable="$objValue">
            <type by_reference="false">object</type>
          </tag>
          <tag line="47" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="53">
          <name>$objValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Default">
        <name>Delete</name>
        <full_name>Delete</full_name>
        <docblock line="64">
          <description>Delete the object that has the given key from the cache</description>
          <long-description/>
          <tag line="64" name="param" description="the key of the object in the cache" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Default">
        <name>DeleteAll</name>
        <full_name>DeleteAll</full_name>
        <docblock line="75">
          <description>Invalidate all the objects in the cache</description>
          <long-description/>
          <tag line="75" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QCacheProviderLocalMemory.class.php</error>
      <critical line="10" code="50019">No short description for property $arrLocalCache</critical>
      <error line="13" code="50012">No short description for method __construct()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QRssFeed.class.php" hash="fc27b16cffe91fb024719b751fd5d138" package="Default">
    <class final="false" abstract="false" namespace="global" line="2" package="Default">
      <extends>\QBaseClass</extends>
      <name>QRssFeed</name>
      <full_name>\QRssFeed</full_name>
      <property final="false" static="false" visibility="protected" line="4" namespace="global" package="Default">
        <name>$strTitle</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="5" namespace="global" package="Default">
        <name>$strLink</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="6" namespace="global" package="Default">
        <name>$strDescription</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="11" namespace="global" package="Default">
        <name>$strLanguage</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="12" namespace="global" package="Default">
        <name>$strCopyright</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="13" namespace="global" package="Default">
        <name>$strManagingEditor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="14" namespace="global" package="Default">
        <name>$strWebMaster</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$dttPubDate</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="16" namespace="global" package="Default">
        <name>$dttLastBuildDate</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$strGenerator</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$strDocs</name>
        <default>'http://blogs.law.harvard.edu/tech/rss'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="21" namespace="global" package="Default">
        <name>$strTtl</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="22" namespace="global" package="Default">
        <name>$objImage</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$objItemArray</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="30">
          <name>$strTitle</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$strLink</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$strDescription</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Default">
        <name>GetXml</name>
        <full_name>GetXml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Default">
        <name>Run</name>
        <full_name>Run</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="Default">
        <name>AddItem</name>
        <full_name>AddItem</full_name>
        <argument line="84">
          <name>$objItem</name>
          <default/>
          <type>\QRssItem</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="88">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="112" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="112">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="112">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="137" package="Default">
      <extends>\QBaseClass</extends>
      <name>QRssImage</name>
      <full_name>\QRssImage</full_name>
      <property final="false" static="false" visibility="protected" line="138" namespace="global" package="Default">
        <name>$strUrl</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="139" namespace="global" package="Default">
        <name>$strTitle</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="140" namespace="global" package="Default">
        <name>$strLink</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="142">
          <name>$strUrl</name>
          <default/>
          <type/>
        </argument>
        <argument line="142">
          <name>$strTitle</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="142">
          <name>$strLink</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="Default">
        <name>GetXml</name>
        <full_name>GetXml</full_name>
        <argument line="148">
          <name>$strTitle</name>
          <default/>
          <type/>
        </argument>
        <argument line="148">
          <name>$strLink</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="171" package="Default">
      <extends>\QBaseClass</extends>
      <name>QRssCategory</name>
      <full_name>\QRssCategory</full_name>
      <property final="false" static="false" visibility="protected" line="172" namespace="global" package="Default">
        <name>$strCategory</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="173" namespace="global" package="Default">
        <name>$strDomain</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="175">
          <name>$strCategory</name>
          <default/>
          <type/>
        </argument>
        <argument line="175">
          <name>$strDomain</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="180" package="Default">
        <name>GetXml</name>
        <full_name>GetXml</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="188" package="Default">
      <extends>\QBaseClass</extends>
      <name>QRssItem</name>
      <full_name>\QRssItem</full_name>
      <property final="false" static="false" visibility="protected" line="190" namespace="global" package="Default">
        <name>$strTitle</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="191" namespace="global" package="Default">
        <name>$strLink</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="192" namespace="global" package="Default">
        <name>$strDescription</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="197" namespace="global" package="Default">
        <name>$strAuthor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="198" namespace="global" package="Default">
        <name>$objCategoryArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="199" namespace="global" package="Default">
        <name>$strComments</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="201" namespace="global" package="Default">
        <name>$strGuid</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="202" namespace="global" package="Default">
        <name>$blnGuidPermaLink</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="203" namespace="global" package="Default">
        <name>$dttPubDate</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="206" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="206">
          <name>$strTitle</name>
          <default/>
          <type/>
        </argument>
        <argument line="206">
          <name>$strLink</name>
          <default/>
          <type/>
        </argument>
        <argument line="206">
          <name>$strDescription</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="212" package="Default">
        <name>GetXml</name>
        <full_name>GetXml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="234" package="Default">
        <name>AddCategory</name>
        <full_name>AddCategory</full_name>
        <argument line="234">
          <name>$objCategory</name>
          <default/>
          <type>\QRssCategory</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="238">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="257">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="257">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="9">Fields that are commented out are currently not supported because they are either</todo>
      <todo line="195">Fields that are commented out are currently not supported because they are either</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QRssFeed.class.php</error>
      <error line="2" code="50000">No DocBlock was found for \QRssFeed</error>
      <error line="4" code="50018">No DocBlock was found for property $strTitle</error>
      <error line="5" code="50018">No DocBlock was found for property $strLink</error>
      <error line="6" code="50018">No DocBlock was found for property $strDescription</error>
      <error line="11" code="50018">No DocBlock was found for property $strLanguage</error>
      <error line="12" code="50018">No DocBlock was found for property $strCopyright</error>
      <error line="13" code="50018">No DocBlock was found for property $strManagingEditor</error>
      <error line="14" code="50018">No DocBlock was found for property $strWebMaster</error>
      <error line="15" code="50018">No DocBlock was found for property $dttPubDate</error>
      <error line="16" code="50018">No DocBlock was found for property $dttLastBuildDate</error>
      <error line="18" code="50018">No DocBlock was found for property $strGenerator</error>
      <error line="19" code="50018">No DocBlock was found for property $strDocs</error>
      <error line="21" code="50018">No DocBlock was found for property $strTtl</error>
      <error line="22" code="50018">No DocBlock was found for property $objImage</error>
      <error line="28" code="50018">No DocBlock was found for property $objItemArray</error>
      <error line="30" code="50010">No DocBlock was found for method __construct()</error>
      <error line="38" code="50010">No DocBlock was found for method GetXml()</error>
      <error line="73" code="50010">No DocBlock was found for method Run()</error>
      <error line="84" code="50010">No DocBlock was found for method AddItem()</error>
      <error line="88" code="50010">No DocBlock was found for method __get()</error>
      <error line="112" code="50010">No DocBlock was found for method __set()</error>
      <error line="137" code="50000">No DocBlock was found for \QRssImage</error>
      <error line="138" code="50018">No DocBlock was found for property $strUrl</error>
      <error line="139" code="50018">No DocBlock was found for property $strTitle</error>
      <error line="140" code="50018">No DocBlock was found for property $strLink</error>
      <error line="142" code="50010">No DocBlock was found for method __construct()</error>
      <error line="148" code="50010">No DocBlock was found for method GetXml()</error>
      <error line="171" code="50000">No DocBlock was found for \QRssCategory</error>
      <error line="172" code="50018">No DocBlock was found for property $strCategory</error>
      <error line="173" code="50018">No DocBlock was found for property $strDomain</error>
      <error line="175" code="50010">No DocBlock was found for method __construct()</error>
      <error line="180" code="50010">No DocBlock was found for method GetXml()</error>
      <error line="188" code="50000">No DocBlock was found for \QRssItem</error>
      <error line="190" code="50018">No DocBlock was found for property $strTitle</error>
      <error line="191" code="50018">No DocBlock was found for property $strLink</error>
      <error line="192" code="50018">No DocBlock was found for property $strDescription</error>
      <error line="197" code="50018">No DocBlock was found for property $strAuthor</error>
      <error line="198" code="50018">No DocBlock was found for property $objCategoryArray</error>
      <error line="199" code="50018">No DocBlock was found for property $strComments</error>
      <error line="201" code="50018">No DocBlock was found for property $strGuid</error>
      <error line="202" code="50018">No DocBlock was found for property $blnGuidPermaLink</error>
      <error line="203" code="50018">No DocBlock was found for property $dttPubDate</error>
      <error line="206" code="50010">No DocBlock was found for method __construct()</error>
      <error line="212" code="50010">No DocBlock was found for method GetXml()</error>
      <error line="234" code="50010">No DocBlock was found for method AddCategory()</error>
      <error line="238" code="50010">No DocBlock was found for method __get()</error>
      <error line="257" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QCryptography.class.php" hash="fbc13cd6655d6e4e08c239044417199e" package="Default">
    <class final="false" abstract="false" namespace="global" line="4" package="Default">
      <extends>\QCallerException</extends>
      <name>QCryptographyException</name>
      <full_name>\QCryptographyException</full_name>
    </class>
    <class final="false" abstract="false" namespace="global" line="6" package="Default">
      <extends>\QBaseClass</extends>
      <name>QCryptography</name>
      <full_name>\QCryptography</full_name>
      <property final="false" static="false" visibility="protected" line="7" namespace="global" package="Default">
        <name>$objMcryptModule</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="8" namespace="global" package="Default">
        <name>$blnBase64</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="10" namespace="global" package="Default">
        <name>$strKey</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="11" namespace="global" package="Default">
        <name>$strIv</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="23" namespace="global" package="Default">
        <name>$Base64</name>
        <default>true</default>
        <docblock line="13">
          <description>Default Base64 mode for any new QCryptography instances that get constructed.</description>
          <long-description>&lt;p&gt;This is similar to MIME-based Base64 encoding/decoding, but is safe to use
in URLs, POST/GET data, and any other text-based stream.&lt;/p&gt;

&lt;p&gt;Note that by setting Base64 to true, it will result in an encrypted data string
that is 33% larger.&lt;/p&gt;</long-description>
          <tag line="13" name="var" description="Base64" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="29" namespace="global" package="Default">
        <name>$Key</name>
        <default>"qc0Do!d3F@lT.k3Y"</default>
        <docblock line="25">
          <description>Default Key for any new QCryptography instances that get constructed</description>
          <long-description/>
          <tag line="25" name="var" description="Key" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description>The Random Number Generator the library uses to generate the IV:
 - MCRYPT_DEV_RANDOM = /dev/random (only on *nix systems)
 - MCRYPT_DEV_URANDOM = /dev/urandom (only on *nix systems)
 - MCRYPT_RAND = the internal PHP srand() mechanism
(on Windows, you *must* use MCRYPT_RAND, b/c /dev/random and /dev/urandom doesn't exist)</description>
          <long-description>&lt;p&gt;TODO: there appears to be some /dev/random locking issues on the QCubed development
environment (using Fedora Core 3 with PHP 5.0.4 and LibMcrypt 2.5.7).  Because of this,
we are using MCRYPT_RAND be default.  Feel free to change to to /dev/*random at your own risk.&lt;/p&gt;</long-description>
        </docblock>
        <argument line="42">
          <name>$strKey</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="42">
          <name>$blnBase64</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="42">
          <name>$strCipher</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="42">
          <name>$strMode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="42">
          <name>$strRandomSource</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="115" package="Default">
        <name>Encrypt</name>
        <full_name>Encrypt</full_name>
        <argument line="115">
          <name>$strData</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="139" package="Default">
        <name>Decrypt</name>
        <full_name>Decrypt</full_name>
        <argument line="139">
          <name>$strEncryptedData</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="Default">
        <name>EncryptFile</name>
        <full_name>EncryptFile</full_name>
        <argument line="168">
          <name>$strFile</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="176" package="Default">
        <name>DecryptFile</name>
        <full_name>DecryptFile</full_name>
        <argument line="176">
          <name>$strFile</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="184" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QCryptography.class.php</error>
      <error line="4" code="50000">No DocBlock was found for \QCryptographyException</error>
      <error line="6" code="50000">No DocBlock was found for \QCryptography</error>
      <error line="7" code="50018">No DocBlock was found for property $objMcryptModule</error>
      <error line="8" code="50018">No DocBlock was found for property $blnBase64</error>
      <error line="10" code="50018">No DocBlock was found for property $strKey</error>
      <error line="11" code="50018">No DocBlock was found for property $strIv</error>
      <error line="31" code="50015">Argument $strKey is missing from the Docblock of __construct()</error>
      <error line="31" code="50015">Argument $blnBase64 is missing from the Docblock of __construct()</error>
      <error line="31" code="50015">Argument $strCipher is missing from the Docblock of __construct()</error>
      <error line="31" code="50015">Argument $strMode is missing from the Docblock of __construct()</error>
      <error line="31" code="50015">Argument $strRandomSource is missing from the Docblock of __construct()</error>
      <error line="115" code="50010">No DocBlock was found for method Encrypt()</error>
      <error line="139" code="50010">No DocBlock was found for method Decrypt()</error>
      <error line="168" code="50010">No DocBlock was found for method EncryptFile()</error>
      <error line="176" code="50010">No DocBlock was found for method DecryptFile()</error>
      <error line="184" code="50010">No DocBlock was found for method __destruct()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QCss.class.php" hash="1d9db2af0cc627f0e58b82baeb08e39b" package="Default">
    <docblock line="2">
      <description>An abstract utility class to handle Css manipulation.</description>
      <long-description>&lt;p&gt;All methods
are statically available.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="11" package="Default">
      <extends/>
      <name>QCss</name>
      <full_name>\QCss</full_name>
      <docblock line="7">
        <description>An abstract utility class to handle Css manipulation.</description>
        <long-description>&lt;p&gt;All methods
are statically available.&lt;/p&gt;</long-description>
      </docblock>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="12">
          <description>This faux constructor method throws a caller exception.</description>
          <long-description>&lt;p&gt;The Css object should never be instantiated, and this constructor
override simply guarantees it.&lt;/p&gt;</long-description>
          <tag line="12" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="12" name="return" description="" type="\QCss">
            <type by_reference="false">\QCss</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="30" package="Default">
        <name>FormatLength</name>
        <full_name>FormatLength</full_name>
        <docblock line="24">
          <description>Returns the formatted value of type &lt;length&gt;.</description>
          <long-description>&lt;p&gt;See http://www.w3.org/TR/CSS1/#units for more info.&lt;/p&gt;</long-description>
          <tag line="24" name="param" description="The number or string to be formatted to the &lt;length&gt; compatible value." type="string" variable="$strValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="return" description="the formatted value of type &lt;length&gt;." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="qcubed/_core/framework/QExceptions.class.php" hash="3c129141475da8f52abb11655fab1117" package="Default">
    <class final="false" abstract="false" namespace="global" line="41" package="Default">
      <extends>\Exception</extends>
      <name>QCallerException</name>
      <full_name>\QCallerException</full_name>
      <docblock line="2">
        <description>This is the main exception to be thrown by any
method to indicate that the CALLER is responsible for
causing the exception.</description>
        <long-description>&lt;p&gt;This works in conjunction with Qcodo's
error handling/reporting, so that the correct file/line-number is
displayed to the user.&lt;/p&gt;

&lt;p&gt;So for example, for a class that contains the method GetItemAtIndex($intIndex),
it is conceivable that the caller could call GetItemAtIndex(15), where 15 does not exist.
GetItemAtIndex would then thrown an IndexOutOfRangeException (which extends CallerException).
If the CallerException is not caught, then the Exception will be reported to the user.  The CALLER
(the script who CALLED GetItemAtIndex) would have that line highlighted as being responsible
for calling the error.&lt;/p&gt;

&lt;p&gt;The PHP default for exeception reporting would normally say that the "throw Exception" line in GetItemAtIndex
is responsible for throwing the exception.  While this is technically true, in reality, it was the line that
CALLED GetItemAtIndex which is responsible.  In short, this allows for much cleaner exception reporting.&lt;/p&gt;

&lt;p&gt;On a more in-depth note, in general, suppose a method OuterMethod takes in parameters, and ends up passing those
paremeters into ANOTHER method InnerMethod which could throw a CallerException.  OuterMethod is responsible
for catching and rethrowing the caller exception.  And when this is done, IncrementOffset() MUST be called on
the exception object, to indicate that OuterMethod's CALLER is responsible for the exception.&lt;/p&gt;

&lt;p&gt;So the code snippet to call InnerMethod by OuterMethod should look like:
function OuterMethod($mixValue) {
    try {
        InnerMethod($mixValue);
    } catch (CallerException $objExc) {
        $objExc-&gt;IncrementOffset();
        throw $objExc;
    }
    // Do Other Stuff
}
Again, this will assure the user that the line of code responsible for the excpetion is properly being reported
by the QCubed error reporting/handler.&lt;/p&gt;</long-description>
        <tag line="2" name="property-read" description="The exception offset." type="int" variable="$Offset">
          <type by_reference="false">int</type>
        </tag>
        <tag line="2" name="property-read" description="The exception backtrace." type="string" variable="$BackTrace">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="The exception backtrace in a form of an array." type="string" variable="$TraceArray">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="private" line="42" namespace="global" package="Default">
        <name>$intOffset</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="43" namespace="global" package="Default">
        <name>$strTraceArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Default">
        <name>setMessage</name>
        <full_name>setMessage</full_name>
        <argument line="45">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>The constructor of CallerExceptions.</description>
          <long-description>&lt;p&gt;Takes in a message string
as well as an optional Offset parameter (defaults to 1).
The Offset specificies how many calls up the call stack is responsible
for the exception.  By definition, when a CallerException is called,
at the very least the Caller of the most immediate function, which is
1 up the call stack, is responsible.  So therefore, by default, intOffset
is set to 1.&lt;/p&gt;

&lt;p&gt;It is rare for intOffset to be set to an integer other than 1.&lt;/p&gt;

&lt;p&gt;Normally, the Offset would be altered by calls to IncrementOffset
at every step the CallerException is caught/rethrown up the call stack.&lt;/p&gt;</long-description>
          <tag line="49" name="param" description="the Message of the exception" type="string" variable="$strMessage">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="the optional Offset value (currently defaulted to 1)" type="integer" variable="$intOffset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="49" name="return" description="the new exception" type="\CallerException">
            <type by_reference="false">\CallerException</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$intOffset</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Default">
        <name>IncrementOffset</name>
        <full_name>IncrementOffset</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Default">
        <name>DecrementOffset</name>
        <full_name>DecrementOffset</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="99">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="112" package="Default">
      <extends>\QCallerException</extends>
      <name>QUndefinedPrimaryKeyException</name>
      <full_name>\QUndefinedPrimaryKeyException</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="113">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="118" package="Default">
      <extends>\QCallerException</extends>
      <name>QIndexOutOfRangeException</name>
      <full_name>\QIndexOutOfRangeException</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="119">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
        <argument line="119">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="126" package="Default">
      <extends>\QCallerException</extends>
      <name>QUndefinedPropertyException</name>
      <full_name>\QUndefinedPropertyException</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="127">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
        <argument line="127">
          <name>$strClass</name>
          <default/>
          <type/>
        </argument>
        <argument line="127">
          <name>$strProperty</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="132" package="Default">
      <extends>\QCallerException</extends>
      <name>QOptimisticLockingException</name>
      <full_name>\QOptimisticLockingException</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="133">
          <name>$strClass</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="138" package="Default">
      <extends>\QCallerException</extends>
      <name>QRemoteAdminDeniedException</name>
      <full_name>\QRemoteAdminDeniedException</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="139" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="145" package="Default">
      <extends>\QCallerException</extends>
      <name>QInvalidFormStateException</name>
      <full_name>\QInvalidFormStateException</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="146" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="146">
          <name>$strFormId</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QExceptions.class.php</error>
      <error line="42" code="50018">No DocBlock was found for property $intOffset</error>
      <error line="43" code="50018">No DocBlock was found for property $strTraceArray</error>
      <error line="45" code="50010">No DocBlock was found for method setMessage()</error>
      <error line="75" code="50010">No DocBlock was found for method IncrementOffset()</error>
      <error line="87" code="50010">No DocBlock was found for method DecrementOffset()</error>
      <error line="99" code="50010">No DocBlock was found for method __get()</error>
      <error line="112" code="50000">No DocBlock was found for \QUndefinedPrimaryKeyException</error>
      <error line="113" code="50010">No DocBlock was found for method __construct()</error>
      <error line="118" code="50000">No DocBlock was found for \QIndexOutOfRangeException</error>
      <error line="119" code="50010">No DocBlock was found for method __construct()</error>
      <error line="126" code="50000">No DocBlock was found for \QUndefinedPropertyException</error>
      <error line="127" code="50010">No DocBlock was found for method __construct()</error>
      <error line="132" code="50000">No DocBlock was found for \QOptimisticLockingException</error>
      <error line="133" code="50010">No DocBlock was found for method __construct()</error>
      <error line="138" code="50000">No DocBlock was found for \QRemoteAdminDeniedException</error>
      <error line="139" code="50010">No DocBlock was found for method __construct()</error>
      <error line="145" code="50000">No DocBlock was found for \QInvalidFormStateException</error>
      <error line="146" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QMultiLevelCacheProvider.class.php" hash="90a9662883b85342435bf4e51ce555b8" package="Default">
    <class final="false" abstract="false" namespace="global" line="9" package="Default">
      <extends>\QAbstractCacheProvider</extends>
      <name>QMultiLevelCacheProvider</name>
      <full_name>\QMultiLevelCacheProvider</full_name>
      <docblock line="4">
        <description>A multi-level Cache provider that's made of multiple cache providers.</description>
        <long-description>&lt;p&gt;Cache hit is checked in the order the cache providers are set
Setting or deleting into the cache sets or deletes it from all the providers&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="11" namespace="global" package="Default">
        <name>$arrCacheProviders</name>
        <default>array()</default>
        <docblock line="10">
          <description/>
          <long-description/>
          <tag line="10" name="var" description="" type="\QAbstractCacheProvider[]">
            <type by_reference="false">\QAbstractCacheProvider[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="13">
          <description>Constructs a Multi-level Cache provider based on the configuration used for each provider</description>
          <long-description/>
          <tag line="13" name="param" description="an associative array where each item is an array with two elements specifying&#10;an inner cache provider. The first element of that array is the class name of the cache provider, and the second&#10;one is the options for constructing the provider" type="array" variable="$objOptionsArray">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="19">
          <name>$objOptionsArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Default">
        <name>Get</name>
        <full_name>Get</full_name>
        <docblock line="26">
          <description>Get the object that has the given key from the cache</description>
          <long-description/>
          <tag line="26" name="param" description="the key of the object in the cache" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Default">
        <name>Set</name>
        <full_name>Set</full_name>
        <docblock line="52">
          <description>Set the object into the cache with the given key</description>
          <long-description/>
          <tag line="52" name="param" description="the key to use for the object" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="param" description="the object to put in the cache" type="object" variable="$objValue">
            <type by_reference="false">object</type>
          </tag>
          <tag line="52" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$objValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Default">
        <name>Delete</name>
        <full_name>Delete</full_name>
        <docblock line="64">
          <description>Delete the object that has the given key from the cache</description>
          <long-description/>
          <tag line="64" name="param" description="the key of the object in the cache" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Default">
        <name>DeleteAll</name>
        <full_name>DeleteAll</full_name>
        <docblock line="75">
          <description>Invalidate all the objects in the cache</description>
          <long-description/>
          <tag line="75" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QMultiLevelCacheProvider.class.php</error>
      <critical line="10" code="50019">No short description for property $arrCacheProviders</critical>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QDatabaseBase.class.php" hash="75dcc3ce2206887d44000219cab2a054" package="Default">
    <class final="false" abstract="true" namespace="global" line="38" package="DatabaseAdapters">
      <extends>\QBaseClass</extends>
      <name>QDatabaseBase</name>
      <full_name>\QDatabaseBase</full_name>
      <docblock line="2">
        <description>Every database adapter must implement the following 5 classes (all which are abstract):
* DatabaseBase
* DatabaseFieldBase
* DatabaseResultBase
* DatabaseRowBase
* DatabaseExceptionBase</description>
        <long-description>&lt;p&gt;This Database library also has the following classes already defined, and
Database adapters are assumed to use them internally:
* DatabaseIndex
* DatabaseForeignKey
* DatabaseFieldType (which is an abstract class that solely contains constants)&lt;/p&gt;</long-description>
        <tag line="2" name="property-read" description="" type="string" variable="$EscapeIdentifierBegin">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$EscapeIdentifierEnd">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="boolean" variable="$EnableProfiling">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property-read" description="" type="int" variable="$AffectedRows">
          <type by_reference="false">int</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$Profile">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="int" variable="$DatabaseIndex">
          <type by_reference="false">int</type>
        </tag>
        <tag line="2" name="property-read" description="" type="int" variable="$Adapter">
          <type by_reference="false">int</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$Server">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$Port">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$Database">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$Service">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$Protocol">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$Host">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$Username">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$Password">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="if true objects loaded from this database will be kept in cache (assuming a cache provider is also configured)" type="boolean" variable="$Caching">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="property-read" description="" type="string" variable="$DateFormat">
          <type by_reference="false">string</type>
        </tag>
        <tag line="2" name="property-read" description="database adapter sub-classes can override and set this property to true&#10;     to prevent the behavior of automatically adding all the columns to the select clause when the query has&#10;     an aggregation clause." type="boolean" variable="$OnlyFullGroupBy">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="2" name="package" description="DatabaseAdapters"/>
      </docblock>
      <constant namespace="global" line="41" package="DatabaseAdapters">
        <name>Adapter</name>
        <full_name>Adapter</full_name>
        <value>'Generic Database Adapter (Abstract)'</value>
        <docblock line="40">
          <description>Adapter name</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$intDatabaseIndex</name>
        <default/>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="Database Index according to the configuration file" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="global" package="Default">
        <name>$blnEnableProfiling</name>
        <default/>
        <docblock line="46">
          <description/>
          <long-description/>
          <tag line="46" name="var" description="Has the profiling been enabled?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$strProfileArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="50" namespace="global" package="Default">
        <name>$objConfigArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="global" package="Default">
        <name>$blnConnectedFlag</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="53" namespace="global" package="Default">
        <name>$strEscapeIdentifierBegin</name>
        <default>'"'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$strEscapeIdentifierEnd</name>
        <default>'"'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="55" namespace="global" package="Default">
        <name>$blnOnlyFullGroupBy</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="63" namespace="global" package="Default">
        <name>$intTransactionDepth</name>
        <default>0</default>
        <docblock line="57">
          <description/>
          <long-description/>
          <tag line="57" name="var" description="The transaction depth value. It is incremented on a transaction begin, decremented on a transaction commit, and reset to zero on a roll back. It is used to implement the recursive transaction functionality." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="66" package="DatabaseAdapters">
        <name>Connect</name>
        <full_name>Connect</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="68" package="DatabaseAdapters">
        <name>ExecuteQuery</name>
        <full_name>ExecuteQuery</full_name>
        <argument line="68">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="69" package="DatabaseAdapters">
        <name>ExecuteNonQuery</name>
        <full_name>ExecuteNonQuery</full_name>
        <argument line="69">
          <name>$strNonQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="71" package="DatabaseAdapters">
        <name>GetTables</name>
        <full_name>GetTables</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="72" package="DatabaseAdapters">
        <name>InsertId</name>
        <full_name>InsertId</full_name>
        <argument line="72">
          <name>$strTableName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="72">
          <name>$strColumnName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="74" package="DatabaseAdapters">
        <name>GetFieldsForTable</name>
        <full_name>GetFieldsForTable</full_name>
        <argument line="74">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="75" package="DatabaseAdapters">
        <name>GetIndexesForTable</name>
        <full_name>GetIndexesForTable</full_name>
        <argument line="75">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="76" package="DatabaseAdapters">
        <name>GetForeignKeysForTable</name>
        <full_name>GetForeignKeysForTable</full_name>
        <argument line="76">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="84" package="DatabaseAdapters">
        <name>ExecuteTransactionBegin</name>
        <full_name>ExecuteTransactionBegin</full_name>
        <docblock line="78">
          <description>This function actually begins the database transaction.</description>
          <long-description>&lt;p&gt;Must be implemented in all subclasses.
The "TransactionBegin" wrapper are meant to be called by end-user code&lt;/p&gt;</long-description>
          <tag line="78" name="return" description="Nothing" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="91" package="DatabaseAdapters">
        <name>ExecuteTransactionCommit</name>
        <full_name>ExecuteTransactionCommit</full_name>
        <docblock line="85">
          <description>This function actually commits the database transaction.</description>
          <long-description>&lt;p&gt;Must be implemented in all subclasses.
The "TransactionCommit" wrapper are meant to be called by end-user code&lt;/p&gt;</long-description>
          <tag line="85" name="return" description="Nothing" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="98" package="DatabaseAdapters">
        <name>ExecuteTransactionRollBack</name>
        <full_name>ExecuteTransactionRollBack</full_name>
        <docblock line="92">
          <description>This function actually rolls back the database transaction.</description>
          <long-description>&lt;p&gt;Must be implemented in all subclasses.
The "TransactionRollBack" wrapper are meant to be called by end-user code&lt;/p&gt;</long-description>
          <tag line="92" name="return" description="Nothing" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="104" package="DatabaseAdapters">
        <name>TransactionBegin</name>
        <full_name>TransactionBegin</full_name>
        <docblock line="100">
          <description>This function begins the database transaction.</description>
          <long-description/>
          <tag line="100" name="return" description="Nothing" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="114" package="DatabaseAdapters">
        <name>TransactionCommit</name>
        <full_name>TransactionCommit</full_name>
        <docblock line="110">
          <description>This function commits the database transaction.</description>
          <long-description/>
          <tag line="110" name="return" description="Nothing" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="127" package="DatabaseAdapters">
        <name>TransactionRollBack</name>
        <full_name>TransactionRollBack</full_name>
        <docblock line="123">
          <description>This function rolls back the database transaction.</description>
          <long-description/>
          <tag line="123" name="return" description="Nothing" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="132" package="DatabaseAdapters">
        <name>SqlLimitVariablePrefix</name>
        <full_name>SqlLimitVariablePrefix</full_name>
        <argument line="132">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="133" package="DatabaseAdapters">
        <name>SqlLimitVariableSuffix</name>
        <full_name>SqlLimitVariableSuffix</full_name>
        <argument line="133">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="134" package="DatabaseAdapters">
        <name>SqlSortByVariable</name>
        <full_name>SqlSortByVariable</full_name>
        <argument line="134">
          <name>$strSortByInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="136" package="DatabaseAdapters">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="DatabaseAdapters">
        <name>EscapeIdentifier</name>
        <full_name>EscapeIdentifier</full_name>
        <argument line="138">
          <name>$strIdentifier</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="DatabaseAdapters">
        <name>EscapeIdentifiers</name>
        <full_name>EscapeIdentifiers</full_name>
        <argument line="142">
          <name>$mixIdentifiers</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="DatabaseAdapters">
        <name>EscapeValues</name>
        <full_name>EscapeValues</full_name>
        <argument line="150">
          <name>$mixValues</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="DatabaseAdapters">
        <name>EscapeIdentifiersAndValues</name>
        <full_name>EscapeIdentifiersAndValues</full_name>
        <argument line="158">
          <name>$mixColumnsAndValuesArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="166" package="DatabaseAdapters">
        <name>InsertOrUpdate</name>
        <full_name>InsertOrUpdate</full_name>
        <argument line="166">
          <name>$strTable</name>
          <default/>
          <type/>
        </argument>
        <argument line="166">
          <name>$mixColumnsAndValuesArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="166">
          <name>$strPKNames</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="199" package="DatabaseAdapters">
        <name>Query</name>
        <full_name>Query</full_name>
        <docblock line="195">
          <description/>
          <long-description/>
          <tag line="195" name="param" description="query string" type="string" variable="$strQuery">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="" type="\QDatabaseResultBase">
            <type by_reference="false">\QDatabaseResultBase</type>
          </tag>
        </docblock>
        <argument line="199">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="224" package="DatabaseAdapters">
        <name>NonQuery</name>
        <full_name>NonQuery</full_name>
        <argument line="224">
          <name>$strNonQuery</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="247" package="DatabaseAdapters">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="247">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="301" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="292">
          <description>Constructs a Database Adapter based on the database index and the configuration array of properties for this particular adapter
Sets up the base-level configuration properties for this database,
namely DB Profiling and Database Index</description>
          <long-description/>
          <tag line="292" name="param" description="" type="integer" variable="$intDatabaseIndex">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="292" name="param" description="configuration array as passed in to the constructor by QApplicationBase::InitializeDatabaseConnections();" type="string[]" variable="$objConfigArray">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="292" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="301">
          <name>$intDatabaseIndex</name>
          <default/>
          <type/>
        </argument>
        <argument line="301">
          <name>$objConfigArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="320" package="DatabaseAdapters">
        <name>EnableProfiling</name>
        <full_name>EnableProfiling</full_name>
        <docblock line="315">
          <description>Allows for the enabling of DB profiling while in middle of the script</description>
          <long-description/>
          <tag line="315" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="335" package="DatabaseAdapters">
        <name>LogQuery</name>
        <full_name>LogQuery</full_name>
        <docblock line="328">
          <description>If EnableProfiling is on, then log the query to the profile array</description>
          <long-description/>
          <tag line="328" name="param" description="" type="string" variable="$strQuery">
            <type by_reference="false">string</type>
          </tag>
          <tag line="328" name="param" description="query execution time in milliseconds" type="double" variable="$dblQueryTime">
            <type by_reference="false">double</type>
          </tag>
          <tag line="328" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="335">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
        <argument line="335">
          <name>$dblQueryTime</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="397" package="DatabaseAdapters">
        <name>SqlVariable</name>
        <full_name>SqlVariable</full_name>
        <docblock line="386">
          <description>Properly escapes $mixData to be used as a SQL query parameter.</description>
          <long-description>&lt;p&gt;If IncludeEquality is set (usually not), then include an equality operator.
So for most data, it would just be "=".  But, for example,
if $mixData is NULL, then most RDBMS's require the use of "IS".&lt;/p&gt;</long-description>
          <tag line="386" name="param" description="" type="mixed" variable="$mixData">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="386" name="param" description="whether or not to include an equality operator" type="boolean" variable="$blnIncludeEquality">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="386" name="param" description="whether the included equality operator should be a &quot;NOT EQUAL&quot;, e.g. &quot;!=&quot;" type="boolean" variable="$blnReverseEquality">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="386" name="return" description="the properly formatted SQL variable" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="397">
          <name>$mixData</name>
          <default/>
          <type/>
        </argument>
        <argument line="397">
          <name>$blnIncludeEquality</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="397">
          <name>$blnReverseEquality</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="471" package="DatabaseAdapters">
        <name>PrepareStatement</name>
        <full_name>PrepareStatement</full_name>
        <argument line="471">
          <name>$strQuery</name>
          <default/>
          <type/>
        </argument>
        <argument line="471">
          <name>$mixParameterArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="493" package="DatabaseAdapters">
        <name>OutputProfiling</name>
        <full_name>OutputProfiling</full_name>
        <docblock line="488">
          <description>Displays the OutputProfiling results, plus a link which will popup the details of the profiling.</description>
          <long-description/>
          <tag line="488" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="523" package="DatabaseAdapters">
        <name>ExplainStatement</name>
        <full_name>ExplainStatement</full_name>
        <docblock line="517">
          <description>Executes the explain statement for a given query and returns the output without any transformation.</description>
          <long-description>&lt;p&gt;If the database adapter does not support EXPLAIN statements, returns null.&lt;/p&gt;</long-description>
          <tag line="517" name="param" description="" type="\" variable="$strSql"/>
        </docblock>
        <argument line="523">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="528" package="Default">
      <extends>\QBaseClass</extends>
      <name>QDatabaseFieldBase</name>
      <full_name>\QDatabaseFieldBase</full_name>
      <property final="false" static="false" visibility="protected" line="529" namespace="global" package="Default">
        <name>$strName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="530" namespace="global" package="Default">
        <name>$strOriginalName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="531" namespace="global" package="Default">
        <name>$strTable</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="532" namespace="global" package="Default">
        <name>$strOriginalTable</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="533" namespace="global" package="Default">
        <name>$strDefault</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="534" namespace="global" package="Default">
        <name>$intMaxLength</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="535" namespace="global" package="Default">
        <name>$strComment</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="538" namespace="global" package="Default">
        <name>$blnIdentity</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="539" namespace="global" package="Default">
        <name>$blnNotNull</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="540" namespace="global" package="Default">
        <name>$blnPrimaryKey</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="541" namespace="global" package="Default">
        <name>$blnUnique</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="542" namespace="global" package="Default">
        <name>$blnTimestamp</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="544" namespace="global" package="Default">
        <name>$strType</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="546" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="546">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="589" package="Default">
      <extends>\QBaseClass</extends>
      <name>QDatabaseResultBase</name>
      <full_name>\QDatabaseResultBase</full_name>
      <docblock line="585">
        <description/>
        <long-description/>
        <tag line="585" name="property" description="" type="\QQueryBuilder" variable="$QueryBuilder">
          <type by_reference="false">\QQueryBuilder</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="591" namespace="global" package="Default">
        <name>$objQueryBuilder</name>
        <default/>
      </property>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="593" package="Default">
        <name>FetchArray</name>
        <full_name>FetchArray</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="594" package="Default">
        <name>FetchRow</name>
        <full_name>FetchRow</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="595" package="Default">
        <name>FetchField</name>
        <full_name>FetchField</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="596" package="Default">
        <name>FetchFields</name>
        <full_name>FetchFields</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="597" package="Default">
        <name>CountRows</name>
        <full_name>CountRows</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="598" package="Default">
        <name>CountFields</name>
        <full_name>CountFields</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="600" package="Default">
        <name>GetNextRow</name>
        <full_name>GetNextRow</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="601" package="Default">
        <name>GetRows</name>
        <full_name>GetRows</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="603" package="Default">
        <name>Close</name>
        <full_name>Close</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="605" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="605">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="619" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="619">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="619">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="643" package="DatabaseAdapters">
      <extends>\QBaseClass</extends>
      <name>QDatabaseRowBase</name>
      <full_name>\QDatabaseRowBase</full_name>
      <docblock line="639">
        <description/>
        <long-description/>
        <tag line="639" name="package" description="DatabaseAdapters"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="644" package="DatabaseAdapters">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="644">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="644">
          <name>$strColumnType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="645" package="DatabaseAdapters">
        <name>ColumnExists</name>
        <full_name>ColumnExists</full_name>
        <argument line="645">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="646" package="DatabaseAdapters">
        <name>GetColumnNameArray</name>
        <full_name>GetColumnNameArray</full_name>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="653" package="DatabaseAdapters">
      <extends>\QCallerException</extends>
      <name>QDatabaseExceptionBase</name>
      <full_name>\QDatabaseExceptionBase</full_name>
      <docblock line="649">
        <description/>
        <long-description/>
        <tag line="649" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="654" namespace="global" package="Default">
        <name>$intErrorNumber</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="655" namespace="global" package="Default">
        <name>$strQuery</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="657" package="DatabaseAdapters">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="657">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="673" package="DatabaseAdapters">
      <extends>\QBaseClass</extends>
      <name>QDatabaseForeignKey</name>
      <full_name>\QDatabaseForeignKey</full_name>
      <docblock line="669">
        <description/>
        <long-description/>
        <tag line="669" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="674" namespace="global" package="Default">
        <name>$strKeyName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="675" namespace="global" package="Default">
        <name>$strColumnNameArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="676" namespace="global" package="Default">
        <name>$strReferenceTableName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="677" namespace="global" package="Default">
        <name>$strReferenceColumnNameArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="679" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="679">
          <name>$strKeyName</name>
          <default/>
          <type/>
        </argument>
        <argument line="679">
          <name>$strColumnNameArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="679">
          <name>$strReferenceTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="679">
          <name>$strReferenceColumnNameArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="686" package="DatabaseAdapters">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="686">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="711" package="DatabaseAdapters">
      <extends>\QBaseClass</extends>
      <name>QDatabaseIndex</name>
      <full_name>\QDatabaseIndex</full_name>
      <docblock line="707">
        <description/>
        <long-description/>
        <tag line="707" name="package" description="DatabaseAdapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="712" namespace="global" package="Default">
        <name>$strKeyName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="713" namespace="global" package="Default">
        <name>$blnPrimaryKey</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="714" namespace="global" package="Default">
        <name>$blnUnique</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="715" namespace="global" package="Default">
        <name>$strColumnNameArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="717" package="DatabaseAdapters">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="717">
          <name>$strKeyName</name>
          <default/>
          <type/>
        </argument>
        <argument line="717">
          <name>$blnPrimaryKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="717">
          <name>$blnUnique</name>
          <default/>
          <type/>
        </argument>
        <argument line="717">
          <name>$strColumnNameArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="724" package="DatabaseAdapters">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="724">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="749" package="DatabaseAdapters">
      <extends/>
      <name>QDatabaseFieldType</name>
      <full_name>\QDatabaseFieldType</full_name>
      <docblock line="745">
        <description/>
        <long-description/>
        <tag line="745" name="package" description="DatabaseAdapters"/>
      </docblock>
      <constant namespace="global" line="750" package="DatabaseAdapters">
        <name>Blob</name>
        <full_name>Blob</full_name>
        <value>"Blob"</value>
      </constant>
      <constant namespace="global" line="751" package="DatabaseAdapters">
        <name>VarChar</name>
        <full_name>VarChar</full_name>
        <value>"VarChar"</value>
      </constant>
      <constant namespace="global" line="752" package="DatabaseAdapters">
        <name>Char</name>
        <full_name>Char</full_name>
        <value>"Char"</value>
      </constant>
      <constant namespace="global" line="753" package="DatabaseAdapters">
        <name>Integer</name>
        <full_name>Integer</full_name>
        <value>"Integer"</value>
      </constant>
      <constant namespace="global" line="754" package="DatabaseAdapters">
        <name>DateTime</name>
        <full_name>DateTime</full_name>
        <value>"DateTime"</value>
      </constant>
      <constant namespace="global" line="755" package="DatabaseAdapters">
        <name>Date</name>
        <full_name>Date</full_name>
        <value>"Date"</value>
      </constant>
      <constant namespace="global" line="756" package="DatabaseAdapters">
        <name>Time</name>
        <full_name>Time</full_name>
        <value>"Time"</value>
      </constant>
      <constant namespace="global" line="757" package="DatabaseAdapters">
        <name>Float</name>
        <full_name>Float</full_name>
        <value>"Float"</value>
      </constant>
      <constant namespace="global" line="758" package="DatabaseAdapters">
        <name>Bit</name>
        <full_name>Bit</full_name>
        <value>"Bit"</value>
      </constant>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QDatabaseBase.class.php</error>
      <error line="48" code="50018">No DocBlock was found for property $strProfileArray</error>
      <error line="50" code="50018">No DocBlock was found for property $objConfigArray</error>
      <error line="51" code="50018">No DocBlock was found for property $blnConnectedFlag</error>
      <error line="53" code="50018">No DocBlock was found for property $strEscapeIdentifierBegin</error>
      <error line="54" code="50018">No DocBlock was found for property $strEscapeIdentifierEnd</error>
      <error line="55" code="50018">No DocBlock was found for property $blnOnlyFullGroupBy</error>
      <error line="66" code="50010">No DocBlock was found for method Connect()</error>
      <error line="68" code="50010">No DocBlock was found for method ExecuteQuery()</error>
      <error line="69" code="50010">No DocBlock was found for method ExecuteNonQuery()</error>
      <error line="71" code="50010">No DocBlock was found for method GetTables()</error>
      <error line="72" code="50010">No DocBlock was found for method InsertId()</error>
      <error line="74" code="50010">No DocBlock was found for method GetFieldsForTable()</error>
      <error line="75" code="50010">No DocBlock was found for method GetIndexesForTable()</error>
      <error line="76" code="50010">No DocBlock was found for method GetForeignKeysForTable()</error>
      <error line="132" code="50010">No DocBlock was found for method SqlLimitVariablePrefix()</error>
      <error line="133" code="50010">No DocBlock was found for method SqlLimitVariableSuffix()</error>
      <error line="134" code="50010">No DocBlock was found for method SqlSortByVariable()</error>
      <error line="136" code="50010">No DocBlock was found for method Close()</error>
      <error line="138" code="50010">No DocBlock was found for method EscapeIdentifier()</error>
      <error line="142" code="50010">No DocBlock was found for method EscapeIdentifiers()</error>
      <error line="150" code="50010">No DocBlock was found for method EscapeValues()</error>
      <error line="158" code="50010">No DocBlock was found for method EscapeIdentifiersAndValues()</error>
      <error line="166" code="50010">No DocBlock was found for method InsertOrUpdate()</error>
      <error line="195" code="50012">No short description for method Query()</error>
      <error line="224" code="50010">No DocBlock was found for method NonQuery()</error>
      <error line="247" code="50010">No DocBlock was found for method __get()</error>
      <error line="471" code="50010">No DocBlock was found for method PrepareStatement()</error>
      <error line="517" code="50014">Name of argument $sql does not match with the DocBlock's name $strSql in ExplainStatement()</error>
      <notice line="517" code="50013">Parameter $strSql could not be found in ExplainStatement()</notice>
      <error line="528" code="50000">No DocBlock was found for \QDatabaseFieldBase</error>
      <error line="529" code="50018">No DocBlock was found for property $strName</error>
      <error line="530" code="50018">No DocBlock was found for property $strOriginalName</error>
      <error line="531" code="50018">No DocBlock was found for property $strTable</error>
      <error line="532" code="50018">No DocBlock was found for property $strOriginalTable</error>
      <error line="533" code="50018">No DocBlock was found for property $strDefault</error>
      <error line="534" code="50018">No DocBlock was found for property $intMaxLength</error>
      <error line="535" code="50018">No DocBlock was found for property $strComment</error>
      <error line="538" code="50018">No DocBlock was found for property $blnIdentity</error>
      <error line="539" code="50018">No DocBlock was found for property $blnNotNull</error>
      <error line="540" code="50018">No DocBlock was found for property $blnPrimaryKey</error>
      <error line="541" code="50018">No DocBlock was found for property $blnUnique</error>
      <error line="542" code="50018">No DocBlock was found for property $blnTimestamp</error>
      <error line="544" code="50018">No DocBlock was found for property $strType</error>
      <error line="546" code="50010">No DocBlock was found for method __get()</error>
      <critical line="585" code="50005">No short description for class \QDatabaseResultBase</critical>
      <error line="591" code="50018">No DocBlock was found for property $objQueryBuilder</error>
      <error line="593" code="50010">No DocBlock was found for method FetchArray()</error>
      <error line="594" code="50010">No DocBlock was found for method FetchRow()</error>
      <error line="595" code="50010">No DocBlock was found for method FetchField()</error>
      <error line="596" code="50010">No DocBlock was found for method FetchFields()</error>
      <error line="597" code="50010">No DocBlock was found for method CountRows()</error>
      <error line="598" code="50010">No DocBlock was found for method CountFields()</error>
      <error line="600" code="50010">No DocBlock was found for method GetNextRow()</error>
      <error line="601" code="50010">No DocBlock was found for method GetRows()</error>
      <error line="603" code="50010">No DocBlock was found for method Close()</error>
      <error line="605" code="50010">No DocBlock was found for method __get()</error>
      <error line="619" code="50010">No DocBlock was found for method __set()</error>
      <critical line="639" code="50005">No short description for class \QDatabaseRowBase</critical>
      <error line="644" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="645" code="50010">No DocBlock was found for method ColumnExists()</error>
      <error line="646" code="50010">No DocBlock was found for method GetColumnNameArray()</error>
      <critical line="649" code="50005">No short description for class \QDatabaseExceptionBase</critical>
      <error line="654" code="50018">No DocBlock was found for property $intErrorNumber</error>
      <error line="655" code="50018">No DocBlock was found for property $strQuery</error>
      <error line="657" code="50010">No DocBlock was found for method __get()</error>
      <critical line="669" code="50005">No short description for class \QDatabaseForeignKey</critical>
      <error line="674" code="50018">No DocBlock was found for property $strKeyName</error>
      <error line="675" code="50018">No DocBlock was found for property $strColumnNameArray</error>
      <error line="676" code="50018">No DocBlock was found for property $strReferenceTableName</error>
      <error line="677" code="50018">No DocBlock was found for property $strReferenceColumnNameArray</error>
      <error line="679" code="50010">No DocBlock was found for method __construct()</error>
      <error line="686" code="50010">No DocBlock was found for method __get()</error>
      <critical line="707" code="50005">No short description for class \QDatabaseIndex</critical>
      <error line="712" code="50018">No DocBlock was found for property $strKeyName</error>
      <error line="713" code="50018">No DocBlock was found for property $blnPrimaryKey</error>
      <error line="714" code="50018">No DocBlock was found for property $blnUnique</error>
      <error line="715" code="50018">No DocBlock was found for property $strColumnNameArray</error>
      <error line="717" code="50010">No DocBlock was found for method __construct()</error>
      <error line="724" code="50010">No DocBlock was found for method __get()</error>
      <critical line="745" code="50005">No short description for class \QDatabaseFieldType</critical>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QPluginInstaller.class.php" hash="b4f0bb38724e69aaab898050757a313d" package="PluginManager">
    <docblock line="2">
      <description/>
      <long-description/>
      <tag line="2" name="package" description="PluginManager"/>
      <tag line="2" name="author" description="Alex Weinstein &lt;alex94040@yahoo.com&gt;"/>
    </docblock>
    <include line="36" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="true" namespace="global" line="11" package="Default">
      <extends>\QPluginInstallerBase</extends>
      <name>QPluginInstaller</name>
      <full_name>\QPluginInstaller</full_name>
      <docblock line="7">
        <description>This class performs the actual installation of the plugin onto a QCubed instance.</description>
        <long-description>&lt;p&gt;It takes care of extracting the zip file, deploying all config files.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="true" visibility="protected" line="12" namespace="global" package="Default">
        <name>$strLastError</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="14" package="Default">
        <name>getLastError</name>
        <full_name>getLastError</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="18" package="Default">
        <name>installPluginFromZip</name>
        <full_name>installPluginFromZip</full_name>
        <argument line="18">
          <name>$strFileName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="42" package="Default">
        <name>getExpandedPath</name>
        <full_name>getExpandedPath</full_name>
        <argument line="42">
          <name>$strExtractedFolderName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="46" package="Default">
        <name>installFromExpanded</name>
        <full_name>installFromExpanded</full_name>
        <argument line="46">
          <name>$strExtractedFolderName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="73" package="Default">
        <name>deployFilesForNewPlugin</name>
        <full_name>deployFilesForNewPlugin</full_name>
        <argument line="73">
          <name>$objPlugin</name>
          <default/>
          <type/>
        </argument>
        <argument line="73">
          <name>$strExtractedFolderName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="97" package="Default">
        <name>appendClassFileReferences</name>
        <full_name>appendClassFileReferences</full_name>
        <argument line="97">
          <name>$objPlugin</name>
          <default/>
          <type/>
        </argument>
        <argument line="97">
          <name>$strExtractedFolderName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="115" package="Default">
        <name>appendExampleFileReferences</name>
        <full_name>appendExampleFileReferences</full_name>
        <argument line="115">
          <name>$objPlugin</name>
          <default/>
          <type/>
        </argument>
        <argument line="115">
          <name>$strExtractedFolderName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="133" package="Default">
        <name>appendPluginConfigToMasterConfig</name>
        <full_name>appendPluginConfigToMasterConfig</full_name>
        <argument line="133">
          <name>$strExtractedFolderName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file qcubed/_core/framework/QPluginInstaller.class.php</critical>
      <error line="12" code="50018">No DocBlock was found for property $strLastError</error>
      <error line="14" code="50010">No DocBlock was found for method getLastError()</error>
      <error line="18" code="50010">No DocBlock was found for method installPluginFromZip()</error>
      <error line="42" code="50010">No DocBlock was found for method getExpandedPath()</error>
      <error line="46" code="50010">No DocBlock was found for method installFromExpanded()</error>
      <error line="73" code="50010">No DocBlock was found for method deployFilesForNewPlugin()</error>
      <error line="97" code="50010">No DocBlock was found for method appendClassFileReferences()</error>
      <error line="115" code="50010">No DocBlock was found for method appendExampleFileReferences()</error>
      <error line="133" code="50010">No DocBlock was found for method appendPluginConfigToMasterConfig()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QUpdateUtility.class.php" hash="25299382b26caa0387e277bf93b725b1" package="Default">
    <function namespace="global" line="1080" package="Default">
      <name>QUpdateUtilityErrorHandler</name>
      <full_name>\QUpdateUtilityErrorHandler</full_name>
      <argument line="1080">
        <name>$intErrorNumber</name>
        <default/>
        <type/>
      </argument>
      <argument line="1080">
        <name>$strErrorString</name>
        <default/>
        <type/>
      </argument>
      <argument line="1080">
        <name>$strErrorFile</name>
        <default/>
        <type/>
      </argument>
      <argument line="1080">
        <name>$intErrorLine</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1084" package="Default">
      <name>QUpdateUtilityFileSystemErrorHandler</name>
      <full_name>\QUpdateUtilityFileSystemErrorHandler</full_name>
      <argument line="1084">
        <name>$intErrorNumber</name>
        <default/>
        <type/>
      </argument>
      <argument line="1084">
        <name>$strErrorString</name>
        <default/>
        <type/>
      </argument>
      <argument line="1084">
        <name>$strErrorFile</name>
        <default/>
        <type/>
      </argument>
      <argument line="1084">
        <name>$intErrorLine</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1089" package="Default">
      <name>QUpdateUtilityFileSystemErrorHandlerForDelete</name>
      <full_name>\QUpdateUtilityFileSystemErrorHandlerForDelete</full_name>
      <argument line="1089">
        <name>$intErrorNumber</name>
        <default/>
        <type/>
      </argument>
      <argument line="1089">
        <name>$strErrorString</name>
        <default/>
        <type/>
      </argument>
      <argument line="1089">
        <name>$strErrorFile</name>
        <default/>
        <type/>
      </argument>
      <argument line="1089">
        <name>$intErrorLine</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1094" package="Default">
      <name>QUpdateUtilityFileSystemErrorHandlerForRename</name>
      <full_name>\QUpdateUtilityFileSystemErrorHandlerForRename</full_name>
      <argument line="1094">
        <name>$intErrorNumber</name>
        <default/>
        <type/>
      </argument>
      <argument line="1094">
        <name>$strErrorString</name>
        <default/>
        <type/>
      </argument>
      <argument line="1094">
        <name>$strErrorFile</name>
        <default/>
        <type/>
      </argument>
      <argument line="1094">
        <name>$intErrorLine</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="7" package="Default">
      <extends/>
      <name>QUpdateUtility</name>
      <full_name>\QUpdateUtility</full_name>
      <docblock line="2">
        <description>The QUpdateUtility is used by the qcodo_updater.cli and qcodo_downloader.cli command line utilities.</description>
        <long-description>&lt;p&gt;It will use the QCubed Updater WebService at http://api.qcodo.com/ to perform updates to the installed
QCubed system.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="8" package="Default">
        <name>ServiceUrl</name>
        <full_name>ServiceUrl</full_name>
        <value>'http://release.qcodo.com/update_service/1_0.php/'</value>
      </constant>
      <constant namespace="global" line="10" package="Default">
        <name>Interactive</name>
        <full_name>Interactive</full_name>
        <value>'interactive'</value>
      </constant>
      <constant namespace="global" line="11" package="Default">
        <name>Rename</name>
        <full_name>Rename</full_name>
        <value>'rename'</value>
      </constant>
      <constant namespace="global" line="12" package="Default">
        <name>Force</name>
        <full_name>Force</full_name>
        <value>'force'</value>
      </constant>
      <constant namespace="global" line="13" package="Default">
        <name>ReportOnly</name>
        <full_name>ReportOnly</full_name>
        <value>'report-only'</value>
      </constant>
      <property final="false" static="true" visibility="public" line="15" namespace="global" package="Default">
        <name>$PrimaryInstance</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="16" namespace="global" package="Default">
        <name>$CurrentFilePath</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$strVersion</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$strVersionType</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Default">
        <name>$intMajor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="21" namespace="global" package="Default">
        <name>$intMinor</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="22" namespace="global" package="Default">
        <name>$intBuild</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$blnGzCompress</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$blnQuietMode</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$strServerManifest</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$objServerManifestDirectories</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strLocalManifest</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$strTouchedFile</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$strAlertArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$strNoticeArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$blnNewManifestPrefixWarning</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$strIgnoreArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$strShouldUpdateArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="global" package="Default">
        <name>$strSuggestFixArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$strSuggestCoreUpdateArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$strSuggestNonCoreUpdateArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="global" package="Default">
        <name>$strShouldDownloadArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$strExtraArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="57" namespace="global" package="Default">
        <name>$strDeprecatedArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="682" namespace="global" package="Default">
        <name>$objStdIn</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="63">
          <name>$strVersion</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="157" package="Default">
        <name>GetActualFilePath</name>
        <full_name>GetActualFilePath</full_name>
        <docblock line="144">
          <description>Uses the cli_config.inc constants to convert a manifest-based file path
to an actual file path on this system.</description>
          <long-description>&lt;p&gt;Will return NULL if the file being converted is specified to an actual path
of "none" by the user.&lt;/p&gt;

&lt;p&gt;Will return -1 if the file being converted does not have a path prefix
(this will happen if a new path prefix has been added since the last time
qcodo_updater was called)&lt;/p&gt;

&lt;p&gt;An example $strManifestFilePath is (for example) &lt;strong&gt;INCLUDES&lt;/strong&gt;|prepend.inc.php&lt;/p&gt;</long-description>
        </docblock>
        <argument line="157">
          <name>$strManifestFilePath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="186" package="Default">
        <name>IsCore</name>
        <full_name>IsCore</full_name>
        <argument line="186">
          <name>$strManifestFilePath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="198" package="Default">
        <name>Error</name>
        <full_name>Error</full_name>
        <argument line="198">
          <name>$strError</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="203" package="Default">
        <name>RetrieveFromService</name>
        <full_name>RetrieveFromService</full_name>
        <argument line="203">
          <name>$strArgument</name>
          <default/>
          <type/>
        </argument>
        <argument line="203">
          <name>$strErrorMessage</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="Default">
        <name>RunDownloader</name>
        <full_name>RunDownloader</full_name>
        <argument line="217">
          <name>$strToken</name>
          <default/>
          <type/>
        </argument>
        <argument line="217">
          <name>$strFile</name>
          <default/>
          <type/>
        </argument>
        <argument line="217">
          <name>$strActualFilePath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="227" package="Default">
        <name>RunUpdater</name>
        <full_name>RunUpdater</full_name>
        <argument line="227">
          <name>$strInteractionType</name>
          <default/>
          <type/>
        </argument>
        <argument line="227">
          <name>$blnQuietMode</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="594" package="Default">
        <name>IsSuffixedFile</name>
        <full_name>IsSuffixedFile</full_name>
        <argument line="594">
          <name>$strFilePath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="614" package="Default">
        <name>IsSuffixedFileHelper</name>
        <full_name>IsSuffixedFileHelper</full_name>
        <argument line="614">
          <name>$strFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="614">
          <name>$strPattern</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="632" package="Default">
        <name>PrintDownloadCommand</name>
        <full_name>PrintDownloadCommand</full_name>
        <argument line="632">
          <name>$strManifestFile</name>
          <default/>
          <type/>
        </argument>
        <argument line="632">
          <name>$strActualFilePath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="649" package="Default">
        <name>IgnoreFile</name>
        <full_name>IgnoreFile</full_name>
        <argument line="649">
          <name>$strActualFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="649">
          <name>$strAction</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="654" package="Default">
        <name>Prompt</name>
        <full_name>Prompt</full_name>
        <argument line="654">
          <name>$strPrompt</name>
          <default/>
          <type/>
        </argument>
        <argument line="654">
          <name>$strValidLetterArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="669" package="Default">
        <name>SaveFile</name>
        <full_name>SaveFile</full_name>
        <argument line="669">
          <name>$strManifestFileString</name>
          <default/>
          <type/>
        </argument>
        <argument line="669">
          <name>$strActualFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="669">
          <name>$strVerbPhrase</name>
          <default/>
          <type/>
        </argument>
        <argument line="669">
          <name>$strAlertMessage</name>
          <default/>
          <type/>
        </argument>
        <argument line="669">
          <name>$blnRename</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="683" package="Default">
        <name>ReadString</name>
        <full_name>ReadString</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="688" package="Default">
        <name>DeleteFile</name>
        <full_name>DeleteFile</full_name>
        <argument line="688">
          <name>$strActualFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="688">
          <name>$strReason</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="706" package="Default">
        <name>AppendBaseSuffix</name>
        <full_name>AppendBaseSuffix</full_name>
        <argument line="706">
          <name>$strActualFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="706">
          <name>$strBaseSuffix</name>
          <default/>
          <type/>
        </argument>
        <argument line="706">
          <name>$strReason</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="730" package="Default">
        <name>DownloadFile</name>
        <full_name>DownloadFile</full_name>
        <argument line="730">
          <name>$strToken</name>
          <default/>
          <type/>
        </argument>
        <argument line="730">
          <name>$strFile</name>
          <default/>
          <type/>
        </argument>
        <argument line="730">
          <name>$strActualFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="730">
          <name>$blnRename</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="804" package="Default">
        <name>FilePutContents</name>
        <full_name>FilePutContents</full_name>
        <argument line="804">
          <name>$strFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="804">
          <name>$strData</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="827" package="Default">
        <name>RenameWithVersion</name>
        <full_name>RenameWithVersion</full_name>
        <argument line="827">
          <name>$strActualFilePath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="831" package="Default">
        <name>RenameWithBaseSuffix</name>
        <full_name>RenameWithBaseSuffix</full_name>
        <argument line="831">
          <name>$strActualFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="831">
          <name>$strSuffix</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="844" package="Default">
        <name>ReportBack</name>
        <full_name>ReportBack</full_name>
        <argument line="844">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="844">
          <name>$strArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="844">
          <name>$strNote</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="856" package="Default">
        <name>CheckCoreDirectoriesForExtras</name>
        <full_name>CheckCoreDirectoriesForExtras</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="871" package="Default">
        <name>CheckCoreDirectoriesHelper</name>
        <full_name>CheckCoreDirectoriesHelper</full_name>
        <argument line="871">
          <name>$strDirectory</name>
          <default/>
          <type/>
        </argument>
        <argument line="871">
          <name>$strBaseDirectory</name>
          <default/>
          <type/>
        </argument>
        <argument line="871">
          <name>$strToken</name>
          <default/>
          <type/>
        </argument>
        <argument line="871">
          <name>$blnIsCore</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="923" package="Default">
        <name>PrintDownloaderInstructions</name>
        <full_name>PrintDownloaderInstructions</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="974" package="Default">
        <name>PrintUpdaterInstructions</name>
        <full_name>PrintUpdaterInstructions</full_name>
        <argument line="974">
          <name>$blnHelp</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1070" package="Default">
      <extends/>
      <name>QDirectoryToken</name>
      <full_name>\QDirectoryToken</full_name>
      <property final="false" static="false" visibility="public" line="1071" namespace="global" package="Default">
        <name>$Token</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="1072" namespace="global" package="Default">
        <name>$RelativeFlag</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="1073" namespace="global" package="Default">
        <name>$CoreFlag</name>
        <default/>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QUpdateUtility.class.php</error>
      <error line="1080" code="50009">No DocBlock was found for function \QUpdateUtilityErrorHandler()</error>
      <error line="1084" code="50009">No DocBlock was found for function \QUpdateUtilityFileSystemErrorHandler()</error>
      <error line="1089" code="50009">No DocBlock was found for function \QUpdateUtilityFileSystemErrorHandlerForDelete()</error>
      <error line="1094" code="50009">No DocBlock was found for function \QUpdateUtilityFileSystemErrorHandlerForRename()</error>
      <error line="15" code="50018">No DocBlock was found for property $PrimaryInstance</error>
      <error line="16" code="50018">No DocBlock was found for property $CurrentFilePath</error>
      <error line="18" code="50018">No DocBlock was found for property $strVersion</error>
      <error line="19" code="50018">No DocBlock was found for property $strVersionType</error>
      <error line="20" code="50018">No DocBlock was found for property $intMajor</error>
      <error line="21" code="50018">No DocBlock was found for property $intMinor</error>
      <error line="22" code="50018">No DocBlock was found for property $intBuild</error>
      <error line="23" code="50018">No DocBlock was found for property $blnGzCompress</error>
      <error line="25" code="50018">No DocBlock was found for property $blnQuietMode</error>
      <error line="27" code="50018">No DocBlock was found for property $strServerManifest</error>
      <error line="28" code="50018">No DocBlock was found for property $objServerManifestDirectories</error>
      <error line="29" code="50018">No DocBlock was found for property $strLocalManifest</error>
      <error line="30" code="50018">No DocBlock was found for property $strTouchedFile</error>
      <error line="32" code="50018">No DocBlock was found for property $strAlertArray</error>
      <error line="33" code="50018">No DocBlock was found for property $strNoticeArray</error>
      <error line="34" code="50018">No DocBlock was found for property $blnNewManifestPrefixWarning</error>
      <error line="36" code="50018">No DocBlock was found for property $strIgnoreArray</error>
      <error line="39" code="50018">No DocBlock was found for property $strShouldUpdateArray</error>
      <error line="42" code="50018">No DocBlock was found for property $strSuggestFixArray</error>
      <error line="45" code="50018">No DocBlock was found for property $strSuggestCoreUpdateArray</error>
      <error line="48" code="50018">No DocBlock was found for property $strSuggestNonCoreUpdateArray</error>
      <error line="51" code="50018">No DocBlock was found for property $strShouldDownloadArray</error>
      <error line="54" code="50018">No DocBlock was found for property $strExtraArray</error>
      <error line="57" code="50018">No DocBlock was found for property $strDeprecatedArray</error>
      <error line="682" code="50018">No DocBlock was found for property $objStdIn</error>
      <error line="59" code="50010">No DocBlock was found for method __destruct()</error>
      <error line="63" code="50010">No DocBlock was found for method __construct()</error>
      <error line="144" code="50015">Argument $strManifestFilePath is missing from the Docblock of GetActualFilePath()</error>
      <error line="186" code="50010">No DocBlock was found for method IsCore()</error>
      <error line="198" code="50010">No DocBlock was found for method Error()</error>
      <error line="203" code="50010">No DocBlock was found for method RetrieveFromService()</error>
      <error line="217" code="50010">No DocBlock was found for method RunDownloader()</error>
      <error line="227" code="50010">No DocBlock was found for method RunUpdater()</error>
      <error line="594" code="50010">No DocBlock was found for method IsSuffixedFile()</error>
      <error line="614" code="50010">No DocBlock was found for method IsSuffixedFileHelper()</error>
      <error line="632" code="50010">No DocBlock was found for method PrintDownloadCommand()</error>
      <error line="649" code="50010">No DocBlock was found for method IgnoreFile()</error>
      <error line="654" code="50010">No DocBlock was found for method Prompt()</error>
      <error line="669" code="50010">No DocBlock was found for method SaveFile()</error>
      <error line="683" code="50010">No DocBlock was found for method ReadString()</error>
      <error line="688" code="50010">No DocBlock was found for method DeleteFile()</error>
      <error line="706" code="50010">No DocBlock was found for method AppendBaseSuffix()</error>
      <error line="730" code="50010">No DocBlock was found for method DownloadFile()</error>
      <error line="804" code="50010">No DocBlock was found for method FilePutContents()</error>
      <error line="827" code="50010">No DocBlock was found for method RenameWithVersion()</error>
      <error line="831" code="50010">No DocBlock was found for method RenameWithBaseSuffix()</error>
      <error line="844" code="50010">No DocBlock was found for method ReportBack()</error>
      <error line="856" code="50010">No DocBlock was found for method CheckCoreDirectoriesForExtras()</error>
      <error line="871" code="50010">No DocBlock was found for method CheckCoreDirectoriesHelper()</error>
      <error line="923" code="50010">No DocBlock was found for method PrintDownloaderInstructions()</error>
      <error line="974" code="50010">No DocBlock was found for method PrintUpdaterInstructions()</error>
      <error line="1070" code="50000">No DocBlock was found for \QDirectoryToken</error>
      <error line="1071" code="50018">No DocBlock was found for property $Token</error>
      <error line="1072" code="50018">No DocBlock was found for property $RelativeFlag</error>
      <error line="1073" code="50018">No DocBlock was found for property $CoreFlag</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QPluginInterface.class.php" hash="7ce859491eb64b6e0ffa594e36a8b613" package="PluginManager">
    <docblock line="2">
      <description/>
      <long-description/>
      <tag line="2" name="package" description="PluginManager"/>
      <tag line="2" name="author" description="Alex Weinstein &lt;alex94040@yahoo.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="Default">
      <extends/>
      <name>QPlugin</name>
      <full_name>\QPlugin</full_name>
      <docblock line="7">
        <description>This class should be used by plugin writers to create their own
plugin descriptors in the install.php scripts of every plugin.</description>
        <long-description>&lt;p&gt;Details on creating an install script are here: http://examples.qcu.be/assets/_core/php/examples/plugins/components.php&lt;/p&gt;

&lt;p&gt;Whenever you use the install.php script, the plugin manager will run the script,
and then internally generate an XML descriptor of the plugin before actually
installing it. Note that this XML descriptor can be used directly, in place of
the install.php configuration script, in order to install the plugin.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$strName</name>
        <default>null</default>
        <docblock line="18">
          <description>Properties of the plugin that can and should be set
when instantiating a new plugin.</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$strDescription</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$strVersion</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$strPlatformVersion</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$strAuthorName</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$strAuthorEmail</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$objAllFilesArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$objIncludesArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$objExamplesArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="global" package="Default">
        <name>$strValidationError</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="35" namespace="global" package="Default">
        <name>$strTemporaryExpandedPath</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="37">
          <name>$blnInstalling</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="Default">
        <name>addComponents</name>
        <full_name>addComponents</full_name>
        <argument line="44">
          <name>$arrComponents</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>addFile</name>
        <full_name>addFile</full_name>
        <argument line="83">
          <name>$objComponent</name>
          <default/>
          <type>\QPluginFile</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Default">
        <name>addIncludedClass</name>
        <full_name>addIncludedClass</full_name>
        <argument line="87">
          <name>$objComponent</name>
          <default/>
          <type>\QPluginIncludedClass</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="Default">
        <name>addExample</name>
        <full_name>addExample</full_name>
        <argument line="91">
          <name>$objComponent</name>
          <default/>
          <type>\QPluginExample</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="95" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Default">
        <name>install</name>
        <full_name>install</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="Default">
        <name>toXml</name>
        <full_name>toXml</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="181" package="Default">
        <name>escapeAttribute</name>
        <full_name>escapeAttribute</full_name>
        <argument line="181">
          <name>$strAttributeValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="190" package="Default">
        <name>escapeCData</name>
        <full_name>escapeCData</full_name>
        <argument line="190">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="197" package="Default">
      <extends/>
      <name>QPluginComponent</name>
      <full_name>\QPluginComponent</full_name>
      <property final="false" static="false" visibility="public" line="203" namespace="global" package="Default">
        <name>$strValidationError</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="205" namespace="global" package="Default">
        <name>$objPlugin</name>
        <default/>
      </property>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="201" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="198">
          <description>Returns true or false depending on if the class information is valid.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="207" package="Default">
        <name>registerPlugin</name>
        <full_name>registerPlugin</full_name>
        <argument line="207">
          <name>$objPlugin</name>
          <default/>
          <type>\QPlugin</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="212" package="Default">
      <extends>\QPluginComponent</extends>
      <name>QPluginFile</name>
      <full_name>\QPluginFile</full_name>
      <property final="false" static="false" visibility="public" line="213" namespace="global" package="Default">
        <name>$strFilename</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="215" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="215">
          <name>$strFilename</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="243" package="Default">
        <name>getType</name>
        <full_name>getType</full_name>
        <docblock line="236">
          <description>When serializing this component into XML, what is the value of
the "type" attribute? For example:</description>
          <long-description>&lt;p&gt;&lt;file type="&gt;&gt;&gt;TYPE_VALUE&lt;&lt;&lt;" filename="includes/a.php" /&gt;&lt;/p&gt;</long-description>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="246" package="Default">
      <extends>\QPluginFile</extends>
      <name>QPluginWebAccessibleFile</name>
      <full_name>\QPluginWebAccessibleFile</full_name>
    </class>
    <class final="false" abstract="true" namespace="global" line="247" package="Default">
      <extends>\QPluginFile</extends>
      <name>QPluginNonWebAccessibleFile</name>
      <full_name>\QPluginNonWebAccessibleFile</full_name>
    </class>
    <class final="false" abstract="false" namespace="global" line="249" package="Default">
      <extends>\QPluginNonWebAccessibleFile</extends>
      <name>QPluginControlFile</name>
      <full_name>\QPluginControlFile</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="250" package="Default">
        <name>getType</name>
        <full_name>getType</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="252" package="Default">
      <extends>\QPluginNonWebAccessibleFile</extends>
      <name>QPluginMiscIncludedFile</name>
      <full_name>\QPluginMiscIncludedFile</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="253" package="Default">
        <name>getType</name>
        <full_name>getType</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="256" package="Default">
      <extends>\QPluginWebAccessibleFile</extends>
      <name>QPluginCssFile</name>
      <full_name>\QPluginCssFile</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="Default">
        <name>getType</name>
        <full_name>getType</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="259" package="Default">
      <extends>\QPluginWebAccessibleFile</extends>
      <name>QPluginJsFile</name>
      <full_name>\QPluginJsFile</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="260" package="Default">
        <name>getType</name>
        <full_name>getType</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="262" package="Default">
      <extends>\QPluginWebAccessibleFile</extends>
      <name>QPluginImageFile</name>
      <full_name>\QPluginImageFile</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="263" package="Default">
        <name>getType</name>
        <full_name>getType</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="265" package="Default">
      <extends>\QPluginWebAccessibleFile</extends>
      <name>QPluginExampleFile</name>
      <full_name>\QPluginExampleFile</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="Default">
        <name>getType</name>
        <full_name>getType</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="270" package="Default">
      <extends>\QPluginComponent</extends>
      <name>QPluginExample</name>
      <full_name>\QPluginExample</full_name>
      <property final="false" static="false" visibility="public" line="271" namespace="global" package="Default">
        <name>$strFilename</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="272" namespace="global" package="Default">
        <name>$strDescription</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="274" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="274">
          <name>$strFilename</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="274">
          <name>$strDescription</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="279" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="288" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="293" package="Default">
      <extends>\QPluginComponent</extends>
      <name>QPluginIncludedClass</name>
      <full_name>\QPluginIncludedClass</full_name>
      <property final="false" static="false" visibility="public" line="294" namespace="global" package="Default">
        <name>$strFilename</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="295" namespace="global" package="Default">
        <name>$strClassname</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="297" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="297">
          <name>$strClassname</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="297">
          <name>$strFilename</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="302" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="311" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file qcubed/_core/framework/QPluginInterface.class.php</critical>
      <error line="23" code="50018">No DocBlock was found for property $strDescription</error>
      <error line="24" code="50018">No DocBlock was found for property $strVersion</error>
      <error line="25" code="50018">No DocBlock was found for property $strPlatformVersion</error>
      <error line="26" code="50018">No DocBlock was found for property $strAuthorName</error>
      <error line="27" code="50018">No DocBlock was found for property $strAuthorEmail</error>
      <error line="30" code="50018">No DocBlock was found for property $objAllFilesArray</error>
      <error line="31" code="50018">No DocBlock was found for property $objIncludesArray</error>
      <error line="32" code="50018">No DocBlock was found for property $objExamplesArray</error>
      <error line="34" code="50018">No DocBlock was found for property $strValidationError</error>
      <error line="35" code="50018">No DocBlock was found for property $strTemporaryExpandedPath</error>
      <error line="37" code="50010">No DocBlock was found for method __construct()</error>
      <error line="44" code="50010">No DocBlock was found for method addComponents()</error>
      <error line="83" code="50010">No DocBlock was found for method addFile()</error>
      <error line="87" code="50010">No DocBlock was found for method addIncludedClass()</error>
      <error line="91" code="50010">No DocBlock was found for method addExample()</error>
      <error line="95" code="50010">No DocBlock was found for method validate()</error>
      <error line="123" code="50010">No DocBlock was found for method install()</error>
      <error line="133" code="50010">No DocBlock was found for method toXml()</error>
      <error line="181" code="50010">No DocBlock was found for method escapeAttribute()</error>
      <error line="190" code="50010">No DocBlock was found for method escapeCData()</error>
      <error line="197" code="50000">No DocBlock was found for \QPluginComponent</error>
      <error line="203" code="50018">No DocBlock was found for property $strValidationError</error>
      <error line="205" code="50018">No DocBlock was found for property $objPlugin</error>
      <error line="207" code="50010">No DocBlock was found for method registerPlugin()</error>
      <error line="212" code="50000">No DocBlock was found for \QPluginFile</error>
      <error line="213" code="50018">No DocBlock was found for property $strFilename</error>
      <error line="215" code="50010">No DocBlock was found for method __construct()</error>
      <error line="219" code="50010">No DocBlock was found for method validate()</error>
      <error line="232" code="50010">No DocBlock was found for method __toString()</error>
      <error line="246" code="50000">No DocBlock was found for \QPluginWebAccessibleFile</error>
      <error line="247" code="50000">No DocBlock was found for \QPluginNonWebAccessibleFile</error>
      <error line="249" code="50000">No DocBlock was found for \QPluginControlFile</error>
      <error line="250" code="50010">No DocBlock was found for method getType()</error>
      <error line="252" code="50000">No DocBlock was found for \QPluginMiscIncludedFile</error>
      <error line="253" code="50010">No DocBlock was found for method getType()</error>
      <error line="256" code="50000">No DocBlock was found for \QPluginCssFile</error>
      <error line="257" code="50010">No DocBlock was found for method getType()</error>
      <error line="259" code="50000">No DocBlock was found for \QPluginJsFile</error>
      <error line="260" code="50010">No DocBlock was found for method getType()</error>
      <error line="262" code="50000">No DocBlock was found for \QPluginImageFile</error>
      <error line="263" code="50010">No DocBlock was found for method getType()</error>
      <error line="265" code="50000">No DocBlock was found for \QPluginExampleFile</error>
      <error line="266" code="50010">No DocBlock was found for method getType()</error>
      <error line="270" code="50000">No DocBlock was found for \QPluginExample</error>
      <error line="271" code="50018">No DocBlock was found for property $strFilename</error>
      <error line="272" code="50018">No DocBlock was found for property $strDescription</error>
      <error line="274" code="50010">No DocBlock was found for method __construct()</error>
      <error line="279" code="50010">No DocBlock was found for method validate()</error>
      <error line="288" code="50010">No DocBlock was found for method __toString()</error>
      <error line="293" code="50000">No DocBlock was found for \QPluginIncludedClass</error>
      <error line="294" code="50018">No DocBlock was found for property $strFilename</error>
      <error line="295" code="50018">No DocBlock was found for property $strClassname</error>
      <error line="297" code="50010">No DocBlock was found for method __construct()</error>
      <error line="302" code="50010">No DocBlock was found for method validate()</error>
      <error line="311" code="50010">No DocBlock was found for method __toString()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QArchive.class.php" hash="c8c45d9dab604361880a9e3fbf647ea5" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends/>
      <name>QArchive</name>
      <full_name>\QArchive</full_name>
      <docblock line="2">
        <description>QArchive class helps extract archives (ex.</description>
        <long-description>&lt;p&gt;zip)&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="true" visibility="private" line="6" namespace="global" package="Default">
        <name>$strLastError</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="12" package="Default">
        <name>getLastError</name>
        <full_name>getLastError</full_name>
        <docblock line="8">
          <description>Static Method to return any errors that occured</description>
          <long-description/>
          <tag line="8" name="return" description="" type="\$strLastError">
            <type by_reference="false">\$strLastError</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="22" package="Default">
        <name>extractZip</name>
        <full_name>extractZip</full_name>
        <docblock line="16">
          <description>Extract a ZIP compressed file to a given path</description>
          <long-description/>
          <tag line="16" name="param" description="Path to ZIP archive to extract" type="string" variable="$archive">
            <type by_reference="false">string</type>
          </tag>
          <tag line="16" name="param" description="Path to extract archive into" type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="16" name="return" description="True if successful" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$archive</name>
          <default/>
          <type/>
        </argument>
        <argument line="22">
          <name>$destination</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="90" package="Default">
        <name>zipFileErrMsg</name>
        <full_name>zipFileErrMsg</full_name>
        <docblock line="83">
          <description>Private method that gives a more in-depth error code based on the
value returned by zip_open and zip_read on failure.</description>
          <long-description/>
          <tag line="83" name="param" description="Error code returned by the zip library" type="int" variable="$errNo">
            <type by_reference="false">int</type>
          </tag>
          <tag line="83" name="return" description="Error explanation string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$errno</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QArchive.class.php</error>
      <error line="6" code="50018">No DocBlock was found for property $strLastError</error>
      <error line="83" code="50014">Name of argument $errno does not match with the DocBlock's name $errNo in zipFileErrMsg()</error>
      <notice line="83" code="50013">Parameter $errNo could not be found in zipFileErrMsg()</notice>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QType.class.php" hash="aae822ac8823bab1333bc11076724952" package="Default">
    <class final="false" abstract="false" namespace="global" line="9" package="Default">
      <extends>\QCallerException</extends>
      <name>QInvalidCastException</name>
      <full_name>\QInvalidCastException</full_name>
      <docblock line="2">
        <description>The exception that is thrown by QType::Cast
if an invalid cast is performed.</description>
        <long-description>&lt;p&gt;InvalidCastException
derives from CallerException, and therefore should be handled
similar to how CallerExceptions are handled (e.g. IncrementOffset should
be called whenever an InvalidCastException is caught and rethrown).&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="15" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="10">
          <description>Constructor</description>
          <long-description/>
          <tag line="10" name="param" description="" type="string" variable="$strMessage">
            <type by_reference="false">string</type>
          </tag>
          <tag line="10" name="param" description="" type="int" variable="$intOffset">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="15">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
        <argument line="15">
          <name>$intOffset</name>
          <default>2</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="58" package="Default">
      <extends/>
      <name>QType</name>
      <full_name>\QType</full_name>
      <docblock line="20">
        <description>Type Library to add some support for strongly named types.</description>
        <long-description>&lt;p&gt;PHP does not support strongly named types.  The QCubed type library
and QCubed typing in general attempts to bring some structure to types
when passing in values, properties, parameters to/from QCubed framework objects
and methods.&lt;/p&gt;

&lt;p&gt;The Type library attempts to allow as much flexibility as possible to
set and cast variables to other types, similar to how PHP does it natively,
but simply adds a big more structure to it.&lt;/p&gt;

&lt;p&gt;For example, regardless if a variable is an integer, boolean, or string,
QType::Cast will allow the flexibility of those values to interchange with
each other with little to no issue.&lt;/p&gt;

&lt;p&gt;In addition to value objects (ints, bools, floats, strings), the Type library
also supports object casting.  While technically casting one object to another
is not a true cast, QType::Cast does at least ensure that the tap being "casted"
to is a legitamate subclass of the object being "cast".  So if you have ParentClass,
and you have a ChildClass that extends ParentClass,
    $objChildClass = new ChildClass();
    $objParentClass = new ParentClass();
    Type::Cast($objChildClass, 'ParentClass'); // is a legal cast
    Type::Cast($objParentClass, 'ChildClass'); // will throw an InvalidCastException&lt;/p&gt;

&lt;p&gt;For values, specifically int to string conversion, one different between
QType::Cast and PHP (in order to add structure) is that if an integer contains
alpha characters, PHP would normally allow that through w/o complaint, simply
ignoring any numeric characters past the first alpha character.  QType::Cast
would instead throw an InvalidCastException to let the developer immedaitely
know that something doesn't look right.&lt;/p&gt;

&lt;p&gt;In theory, the type library should maintain the same level of flexibility
PHP developers are accostomed to, while providing a mechanism to limit
careless coding errors and tough to figure out mistakes due to PHP's sometimes
overly laxed type conversions.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="71" package="Default">
        <name>String</name>
        <full_name>String</full_name>
        <value>'string'</value>
      </constant>
      <constant namespace="global" line="72" package="Default">
        <name>Integer</name>
        <full_name>Integer</full_name>
        <value>'integer'</value>
      </constant>
      <constant namespace="global" line="73" package="Default">
        <name>Float</name>
        <full_name>Float</full_name>
        <value>'double'</value>
      </constant>
      <constant namespace="global" line="74" package="Default">
        <name>Boolean</name>
        <full_name>Boolean</full_name>
        <value>'boolean'</value>
      </constant>
      <constant namespace="global" line="75" package="Default">
        <name>Object</name>
        <full_name>Object</full_name>
        <value>'object'</value>
      </constant>
      <constant namespace="global" line="76" package="Default">
        <name>ArrayType</name>
        <full_name>ArrayType</full_name>
        <value>'array'</value>
      </constant>
      <constant namespace="global" line="78" package="Default">
        <name>DateTime</name>
        <full_name>DateTime</full_name>
        <value>'QDateTime'</value>
      </constant>
      <constant namespace="global" line="80" package="Default">
        <name>Resource</name>
        <full_name>Resource</full_name>
        <value>'resource'</value>
      </constant>
      <constant namespace="global" line="82" package="Default">
        <name>NoOp</name>
        <full_name>NoOp</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="83" package="Default">
        <name>CheckOnly</name>
        <full_name>CheckOnly</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="84" package="Default">
        <name>CastOnly</name>
        <full_name>CastOnly</full_name>
        <value>3</value>
      </constant>
      <constant namespace="global" line="85" package="Default">
        <name>CheckAndCast</name>
        <full_name>CheckAndCast</full_name>
        <value>4</value>
      </constant>
      <property final="false" static="true" visibility="private" line="86" namespace="global" package="Default">
        <name>$intBehaviour</name>
        <default>\QType::CheckAndCast</default>
      </property>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="59">
          <description>This faux constructor method throws a caller exception.</description>
          <long-description>&lt;p&gt;The Type object should never be instantiated, and this constructor
override simply guarantees it.&lt;/p&gt;</long-description>
          <tag line="59" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="59" name="return" description="" type="\QType">
            <type by_reference="false">\QType</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="88" package="Default">
        <name>CastObjectTo</name>
        <full_name>CastObjectTo</full_name>
        <argument line="88">
          <name>$objItem</name>
          <default/>
          <type/>
        </argument>
        <argument line="88">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="120" package="Default">
        <name>CastValueTo</name>
        <full_name>CastValueTo</full_name>
        <argument line="120">
          <name>$mixItem</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$strNewType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="227" package="Default">
        <name>CastArrayTo</name>
        <full_name>CastArrayTo</full_name>
        <argument line="227">
          <name>$arrItem</name>
          <default/>
          <type/>
        </argument>
        <argument line="227">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="244" package="Default">
        <name>SetBehaviour</name>
        <full_name>SetBehaviour</full_name>
        <docblock line="234">
          <description>This method can be used to change the casting behaviour of QType::Cast().</description>
          <long-description>&lt;p&gt;By default QType::Cast() does lots of validation and type casting (using settype()).
Depending on your application you may or may not need validation or casting or both.
In these situations you can set the necessary behaviour by passing the appropriate constant to this function.&lt;/p&gt;</long-description>
          <tag line="234" name="static" description=""/>
          <tag line="234" name="param" description="one of the 4 constants QType::NoOp, QType::CastOnly, QType::CheckOnly, QType::CheckAndCast" type="int" variable="$intBehaviour">
            <type by_reference="false">int</type>
          </tag>
          <tag line="234" name="return" description="the previous setting" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="244">
          <name>$intBehaviour</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="263" package="Default">
        <name>Cast</name>
        <full_name>Cast</full_name>
        <docblock line="250">
          <description>Used to cast a variable to another type.</description>
          <long-description>&lt;p&gt;Allows for moderate
support of strongly-named types.&lt;/p&gt;

&lt;p&gt;Will throw an exception if the cast fails, causes unexpected side effects,
if attempting to cast an object to a value (or vice versa), or if an object
is being cast to a class that isn't a subclass (e.g. parent).  The exception
thrown will be an InvalidCastException, which extends CallerException.&lt;/p&gt;</long-description>
          <tag line="250" name="param" description="the value, array or object that you want to cast" type="mixed" variable="$mixItem">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="250" name="param" description="the type to cast to.  Can be a QType::XXX constant (e.g. QType::Integer), or the name of a Class" type="string" variable="$strType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="250" name="return" description="the passed in value/array/object that has been cast to strType" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="263">
          <name>$mixItem</name>
          <default/>
          <type/>
        </argument>
        <argument line="263">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="334" package="Default">
        <name>Constant</name>
        <full_name>Constant</full_name>
        <docblock line="324">
          <description>Used by the QCubed Code Generator to allow for the code generation of
the actual "Type::Xxx" constant, instead of the text of the constant,
in generated code.</description>
          <long-description>&lt;p&gt;It is rare for Constant to be used manually outside of Code Generation.&lt;/p&gt;</long-description>
          <tag line="324" name="param" description="the type to convert to 'constant' form" type="string" variable="$strType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="324" name="return" description="the text of the Text:Xxx Constant" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="334">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="351" package="Default">
        <name>TypeFromDoc</name>
        <full_name>TypeFromDoc</full_name>
        <argument line="351">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="401" package="Default">
        <name>SoapType</name>
        <full_name>SoapType</full_name>
        <docblock line="394">
          <description>Used by the QCubed Code Generator and QSoapService class to allow for the xml generation of
the actual "s:type" Soap Variable types.</description>
          <long-description/>
          <tag line="394" name="param" description="the type to convert to 'constant' form" type="string" variable="$strType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="394" name="return" description="the text of the SOAP standard s:type variable type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="401">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QType.class.php</error>
      <error line="86" code="50018">No DocBlock was found for property $intBehaviour</error>
      <error line="88" code="50010">No DocBlock was found for method CastObjectTo()</error>
      <error line="120" code="50010">No DocBlock was found for method CastValueTo()</error>
      <error line="227" code="50010">No DocBlock was found for method CastArrayTo()</error>
      <error line="351" code="50010">No DocBlock was found for method TypeFromDoc()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QTranslationBase.class.php" hash="29f4d693a9810d12b45433f0ef0c365a" package="Default">
    <interface namespace="global" line="8" package="Default">
      <name>QTranslationBase</name>
      <full_name>\QTranslationBase</full_name>
      <docblock line="3">
        <description>Extend this class to create different translation objects</description>
        <long-description/>
        <tag line="3" name="author" description="Ago Luberg"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="15" package="Default">
        <name>Initialize</name>
        <full_name>Initialize</full_name>
        <docblock line="9">
          <description>Used to initialize translation
Should return initiated translation object</description>
          <long-description/>
          <tag line="9" name="abstract" description=""/>
          <tag line="9" name="return" description="" type="\QTranslationBase">
            <type by_reference="false">\QTranslationBase</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="24" package="Default">
        <name>Load</name>
        <full_name>Load</full_name>
        <docblock line="17">
          <description>Used to load translation instance</description>
          <long-description/>
          <tag line="17" name="param" description="Language code" type="\string[optional]" variable="$strLanguageCode">
            <type by_reference="false">\string[optional]</type>
          </tag>
          <tag line="17" name="param" description="Country code" type="\string[optional]" variable="$strCountryCode">
            <type by_reference="false">\string[optional]</type>
          </tag>
          <tag line="17" name="return" description="" type="\QTranslationBase">
            <type by_reference="false">\QTranslationBase</type>
          </tag>
          <tag line="17" name="abstract" description=""/>
        </docblock>
        <argument line="24">
          <name>$strLanguageCode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="24">
          <name>$strCountryCode</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Default">
        <name>TranslateToken</name>
        <full_name>TranslateToken</full_name>
        <docblock line="26">
          <description>Translates given token to given translation language</description>
          <long-description/>
          <tag line="26" name="param" description="" type="string" variable="$strToken">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$strToken</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QTranslationBase.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QPluginConfigParser.class.php" hash="3dfb0dec30a67ae70677cc5d5bc3d0f7" package="PluginManager">
    <docblock line="2">
      <description/>
      <long-description/>
      <tag line="2" name="package" description="PluginManager"/>
      <tag line="2" name="author" description="Alex Weinstein &lt;alex94040@yahoo.com&gt;"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="Default">
      <extends/>
      <name>QPluginConfigParser</name>
      <full_name>\QPluginConfigParser</full_name>
      <docblock line="7">
        <description>This class takes care of parsing XML configuration files of the plugins.</description>
        <long-description>&lt;p&gt;Note that even if a plugin doesn't explicitly have an XML config file, it will
get generated by the install.php script of the plugin.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="13" namespace="global" package="Default">
        <name>$mixPluginSet</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="15" package="Default">
        <name>parseInstalledPlugins</name>
        <full_name>parseInstalledPlugins</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="20" package="Default">
        <name>parseNewPlugin</name>
        <full_name>parseNewPlugin</full_name>
        <argument line="20">
          <name>$strExpandedPath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="26" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="26">
          <name>$strPath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="33" package="Default">
        <name>parseConfig</name>
        <full_name>parseConfig</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="48" package="Default">
        <name>parsePluginXmlSubsection</name>
        <full_name>parsePluginXmlSubsection</full_name>
        <argument line="48">
          <name>$xmlPlugin</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="69" package="Default">
        <name>parseIncludes</name>
        <full_name>parseIncludes</full_name>
        <argument line="69">
          <name>$xmlPlugin</name>
          <default/>
          <type/>
        </argument>
        <argument line="69">
          <name>$objPlugin</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="82" package="Default">
        <name>parseExamples</name>
        <full_name>parseExamples</full_name>
        <argument line="82">
          <name>$xmlPlugin</name>
          <default/>
          <type/>
        </argument>
        <argument line="82">
          <name>$objPlugin</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="95" package="Default">
        <name>parseFiles</name>
        <full_name>parseFiles</full_name>
        <argument line="95">
          <name>$xmlPlugin</name>
          <default/>
          <type/>
        </argument>
        <argument line="95">
          <name>$objPlugin</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file qcubed/_core/framework/QPluginConfigParser.class.php</critical>
      <error line="13" code="50018">No DocBlock was found for property $mixPluginSet</error>
      <error line="15" code="50010">No DocBlock was found for method parseInstalledPlugins()</error>
      <error line="20" code="50010">No DocBlock was found for method parseNewPlugin()</error>
      <error line="26" code="50010">No DocBlock was found for method __construct()</error>
      <error line="33" code="50010">No DocBlock was found for method parseConfig()</error>
      <error line="48" code="50010">No DocBlock was found for method parsePluginXmlSubsection()</error>
      <error line="69" code="50010">No DocBlock was found for method parseIncludes()</error>
      <error line="82" code="50010">No DocBlock was found for method parseExamples()</error>
      <error line="95" code="50010">No DocBlock was found for method parseFiles()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QCache.class.php" hash="d1d15280ef4516544c592801f158837d" package="Default">
    <class final="false" abstract="false" namespace="global" line="2" package="Default">
      <extends>\QBaseClass</extends>
      <name>QCache</name>
      <full_name>\QCache</full_name>
      <property final="false" static="true" visibility="public" line="3" namespace="global" package="Default">
        <name>$CachePath</name>
        <default>__CACHE__</default>
      </property>
      <property final="false" static="false" visibility="protected" line="5" namespace="global" package="Default">
        <name>$strNamespace</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="6" namespace="global" package="Default">
        <name>$strKey</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="7" namespace="global" package="Default">
        <name>$strExtension</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="8" namespace="global" package="Default">
        <name>$strCheckFilesArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="13" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="10">
          <description/>
          <long-description/>
          <tag line="10" name="param" description="Note that the namespace can be recursive - use forward slashes as separators" type="string" variable="$strNamespace">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="13">
          <name>$strNamespace</name>
          <default/>
          <type/>
        </argument>
        <argument line="13">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="13">
          <name>$strExtension</name>
          <default>'txt'</default>
          <type/>
        </argument>
        <argument line="13">
          <name>$mixCheckFiles</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>GetData</name>
        <full_name>GetData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="Default">
        <name>SaveData</name>
        <full_name>SaveData</full_name>
        <argument line="54">
          <name>$strData</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Default">
        <name>DeleteData</name>
        <full_name>DeleteData</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="79" package="Default">
        <name>ClearNamespace</name>
        <full_name>ClearNamespace</full_name>
        <docblock line="76">
          <description/>
          <long-description/>
          <tag line="76" name="return" description="that determines whether clearing of the cache was successful" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$strNamespace</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="Default">
        <name>GetFilePath</name>
        <full_name>GetFilePath</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="121" package="Default">
        <name>GetCheckFilesHash</name>
        <full_name>GetCheckFilesHash</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="137" package="Default">
        <name>GetCacheDirectory</name>
        <full_name>GetCacheDirectory</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QCache.class.php</error>
      <error line="2" code="50000">No DocBlock was found for \QCache</error>
      <error line="3" code="50018">No DocBlock was found for property $CachePath</error>
      <error line="5" code="50018">No DocBlock was found for property $strNamespace</error>
      <error line="6" code="50018">No DocBlock was found for property $strKey</error>
      <error line="7" code="50018">No DocBlock was found for property $strExtension</error>
      <error line="8" code="50018">No DocBlock was found for property $strCheckFilesArray</error>
      <error line="10" code="50012">No short description for method __construct()</error>
      <error line="10" code="50015">Argument $strKey is missing from the Docblock of __construct()</error>
      <error line="10" code="50015">Argument $strExtension is missing from the Docblock of __construct()</error>
      <error line="10" code="50015">Argument $mixCheckFiles is missing from the Docblock of __construct()</error>
      <error line="26" code="50010">No DocBlock was found for method GetData()</error>
      <error line="54" code="50010">No DocBlock was found for method SaveData()</error>
      <error line="66" code="50010">No DocBlock was found for method DeleteData()</error>
      <error line="76" code="50012">No short description for method ClearNamespace()</error>
      <error line="76" code="50015">Argument $strNamespace is missing from the Docblock of ClearNamespace()</error>
      <error line="117" code="50010">No DocBlock was found for method GetFilePath()</error>
      <error line="121" code="50010">No DocBlock was found for method GetCheckFilesHash()</error>
      <error line="137" code="50010">No DocBlock was found for method GetCacheDirectory()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QDateTime.legacy.class.php" hash="d2aea7a93f6cd61b430b0d63d5e489a2" package="Default">
    <class final="false" abstract="false" namespace="global" line="14" package="Default">
      <extends>\QBaseClass</extends>
      <name>QDateTime</name>
      <full_name>\QDateTime</full_name>
      <docblock line="2">
        <description>QDateTime.legacy</description>
        <long-description>&lt;p&gt;This DateTime class manages datetimes for the entire system.  It basically
provides a nice wrapper around the built-in date-related functionality in PHP.&lt;/p&gt;

&lt;p&gt;This is used by QCubed users using PHP &amp;lt; 5.2.0
As of Qcodo 0.3.14, no additional functionality will be added to QDateTime.legacy&lt;/p&gt;

&lt;p&gt;All new QDateTime functionality will be added to the QDateTime (standard) which uses PHP DateTime,
which is included in all versions of &gt;= PHP 5.2.0&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="62" package="Default">
        <name>Now</name>
        <full_name>Now</full_name>
        <value>'Now'</value>
        <docblock line="58">
          <description>Pass this to __construct in order to set DateTime to current date/time.</description>
          <long-description>&lt;p&gt;e.g. $dttDate = new QDateTime(QDateTime::Now);&lt;/p&gt;</long-description>
        </docblock>
      </constant>
      <constant namespace="global" line="68" package="Default">
        <name>FormatIso</name>
        <full_name>FormatIso</full_name>
        <value>'YYYY-MM-DD hhhh:mm:ss'</value>
        <docblock line="64">
          <description>Constant for __toString to display Date/Time as ISO Standard
1977-03-20 15:35:15</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="73" package="Default">
        <name>FormatIsoCompressed</name>
        <full_name>FormatIsoCompressed</full_name>
        <value>'YYYYMMDDhhhhmmss'</value>
        <docblock line="69">
          <description>Constant for __toString to display Date/Time as 14-digit
19770320153515</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="78" package="Default">
        <name>FormatDisplayDate</name>
        <full_name>FormatDisplayDate</full_name>
        <value>'MMM DD YYYY'</value>
        <docblock line="74">
          <description>Constant for __toString to display Date as simple
Mar 20 1977</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="83" package="Default">
        <name>FormatDisplayDateFull</name>
        <full_name>FormatDisplayDateFull</full_name>
        <value>'DDD, MMMM D, YYYY'</value>
        <docblock line="79">
          <description>Constant for __toString to display Date as extended
Sunday, March 20, 1977</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="88" package="Default">
        <name>FormatDisplayDateTime</name>
        <full_name>FormatDisplayDateTime</full_name>
        <value>'MMM DD YYYY hh:mm zz'</value>
        <docblock line="84">
          <description>Constant for __toString to display Date/Time as simple
Mar 20 1977 03:35 PM</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="93" package="Default">
        <name>FormatDisplayDateTimeFull</name>
        <full_name>FormatDisplayDateTimeFull</full_name>
        <value>'DDDD, MMMM D, YYYY, h:mm:ss zz'</value>
        <docblock line="89">
          <description>Constant for __toString to display Date/Time as extended
Sunday, March 20, 1977, 3:35:15 PM</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="98" package="Default">
        <name>FormatDisplayTime</name>
        <full_name>FormatDisplayTime</full_name>
        <value>'hh:mm:ss zz'</value>
        <docblock line="94">
          <description>Constant for __toString to display Time as
03:35:15 PM</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="103" package="Default">
        <name>FormatRfc822</name>
        <full_name>FormatRfc822</full_name>
        <value>'DDD, DD MMM YYYY hhhh:mm:ss ttt'</value>
        <docblock line="99">
          <description>Constant for __toString to display DateTime as RFC 822 Format
Sun, 20 Mar 1977 15:35:15 GMT</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="108" package="Default">
        <name>FormatSoap</name>
        <full_name>FormatSoap</full_name>
        <value>'YYYY-MM-DDThhhh:mm:ss'</value>
        <docblock line="104">
          <description>Constant for __toString to display Date/Time as SOAP Standard
1977-03-20T15:35:15</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$intMonth</name>
        <default/>
        <docblock line="15">
          <description>The Month value.</description>
          <long-description>&lt;p&gt;Should be accessed through the Month property.&lt;/p&gt;</long-description>
          <tag line="15" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$intDay</name>
        <default/>
        <docblock line="20">
          <description>The Day value.</description>
          <long-description>&lt;p&gt;Should be accessed through the Day property.&lt;/p&gt;</long-description>
          <tag line="20" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$intYear</name>
        <default/>
        <docblock line="25">
          <description>The Year value.</description>
          <long-description>&lt;p&gt;Should be accessed through the Year property.&lt;/p&gt;</long-description>
          <tag line="25" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$intHour</name>
        <default/>
        <docblock line="30">
          <description>The Hour value.</description>
          <long-description>&lt;p&gt;Should be accessed through the Hour property.&lt;/p&gt;</long-description>
          <tag line="30" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$intMinute</name>
        <default/>
        <docblock line="35">
          <description>The Minute value.</description>
          <long-description>&lt;p&gt;Should be accessed through the Minute property.&lt;/p&gt;</long-description>
          <tag line="35" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$intSecond</name>
        <default/>
        <docblock line="40">
          <description>The Second value.</description>
          <long-description>&lt;p&gt;Should be accessed through the Second property.&lt;/p&gt;</long-description>
          <tag line="40" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="50" namespace="global" package="Default">
        <name>$DefaultFormat</name>
        <default>\QDateTime::FormatDisplayDate</default>
        <docblock line="46">
          <description>The "Default" Display Format</description>
          <long-description/>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="56" namespace="global" package="Default">
        <name>$DefaultTimeFormat</name>
        <default>\QDateTime::FormatDisplayTime</default>
        <docblock line="52">
          <description>The "Default" Display Format for Times</description>
          <long-description/>
          <tag line="52" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="110">
          <description>Constructor function to create a new datetime.</description>
          <long-description>&lt;p&gt;Takes in an optional $mixValue, which can be one of the following:
 ISO Standard format (mostly used in databases) 1977-03-20 15:35:15
 ISO-compressed format (the pure digits of the ISO format) 19770320153515
 another DateTime object (to clone it)
 the QDateTime::Now constant (to return current date/time)
 a unix timestamp
 null/none (to return a blank date, which by default is set to 0000-01-01 00:00:00)
DateTime can be constructed with either the date, the time, or both portions of any of the above formats.
For any part that's missing, the date would be set to 0000-01-01, or the time would be set to 00:00:00&lt;/p&gt;</long-description>
          <tag line="110" name="param" description="the date/time to set (see documentation for more information)" type="\" variable="$mixValue"/>
          <tag line="110" name="return" description="the new DateTime object" type="\DateTime">
            <type by_reference="false">\DateTime</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$mixValue</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="188" package="Default">
        <name>Now</name>
        <full_name>Now</full_name>
        <docblock line="181">
          <description>Returns a new QDateTime object that's set to "Now"
Set blnTimeValue to true (default) for a DateTime, and set blnTimeValue to false for just a Date</description>
          <long-description/>
          <tag line="181" name="param" description="whether or not to include the time value" type="boolean" variable="$blnTimeValue">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="181" name="return" description="the current date and/or time" type="\QDateTime">
            <type by_reference="false">\QDateTime</type>
          </tag>
        </docblock>
        <argument line="188">
          <name>$blnTimeValue</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="202" package="Default">
        <name>FromTimestamp</name>
        <full_name>FromTimestamp</full_name>
        <docblock line="198">
          <description/>
          <long-description/>
          <tag line="198" name="param" description="" type="integer" variable="$intTimestamp">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="198" name="return" description="" type="\QDateTime">
            <type by_reference="false">\QDateTime</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$intTimestamp</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="206" package="Default">
        <name>IsLaterThan</name>
        <full_name>IsLaterThan</full_name>
        <argument line="206">
          <name>$dttDate</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="Default">
        <name>IsEarlierThan</name>
        <full_name>IsEarlierThan</full_name>
        <argument line="213">
          <name>$dttDate</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="Default">
        <name>IsEqualTo</name>
        <full_name>IsEqualTo</full_name>
        <argument line="219">
          <name>$dttDate</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="226" package="Default">
        <name>Difference</name>
        <full_name>Difference</full_name>
        <argument line="226">
          <name>$dttDateTime</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="234" package="Default">
        <name>Add</name>
        <full_name>Add</full_name>
        <argument line="234">
          <name>$dtsSpan</name>
          <default/>
          <type>\QDateTimeSpan</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="246" package="Default">
        <name>Subtract</name>
        <full_name>Subtract</full_name>
        <argument line="246">
          <name>$dtsSpan</name>
          <default/>
          <type>\QDateTimeSpan</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="267" package="Default">
        <name>NowToString</name>
        <full_name>NowToString</full_name>
        <docblock line="258">
          <description>Shortcut to output the current datetime in any defined format.</description>
          <long-description>&lt;p&gt;Follows the same
formatting mechanism as __toString.  This is basically a shortcut to doing:
   $dttNow = new QDateTime(QDateTime::Now);
   $dttNow-&gt;__toString($strFormat);&lt;/p&gt;</long-description>
          <tag line="258" name="param" description="the format of the datetime" type="string" variable="$strFormat">
            <type by_reference="false">string</type>
          </tag>
          <tag line="258" name="return" description="the formatted current datetime as a string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$strFormat</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="314" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="275">
          <description>Outputs the date as a string given the format strFormat.</description>
          <long-description>&lt;p&gt;By default,
it will return as QDateTime::FormatDisplayDate "MMM DD YYYY", e.g. Mar 20 1977.&lt;/p&gt;

&lt;p&gt;Properties of strFormat are (using Sunday, March 2, 1977 at 1:15:35 pm
in the following examples):&lt;/p&gt;

&lt;p&gt;M - Month as an integer (e.g., 3)
MM - Month as an integer with leading zero (e.g., 03)
MMM - Month as three-letters (e.g., Mar)
MMMM - Month as full name (e.g., March)&lt;/p&gt;

&lt;p&gt;D - Day as an integer (e.g., 2)
DD - Day as an integer with leading zero (e.g., 02)
DDD - Day of week as three-letters (e.g., Wed)
DDDD - Day of week as full name (e.g., Wednesday)&lt;/p&gt;

&lt;p&gt;YY - Year as a two-digit integer (e.g., 77)
YYYY - Year as a four-digit integer (e.g., 1977)&lt;/p&gt;

&lt;p&gt;h - Hour as an integer in 12-hour format (e.g., 1)
hh - Hour as an integer in 12-hour format with leading zero (e.g., 01)
hhh - Hour as an integer in 24-hour format (e.g., 13)
hhhh - Hour as an integer in 24-hour format with leading zero (e.g., 13)&lt;/p&gt;

&lt;p&gt;mm - Minute as a two-digit integer&lt;/p&gt;

&lt;p&gt;ss - Second as a two-digit integer&lt;/p&gt;

&lt;p&gt;z - "pm" or "am"
zz - "PM" or "AM"
zzz - "p.m." or "a.m."
zzzz - "P.M." or "A.M."&lt;/p&gt;

&lt;p&gt;ttt - Timezone as a three-letter code (e.g. GMT)&lt;/p&gt;</long-description>
          <tag line="275" name="param" description="the format of the date" type="string" variable="$strFormat">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="return" description="the formatted date as a string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="314">
          <name>$strFormat</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="415" package="Default">
        <name>qFormat</name>
        <full_name>qFormat</full_name>
        <argument line="415">
          <name>$strFormat</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="427" package="Default">
        <name>PHPDate</name>
        <full_name>PHPDate</full_name>
        <docblock line="419">
          <description>This makes a call to the PHP date() function, where you
can pass in a PHP date()-compatible format to display
this date/time object.</description>
          <long-description/>
          <tag line="419" name="param" description="a PHP date()-compatible string format for datetime" type="string" variable="$strFormat">
            <type by_reference="false">string</type>
          </tag>
          <tag line="419" name="return" description="the output from the PHP date() call" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="427">
          <name>$strFormat</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="436" package="Default">
        <name>IsNull</name>
        <full_name>IsNull</full_name>
        <docblock line="431">
          <description>This returns a boolean specifying whether or not this object DateTime is null</description>
          <long-description/>
          <tag line="431" name="return" description="whether or not the datetime object is null" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="445" package="Default">
        <name>IsDateNull</name>
        <full_name>IsDateNull</full_name>
        <docblock line="440">
          <description>This returns a boolean specifying whether or not the Date portion is null</description>
          <long-description/>
          <tag line="440" name="return" description="whether or not the date is null" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="454" package="Default">
        <name>IsTimeNull</name>
        <full_name>IsTimeNull</full_name>
        <docblock line="449">
          <description>This returns a boolean specifying whether or not the Date portion is null</description>
          <long-description/>
          <tag line="449" name="return" description="whether or not the time is null" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="463" package="Default">
        <name>GetSoapDateTimeArray</name>
        <full_name>GetSoapDateTimeArray</full_name>
        <docblock line="458">
          <description>This returns an array of strings with ISO-formatted datetime values, given an array of QDateTime objects</description>
          <long-description/>
          <tag line="458" name="return" description="array of ISO-formatted datetime strings" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
        <argument line="463">
          <name>$dttArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="478" package="Default">
        <name>setDate</name>
        <full_name>setDate</full_name>
        <docblock line="473">
          <description/>
          <long-description/>
          <tag line="473" name="param" description="" type="integer" variable="$intYear">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="473" name="param" description="" type="integer" variable="$intMonth">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="473" name="param" description="" type="integer" variable="$intDay">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="478">
          <name>$intYear</name>
          <default/>
          <type/>
        </argument>
        <argument line="478">
          <name>$intMonth</name>
          <default/>
          <type/>
        </argument>
        <argument line="478">
          <name>$intDay</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="494" package="Default">
        <name>setTime</name>
        <full_name>setTime</full_name>
        <docblock line="489">
          <description/>
          <long-description/>
          <tag line="489" name="param" description="" type="integer" variable="$intHour">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="489" name="param" description="" type="integer" variable="$intMinute">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="489" name="param" description="" type="integer" variable="$intSecond">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="494">
          <name>$intHour</name>
          <default/>
          <type/>
        </argument>
        <argument line="494">
          <name>$intMinute</name>
          <default/>
          <type/>
        </argument>
        <argument line="494">
          <name>$intSecond</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="512" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="505">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="505" name="param" description="Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="505" name="return" description="the returned property" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="512">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="557" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="549">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue</description>
          <long-description/>
          <tag line="549" name="param" description="Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="549" name="param" description="New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="549" name="return" description="the property that was set" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="557">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="557">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QDateTime.legacy.class.php</error>
      <error line="198" code="50012">No short description for method FromTimestamp()</error>
      <error line="206" code="50010">No DocBlock was found for method IsLaterThan()</error>
      <error line="213" code="50010">No DocBlock was found for method IsEarlierThan()</error>
      <error line="219" code="50010">No DocBlock was found for method IsEqualTo()</error>
      <error line="226" code="50010">No DocBlock was found for method Difference()</error>
      <error line="234" code="50010">No DocBlock was found for method Add()</error>
      <error line="246" code="50010">No DocBlock was found for method Subtract()</error>
      <error line="415" code="50010">No DocBlock was found for method qFormat()</error>
      <error line="458" code="50015">Argument $dttArray is missing from the Docblock of GetSoapDateTimeArray()</error>
      <error line="473" code="50012">No short description for method setDate()</error>
      <error line="489" code="50012">No short description for method setTime()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QDateTimeSpan.class.php" hash="e8d467e644f3f95e0de80d608cf6dfdf" package="Default">
    <class final="false" abstract="false" namespace="global" line="2" package="Default">
      <extends>\QBaseClass</extends>
      <name>QDateTimeSpan</name>
      <full_name>\QDateTimeSpan</full_name>
      <constant namespace="global" line="12" package="Default">
        <name>SecondsPerYear</name>
        <full_name>SecondsPerYear</full_name>
        <value>31556926</value>
      </constant>
      <constant namespace="global" line="15" package="Default">
        <name>SecondsPerMonth</name>
        <full_name>SecondsPerMonth</full_name>
        <value>2592000</value>
      </constant>
      <constant namespace="global" line="16" package="Default">
        <name>SecondsPerDay</name>
        <full_name>SecondsPerDay</full_name>
        <value>86400</value>
      </constant>
      <constant namespace="global" line="17" package="Default">
        <name>SecondsPerHour</name>
        <full_name>SecondsPerHour</full_name>
        <value>3600</value>
      </constant>
      <constant namespace="global" line="18" package="Default">
        <name>SecondsPerMinute</name>
        <full_name>SecondsPerMinute</full_name>
        <value>60</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="3" namespace="global" package="Default">
        <name>$intSeconds</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="20">
          <name>$intSeconds</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>IsPositive</name>
        <full_name>IsPositive</full_name>
        <docblock line="28">
          <description>Checks if the current DateSpan is positive</description>
          <long-description/>
          <tag line="28" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>IsNegative</name>
        <full_name>IsNegative</full_name>
        <docblock line="37">
          <description>Checks if the current DateSpan is negative</description>
          <long-description/>
          <tag line="37" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="Default">
        <name>IsZero</name>
        <full_name>IsZero</full_name>
        <docblock line="46">
          <description>Checks if the current DateSpan is zero</description>
          <long-description/>
          <tag line="46" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>Difference</name>
        <full_name>Difference</full_name>
        <docblock line="55">
          <description>Calculates the difference between this DateSpan and another DateSpan</description>
          <long-description/>
          <tag line="55" name="param" description="" type="\QDateTimeSpan" variable="$dtsSpan">
            <type by_reference="false">\QDateTimeSpan</type>
          </tag>
          <tag line="55" name="return" description="QDateTimeSpan" type="\new">
            <type by_reference="false">\new</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$dtsSpan</name>
          <default/>
          <type>\QDateTimeSpan</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="Default">
        <name>SetFromQDateTime</name>
        <full_name>SetFromQDateTime</full_name>
        <docblock line="72">
          <description>Sets current QDateTimeSpan to the difference between two QDateTime objects</description>
          <long-description/>
          <tag line="72" name="param" description="" type="\QDateTime" variable="$dttFrom">
            <type by_reference="false">\QDateTime</type>
          </tag>
          <tag line="72" name="param" description="" type="\QDateTime" variable="$dttTo">
            <type by_reference="false">\QDateTime</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$dttFrom</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
        <argument line="78">
          <name>$dttTo</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="Default">
        <name>AddSeconds</name>
        <full_name>AddSeconds</full_name>
        <docblock line="86">
          <description>Adds an amount of seconds to the current QDateTimeSpan</description>
          <long-description/>
          <tag line="86" name="param" description="" type="int" variable="$intSeconds">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$intSeconds</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Default">
        <name>AddMinutes</name>
        <full_name>AddMinutes</full_name>
        <docblock line="95">
          <description>Adds an amount of minutes to the current QDateTimeSpan</description>
          <long-description/>
          <tag line="95" name="param" description="" type="int" variable="$intMinutes">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$intMinutes</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>AddHours</name>
        <full_name>AddHours</full_name>
        <docblock line="104">
          <description>Adds an amount of hours to the current QDateTimeSpan</description>
          <long-description/>
          <tag line="104" name="param" description="" type="int" variable="$intHours">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$intHours</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Default">
        <name>AddDays</name>
        <full_name>AddDays</full_name>
        <docblock line="113">
          <description>Adds an amount of days to the current QDateTimeSpan</description>
          <long-description/>
          <tag line="113" name="param" description="" type="int" variable="$intDays">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$intDays</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="Default">
        <name>AddMonths</name>
        <full_name>AddMonths</full_name>
        <docblock line="122">
          <description>Adds an amount of months to the current QDateTimeSpan</description>
          <long-description/>
          <tag line="122" name="param" description="" type="int" variable="$intMonths">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$intMonths</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="140" package="Default">
        <name>GetYears</name>
        <full_name>GetYears</full_name>
        <docblock line="135">
          <description>Calculates the total whole years in the current QDateTimeSpan</description>
          <long-description/>
          <tag line="135" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="152" package="Default">
        <name>GetMonths</name>
        <full_name>GetMonths</full_name>
        <docblock line="147">
          <description>Calculates the total whole months in the current QDateTimeSpan</description>
          <long-description/>
          <tag line="147" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="164" package="Default">
        <name>GetDays</name>
        <full_name>GetDays</full_name>
        <docblock line="159">
          <description>Calculates the total whole days in the current QDateTimeSpan</description>
          <long-description/>
          <tag line="159" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="176" package="Default">
        <name>GetHours</name>
        <full_name>GetHours</full_name>
        <docblock line="171">
          <description>Calculates the total whole hours in the current QDateTimeSpan</description>
          <long-description/>
          <tag line="171" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="188" package="Default">
        <name>GetMinutes</name>
        <full_name>GetMinutes</full_name>
        <docblock line="183">
          <description>Calculates the total whole minutes in the current QDateTimeSpan</description>
          <long-description/>
          <tag line="183" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="204" package="Default">
        <name>Add</name>
        <full_name>Add</full_name>
        <docblock line="199">
          <description>Adds a QDateTimeSpan to current QDateTimeSpan</description>
          <long-description/>
          <tag line="199" name="param" description="" type="\QDateTimeSpan" variable="$dtsSpan">
            <type by_reference="false">\QDateTimeSpan</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$dtsSpan</name>
          <default/>
          <type>\QDateTimeSpan</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="Default">
        <name>Subtract</name>
        <full_name>Subtract</full_name>
        <docblock line="208">
          <description>Subtracts a QDateTimeSpan to current QDateTimeSpan</description>
          <long-description/>
          <tag line="208" name="param" description="" type="\QDateTimeSpan" variable="$dtsSpan">
            <type by_reference="false">\QDateTimeSpan</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$dtsSpan</name>
          <default/>
          <type>\QDateTimeSpan</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="Default">
        <name>SimpleDisplay</name>
        <full_name>SimpleDisplay</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="256" package="Default">
        <name>GetTimearray</name>
        <full_name>GetTimearray</full_name>
        <docblock line="250">
          <description>Return an array of timeunints</description>
          <long-description/>
          <tag line="250" name="return" description="of timeunits" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="303" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="295">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="295" name="param" description="Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="return" description="the returned property" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="303">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="332" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="323">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue</description>
          <long-description/>
          <tag line="323" name="param" description="Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="323" name="param" description="New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="323" name="return" description="the property that was set" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="332">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="332">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QDateTimeSpan.class.php</error>
      <error line="2" code="50000">No DocBlock was found for \QDateTimeSpan</error>
      <error line="3" code="50018">No DocBlock was found for property $intSeconds</error>
      <error line="20" code="50010">No DocBlock was found for method __construct()</error>
      <error line="217" code="50010">No DocBlock was found for method SimpleDisplay()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QQueryExpansion.class.php" hash="f06bc1a4891fa8aeb12bba9216b8d7cc" package="Default">
    <class final="false" abstract="false" namespace="global" line="9" package="Default">
      <extends>\QBaseClass</extends>
      <name>QQueryExpansion</name>
      <full_name>\QQueryExpansion</full_name>
      <docblock line="2">
        <description>Utility object used by the Code Generator and the generated data objects
to assist with Early Binding of referenced objects for Manual Queries (e.g.</description>
        <long-description>&lt;p&gt;Beta 2-style Queries)&lt;/p&gt;

&lt;p&gt;This class will only be used/included when codegenned with &lt;manualQuery support="true"/&gt; in the codegen settings.
It is rare for this to be used manually.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="10" namespace="global" package="Default">
        <name>$strSelectArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="11" namespace="global" package="Default">
        <name>$strFromArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="12" namespace="global" package="Default">
        <name>$strWhereArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="14" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="14">
          <name>$strClassName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="14">
          <name>$strParentAlias</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="14">
          <name>$objExpansionMap</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Default">
        <name>AddSelectItem</name>
        <full_name>AddSelectItem</full_name>
        <argument line="31">
          <name>$strItem</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Default">
        <name>AddFromItem</name>
        <full_name>AddFromItem</full_name>
        <argument line="35">
          <name>$strItem</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Default">
        <name>AddWhereItem</name>
        <full_name>AddWhereItem</full_name>
        <argument line="39">
          <name>$strItem</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Default">
        <name>GetSelectSql</name>
        <full_name>GetSelectSql</full_name>
        <argument line="43">
          <name>$strPrefix</name>
          <default>",\n					"</default>
          <type/>
        </argument>
        <argument line="43">
          <name>$strGlue</name>
          <default>",\n					"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="Default">
        <name>GetFromSql</name>
        <full_name>GetFromSql</full_name>
        <argument line="51">
          <name>$strPrefix</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="51">
          <name>$strGlue</name>
          <default>"\n					"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Default">
        <name>GetWhereSql</name>
        <full_name>GetWhereSql</full_name>
        <argument line="59">
          <name>$strPrefix</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$strGlue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QQueryExpansion.class.php</error>
      <error line="10" code="50018">No DocBlock was found for property $strSelectArray</error>
      <error line="11" code="50018">No DocBlock was found for property $strFromArray</error>
      <error line="12" code="50018">No DocBlock was found for property $strWhereArray</error>
      <error line="14" code="50010">No DocBlock was found for method __construct()</error>
      <error line="31" code="50010">No DocBlock was found for method AddSelectItem()</error>
      <error line="35" code="50010">No DocBlock was found for method AddFromItem()</error>
      <error line="39" code="50010">No DocBlock was found for method AddWhereItem()</error>
      <error line="43" code="50010">No DocBlock was found for method GetSelectSql()</error>
      <error line="51" code="50010">No DocBlock was found for method GetFromSql()</error>
      <error line="59" code="50010">No DocBlock was found for method GetWhereSql()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QStack.class.php" hash="b91876b7b0d535cf68353542cf6f4cdc" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends>\QBaseClass</extends>
      <name>QStack</name>
      <full_name>\QStack</full_name>
      <docblock line="2">
        <description>An DataType class for the Stack data type.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="6" namespace="global" package="Default">
        <name>$objArray</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="8" package="Default">
        <name>Push</name>
        <full_name>Push</full_name>
        <argument line="8">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="14" package="Default">
        <name>PushFirst</name>
        <full_name>PushFirst</full_name>
        <argument line="14">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>Pop</name>
        <full_name>Pop</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>PopFirst</name>
        <full_name>PopFirst</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Default">
        <name>Peek</name>
        <full_name>Peek</full_name>
        <argument line="43">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Default">
        <name>PeekLast</name>
        <full_name>PeekLast</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Default">
        <name>IsEmpty</name>
        <full_name>IsEmpty</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>Size</name>
        <full_name>Size</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="Default">
        <name>ConvertToArray</name>
        <full_name>ConvertToArray</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QStack.class.php</error>
      <error line="6" code="50018">No DocBlock was found for property $objArray</error>
      <error line="8" code="50010">No DocBlock was found for method Push()</error>
      <error line="14" code="50010">No DocBlock was found for method PushFirst()</error>
      <error line="26" code="50010">No DocBlock was found for method Pop()</error>
      <error line="33" code="50010">No DocBlock was found for method PopFirst()</error>
      <error line="43" code="50010">No DocBlock was found for method Peek()</error>
      <error line="50" code="50010">No DocBlock was found for method PeekLast()</error>
      <error line="57" code="50010">No DocBlock was found for method IsEmpty()</error>
      <error line="61" code="50010">No DocBlock was found for method Size()</error>
      <error line="65" code="50010">No DocBlock was found for method ConvertToArray()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QDateTime.class.php" hash="ede32e6611e6ba202de12cabfff1361e" package="Default">
    <function namespace="global" line="5" package="Default">
      <name>QDateTimeErrorHandler</name>
      <full_name>\QDateTimeErrorHandler</full_name>
    </function>
    <class final="false" abstract="false" namespace="global" line="4" package="Default">
      <extends>\QCallerException</extends>
      <name>QDateTimeNullException</name>
      <full_name>\QDateTimeNullException</full_name>
    </class>
    <class final="false" abstract="false" namespace="global" line="17" package="Default">
      <extends>\DateTime</extends>
      <name>QDateTime</name>
      <full_name>\QDateTime</full_name>
      <docblock line="7">
        <description>QDateTime (Standard)
REQUIRES: PHP &gt;= 5.2.0</description>
        <long-description>&lt;p&gt;This DateTime class manages datetimes for the entire system.  It basically
provides a nice wrapper around the PHP DateTime class, which is included with
all versions of PHP &gt;= 5.2.0.&lt;/p&gt;

&lt;p&gt;For legacy PHP users (PHP &amp;lt; 5.2.0), please refer to QDateTime.legacy&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="18" package="Default">
        <name>Now</name>
        <full_name>Now</full_name>
        <value>'now'</value>
      </constant>
      <constant namespace="global" line="19" package="Default">
        <name>FormatIso</name>
        <full_name>FormatIso</full_name>
        <value>'YYYY-MM-DD hhhh:mm:ss'</value>
      </constant>
      <constant namespace="global" line="20" package="Default">
        <name>FormatIsoCompressed</name>
        <full_name>FormatIsoCompressed</full_name>
        <value>'YYYYMMDDhhhhmmss'</value>
      </constant>
      <constant namespace="global" line="21" package="Default">
        <name>FormatDisplayDate</name>
        <full_name>FormatDisplayDate</full_name>
        <value>'MMM DD YYYY'</value>
      </constant>
      <constant namespace="global" line="22" package="Default">
        <name>FormatDisplayDateFull</name>
        <full_name>FormatDisplayDateFull</full_name>
        <value>'DDD, MMMM D, YYYY'</value>
      </constant>
      <constant namespace="global" line="23" package="Default">
        <name>FormatDisplayDateTime</name>
        <full_name>FormatDisplayDateTime</full_name>
        <value>'MMM DD YYYY hh:mm zz'</value>
      </constant>
      <constant namespace="global" line="24" package="Default">
        <name>FormatDisplayDateTimeFull</name>
        <full_name>FormatDisplayDateTimeFull</full_name>
        <value>'DDDD, MMMM D, YYYY, h:mm:ss zz'</value>
      </constant>
      <constant namespace="global" line="25" package="Default">
        <name>FormatDisplayTime</name>
        <full_name>FormatDisplayTime</full_name>
        <value>'hh:mm:ss zz'</value>
      </constant>
      <constant namespace="global" line="26" package="Default">
        <name>FormatRfc822</name>
        <full_name>FormatRfc822</full_name>
        <value>'DDD, DD MMM YYYY hhhh:mm:ss ttt'</value>
      </constant>
      <constant namespace="global" line="28" package="Default">
        <name>FormatSoap</name>
        <full_name>FormatSoap</full_name>
        <value>'YYYY-MM-DDThhhh:mm:ss'</value>
      </constant>
      <constant namespace="global" line="30" package="Default">
        <name>UnknownType</name>
        <full_name>UnknownType</full_name>
        <value>0</value>
      </constant>
      <constant namespace="global" line="31" package="Default">
        <name>DateOnlyType</name>
        <full_name>DateOnlyType</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="32" package="Default">
        <name>TimeOnlyType</name>
        <full_name>TimeOnlyType</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="33" package="Default">
        <name>DateAndTimeType</name>
        <full_name>DateAndTimeType</full_name>
        <value>3</value>
      </constant>
      <property final="false" static="true" visibility="public" line="39" namespace="global" package="Default">
        <name>$DefaultFormat</name>
        <default>\QDateTime::FormatDisplayDate</default>
        <docblock line="35">
          <description>The "Default" Display Format</description>
          <long-description/>
          <tag line="35" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="45" namespace="global" package="Default">
        <name>$DefaultTimeFormat</name>
        <default>\QDateTime::FormatDisplayTime</default>
        <docblock line="41">
          <description>The "Default" Display Format for Times</description>
          <long-description/>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" namespace="global" package="Default">
        <name>$blnDateNull</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="global" package="Default">
        <name>$blnTimeNull</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="249" namespace="global" package="Default">
        <name>$strSerializedData</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="54" package="Default">
        <name>Now</name>
        <full_name>Now</full_name>
        <docblock line="47">
          <description>Returns a new QDateTime object that's set to "Now"
Set blnTimeValue to true (default) for a DateTime, and set blnTimeValue to false for just a Date</description>
          <long-description/>
          <tag line="47" name="param" description="whether or not to include the time value" type="boolean" variable="$blnTimeValue">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="47" name="return" description="the current date and/or time" type="\QDateTime">
            <type by_reference="false">\QDateTime</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$blnTimeValue</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="66" package="Default">
        <name>NowToString</name>
        <full_name>NowToString</full_name>
        <argument line="66">
          <name>$strFormat</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Default">
        <name>IsDateNull</name>
        <full_name>IsDateNull</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Default">
        <name>IsNull</name>
        <full_name>IsNull</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="Default">
        <name>IsTimeNull</name>
        <full_name>IsTimeNull</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Default">
        <name>PhpDate</name>
        <full_name>PhpDate</full_name>
        <argument line="79">
          <name>$strFormat</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>GetSoapDateTimeArray</name>
        <full_name>GetSoapDateTimeArray</full_name>
        <argument line="83">
          <name>$dttArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="98" package="Default">
        <name>FromTimestamp</name>
        <full_name>FromTimestamp</full_name>
        <docblock line="93">
          <description/>
          <long-description/>
          <tag line="93" name="param" description="" type="integer" variable="$intTimestamp">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="93" name="param" description="" type="\DateTimeZone" variable="$objTimeZone">
            <type by_reference="false">\DateTimeZone</type>
          </tag>
          <tag line="93" name="return" description="" type="\QDateTime">
            <type by_reference="false">\QDateTime</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$intTimestamp</name>
          <default/>
          <type/>
        </argument>
        <argument line="98">
          <name>$objTimeZone</name>
          <default>null</default>
          <type>\DateTimeZone</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="102">
          <name>$mixValue</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="102">
          <name>$objTimeZone</name>
          <default>null</default>
          <type>\DateTimeZone</type>
        </argument>
        <argument line="102">
          <name>$intType</name>
          <default>\QDateTime::UnknownType</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="231" package="Default">
        <name>LastDayOfTheMonth</name>
        <full_name>LastDayOfTheMonth</full_name>
        <docblock line="224">
          <description>Returns a new QDateTime object set to the last day of the specified month.</description>
          <long-description/>
          <tag line="224" name="param" description="month" type="int" variable="$intMonth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="224" name="param" description="year" type="int" variable="$intYear">
            <type by_reference="false">int</type>
          </tag>
          <tag line="224" name="return" description="the last day to a month in a year" type="\QDateTime">
            <type by_reference="false">\QDateTime</type>
          </tag>
        </docblock>
        <argument line="231">
          <name>$intMonth</name>
          <default/>
          <type/>
        </argument>
        <argument line="231">
          <name>$intYear</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="243" package="Default">
        <name>FirstDayOfTheMonth</name>
        <full_name>FirstDayOfTheMonth</full_name>
        <docblock line="236">
          <description>Returns a new QDateTime object set to the first day of the specified month.</description>
          <long-description/>
          <tag line="236" name="param" description="month" type="int" variable="$intMonth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="236" name="param" description="year" type="int" variable="$intYear">
            <type by_reference="false">int</type>
          </tag>
          <tag line="236" name="return" description="the first day of the month" type="\QDateTime">
            <type by_reference="false">\QDateTime</type>
          </tag>
        </docblock>
        <argument line="243">
          <name>$intMonth</name>
          <default/>
          <type/>
        </argument>
        <argument line="243">
          <name>$intYear</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="250" package="Default">
        <name>__sleep</name>
        <full_name>__sleep</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="254" package="Default">
        <name>__wakeup</name>
        <full_name>__wakeup</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="269" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="258">
          <description/>
          <long-description/>
          <tag line="258" name="deprecated" description="since PHP 5.3&#10;DEPRECATED - DO NOT USE. For PHP 5.3 compatability, this method should not be called with parameters.&#10;In previous versions of QCubed and QCodo, the way to format a date was to call &#10;__toString(), passing the format as a parameter. PHP 5.3 no longer supports this construct. &#10;To format a date, call $myDateTimeObject-&gt;qFormat($strParameters).&#10;For compatibility with old apps, this method is preserved - and passing parameters to it is&#10;allowed, through a horrible hack. Please DO NOT use in applications that were written past the&#10;release of PHP 5.3."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="320" package="Default">
        <name>qFormat</name>
        <full_name>qFormat</full_name>
        <docblock line="280">
          <description>Outputs the date as a string given the format strFormat.</description>
          <long-description>&lt;p&gt;By default,
it will return as QDateTime::FormatDisplayDate "MMM DD YYYY", e.g. Mar 20 1977.&lt;/p&gt;

&lt;p&gt;Properties of strFormat are (using Sunday, March 2, 1977 at 1:15:35 pm
in the following examples):&lt;/p&gt;

&lt;p&gt;M - Month as an integer (e.g., 3)
MM - Month as an integer with leading zero (e.g., 03)
MMM - Month as three-letters (e.g., Mar)
MMMM - Month as full name (e.g., March)&lt;/p&gt;

&lt;p&gt;D - Day as an integer (e.g., 2)
DD - Day as an integer with leading zero (e.g., 02)
DDD - Day of week as three-letters (e.g., Wed)
DDDD - Day of week as full name (e.g., Wednesday)&lt;/p&gt;

&lt;p&gt;YY - Year as a two-digit integer (e.g., 77)
YYYY - Year as a four-digit integer (e.g., 1977)&lt;/p&gt;

&lt;p&gt;h - Hour as an integer in 12-hour format (e.g., 1)
hh - Hour as an integer in 12-hour format with leading zero (e.g., 01)
hhh - Hour as an integer in 24-hour format (e.g., 13)
hhhh - Hour as an integer in 24-hour format with leading zero (e.g., 13)&lt;/p&gt;

&lt;p&gt;mm - Minute as a two-digit integer&lt;/p&gt;

&lt;p&gt;ss - Second as a two-digit integer&lt;/p&gt;

&lt;p&gt;z - "pm" or "am"
zz - "PM" or "AM"
zzz - "p.m." or "a.m."
zzzz - "P.M." or "A.M."&lt;/p&gt;

&lt;p&gt;ttt - Timezone Abbreviation as a three-letter code (e.g. PDT, GMT)
 tttt - Timezone Identifier (e.g. America/Los_Angeles)&lt;/p&gt;</long-description>
          <tag line="280" name="param" description="the format of the date" type="string" variable="$strFormat">
            <type by_reference="false">string</type>
          </tag>
          <tag line="280" name="return" description="the formatted date as a string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="320">
          <name>$strFormat</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="436" package="Default">
        <name>setTime</name>
        <full_name>setTime</full_name>
        <argument line="436">
          <name>$intHour</name>
          <default/>
          <type/>
        </argument>
        <argument line="436">
          <name>$intMinute</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="436">
          <name>$intSecond</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="453" package="Default">
        <name>setDate</name>
        <full_name>setDate</full_name>
        <argument line="453">
          <name>$intYear</name>
          <default/>
          <type/>
        </argument>
        <argument line="453">
          <name>$intMonth</name>
          <default/>
          <type/>
        </argument>
        <argument line="453">
          <name>$intDay</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="462" package="Default">
        <name>ReinforceNullProperties</name>
        <full_name>ReinforceNullProperties</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="483" package="Default">
        <name>ConvertToTimezone</name>
        <full_name>ConvertToTimezone</full_name>
        <docblock line="469">
          <description>Converts the current QDateTime object to a different TimeZone.</description>
          <long-description>&lt;p&gt;TimeZone should be passed in as a string-based identifier.&lt;/p&gt;

&lt;p&gt;Note that this is different than the built-in DateTime::SetTimezone() method which expicitly
takes in a DateTimeZone object.  QDateTime::ConvertToTimezone allows you to specify any
string-based Timezone identifier.  If none is specified and/or if the specified timezone
is not a valid identifier, it will simply remain unchanged as opposed to throwing an exeception
or error.&lt;/p&gt;</long-description>
          <tag line="469" name="param" description="a string-based parameter specifying a timezone identifier (e.g. America/Los_Angeles)" type="string" variable="$strTimezoneIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="483">
          <name>$strTimezoneIdentifier</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="490" package="Default">
        <name>IsEqualTo</name>
        <full_name>IsEqualTo</full_name>
        <argument line="490">
          <name>$dttCompare</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="511" package="Default">
        <name>IsEarlierThan</name>
        <full_name>IsEarlierThan</full_name>
        <argument line="511">
          <name>$dttCompare</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="532" package="Default">
        <name>IsEarlierOrEqualTo</name>
        <full_name>IsEarlierOrEqualTo</full_name>
        <argument line="532">
          <name>$dttCompare</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="553" package="Default">
        <name>IsLaterThan</name>
        <full_name>IsLaterThan</full_name>
        <argument line="553">
          <name>$dttCompare</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="574" package="Default">
        <name>IsLaterOrEqualTo</name>
        <full_name>IsLaterOrEqualTo</full_name>
        <argument line="574">
          <name>$dttCompare</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="595" package="Default">
        <name>Difference</name>
        <full_name>Difference</full_name>
        <argument line="595">
          <name>$dttDateTime</name>
          <default/>
          <type>\QDateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="600" package="Default">
        <name>Add</name>
        <full_name>Add</full_name>
        <argument line="600">
          <name>$dtsSpan</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="612" package="Default">
        <name>AddSeconds</name>
        <full_name>AddSeconds</full_name>
        <argument line="612">
          <name>$intSeconds</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="617" package="Default">
        <name>AddMinutes</name>
        <full_name>AddMinutes</full_name>
        <argument line="617">
          <name>$intMinutes</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="622" package="Default">
        <name>AddHours</name>
        <full_name>AddHours</full_name>
        <argument line="622">
          <name>$intHours</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="627" package="Default">
        <name>AddDays</name>
        <full_name>AddDays</full_name>
        <argument line="627">
          <name>$intDays</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="632" package="Default">
        <name>AddMonths</name>
        <full_name>AddMonths</full_name>
        <argument line="632">
          <name>$intMonths</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="637" package="Default">
        <name>AddYears</name>
        <full_name>AddYears</full_name>
        <argument line="637">
          <name>$intYears</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="642" package="Default">
        <name>Modify</name>
        <full_name>Modify</full_name>
        <argument line="642">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="647" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="647">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="716" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="716">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="716">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QDateTime.class.php</error>
      <error line="5" code="50009">No DocBlock was found for function \QDateTimeErrorHandler()</error>
      <error line="4" code="50000">No DocBlock was found for \QDateTimeNullException</error>
      <error line="63" code="50018">No DocBlock was found for property $blnDateNull</error>
      <error line="64" code="50018">No DocBlock was found for property $blnTimeNull</error>
      <error line="249" code="50018">No DocBlock was found for property $strSerializedData</error>
      <error line="66" code="50010">No DocBlock was found for method NowToString()</error>
      <error line="70" code="50010">No DocBlock was found for method IsDateNull()</error>
      <error line="73" code="50010">No DocBlock was found for method IsNull()</error>
      <error line="76" code="50010">No DocBlock was found for method IsTimeNull()</error>
      <error line="79" code="50010">No DocBlock was found for method PhpDate()</error>
      <error line="83" code="50010">No DocBlock was found for method GetSoapDateTimeArray()</error>
      <error line="93" code="50012">No short description for method FromTimestamp()</error>
      <error line="102" code="50010">No DocBlock was found for method __construct()</error>
      <error line="250" code="50010">No DocBlock was found for method __sleep()</error>
      <error line="254" code="50010">No DocBlock was found for method __wakeup()</error>
      <error line="258" code="50012">No short description for method __toString()</error>
      <error line="436" code="50010">No DocBlock was found for method setTime()</error>
      <error line="453" code="50010">No DocBlock was found for method setDate()</error>
      <error line="462" code="50010">No DocBlock was found for method ReinforceNullProperties()</error>
      <error line="490" code="50010">No DocBlock was found for method IsEqualTo()</error>
      <error line="511" code="50010">No DocBlock was found for method IsEarlierThan()</error>
      <error line="532" code="50010">No DocBlock was found for method IsEarlierOrEqualTo()</error>
      <error line="553" code="50010">No DocBlock was found for method IsLaterThan()</error>
      <error line="574" code="50010">No DocBlock was found for method IsLaterOrEqualTo()</error>
      <error line="595" code="50010">No DocBlock was found for method Difference()</error>
      <error line="600" code="50010">No DocBlock was found for method Add()</error>
      <error line="612" code="50010">No DocBlock was found for method AddSeconds()</error>
      <error line="617" code="50010">No DocBlock was found for method AddMinutes()</error>
      <error line="622" code="50010">No DocBlock was found for method AddHours()</error>
      <error line="627" code="50010">No DocBlock was found for method AddDays()</error>
      <error line="632" code="50010">No DocBlock was found for method AddMonths()</error>
      <error line="637" code="50010">No DocBlock was found for method AddYears()</error>
      <error line="642" code="50010">No DocBlock was found for method Modify()</error>
      <error line="647" code="50010">No DocBlock was found for method __get()</error>
      <error line="716" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QAbstractCacheProvider.class.php" hash="4560940c730bc796c0a9771eedaca609" package="Default">
    <class final="false" abstract="true" namespace="global" line="6" package="Default">
      <extends/>
      <name>QAbstractCacheProvider</name>
      <full_name>\QAbstractCacheProvider</full_name>
      <docblock line="3">
        <description>abstract cache provider</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>Get</name>
        <full_name>Get</full_name>
        <docblock line="7">
          <description>Get the object that has the given key from the cache</description>
          <long-description/>
          <tag line="7" name="param" description="the key of the object in the cache" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="7" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="12">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>Set</name>
        <full_name>Set</full_name>
        <docblock line="14">
          <description>Set the object into the cache with the given key</description>
          <long-description/>
          <tag line="14" name="param" description="the key to use for the object" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="14" name="param" description="the object to put in the cache" type="object" variable="$objValue">
            <type by_reference="false">object</type>
          </tag>
          <tag line="14" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="20">
          <name>$objValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="27" package="Default">
        <name>Delete</name>
        <full_name>Delete</full_name>
        <docblock line="22">
          <description>Delete the object that has the given key from the cache</description>
          <long-description/>
          <tag line="22" name="param" description="the key of the object in the cache" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="22" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>DeleteAll</name>
        <full_name>DeleteAll</full_name>
        <docblock line="29">
          <description>Invalidate all the objects in the cache</description>
          <long-description/>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Default">
        <name>CreateKey</name>
        <full_name>CreateKey</full_name>
        <docblock line="35">
          <description>Create a key appropriate for this cache provider</description>
          <long-description/>
          <tag line="35" name="return" description="the key" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QAbstractCacheProvider.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QQuery.class.php" hash="1e5d6419b68e5e35fb3be799ff083a5a" package="Default">
    <class final="false" abstract="true" namespace="global" line="24" package="Default">
      <extends>\QBaseClass</extends>
      <name>QQBaseNode</name>
      <full_name>\QQBaseNode</full_name>
      <docblock line="10">
        <description>The abstract QQBaseNode class</description>
        <long-description/>
        <tag line="10" name="property-read" description="" type="\QQBaseNode" variable="$_ParentNode">
          <type by_reference="false">\QQBaseNode</type>
        </tag>
        <tag line="10" name="property-read" description="" type="string" variable="$_Name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="property-read" description="" type="string" variable="$_Alias">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="property-write" description="" type="string" variable="$Alias">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="property-read" description="" type="string" variable="$_PropertyName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="property-read" description="" type="string" variable="$_Type">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="property-read" description="" type="string" variable="$_RootTableName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="property-read" description="" type="string" variable="$_TableName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="property-read" description="" type="string" variable="$_PrimaryKey">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="property-read" description="" type="string" variable="$_ClassName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="10" name="property-read" description="" type="\QQBaseNode" variable="$_PrimaryKeyNode">
          <type by_reference="false">\QQBaseNode</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$objParentNode</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$strType</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$strName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strAlias</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strPropertyName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$strRootTableName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$strTableName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$strPrimaryKey</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="global" package="Default">
        <name>$strClassName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$blnExpandAsArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$objChildNodeArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="40">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="78">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="111" package="Default">
        <name>GetColumnAliasHelper</name>
        <full_name>GetColumnAliasHelper</full_name>
        <argument line="111">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="111">
          <name>$blnExpandSelection</name>
          <default/>
          <type/>
        </argument>
        <argument line="111">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="112" package="Default">
        <name>GetColumnAlias</name>
        <full_name>GetColumnAlias</full_name>
        <argument line="112">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="112">
          <name>$blnExpandSelection</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="112">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
        <argument line="112">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Default">
        <name>_MergeExpansionNode</name>
        <full_name>_MergeExpansionNode</full_name>
        <docblock line="114">
          <description>Merges a node tree into this node, building the child nodes.</description>
          <long-description>&lt;p&gt;The node being received
is assumed to be specially built node such that only one child node exists, if any,
and the last node in the chain is designated as array expansion. The goal of all of this
is to set up a node chain where intermediate nodes can be designated as being array
expansion nodes, as well as the leaf nodes.&lt;/p&gt;</long-description>
          <tag line="114" name="param" description="" type="\QQBaseNode" variable="$objNewNode">
            <type by_reference="false">\QQBaseNode</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$objNewNode</name>
          <default/>
          <type>\QQBaseNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="Default">
        <name>ExtendedAlias</name>
        <full_name>ExtendedAlias</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="Default">
        <name>FirstChild</name>
        <full_name>FirstChild</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="171" package="Default">
      <extends>\QQBaseNode</extends>
      <name>QQNode</name>
      <full_name>\QQNode</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="172" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="172">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="172">
          <name>$strPropertyName</name>
          <default/>
          <type/>
        </argument>
        <argument line="172">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
        <argument line="172">
          <name>$objParentNode</name>
          <default>null</default>
          <type>\QQBaseNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="Default">
        <name>GetValue</name>
        <full_name>GetValue</full_name>
        <docblock line="189">
          <description/>
          <long-description/>
          <tag line="189" name="param" description="" type="mixed" variable="$mixValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="189" name="param" description="" type="\QQueryBuilder" variable="$objBuilder">
            <type by_reference="false">\QQueryBuilder</type>
          </tag>
          <tag line="189" name="param" description="can be null (for no equality), true (to add a standard &quot;equal to&quot;) or false (to add a standard &quot;not equal to&quot;)" type="boolean" variable="$blnEqualityType">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="189" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="195">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="195">
          <name>$blnEqualityType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="239" package="Default">
        <name>GetAsManualSqlColumn</name>
        <full_name>GetAsManualSqlColumn</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="248" package="Default">
        <name>isTopLevelLeafNode</name>
        <full_name>isTopLevelLeafNode</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="252" package="Default">
        <name>GetTable</name>
        <full_name>GetTable</full_name>
        <argument line="252">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="252">
          <name>$blnExpandSelection</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="252">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
        <argument line="252">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="282" package="Default">
        <name>GetTableAlias</name>
        <full_name>GetTableAlias</full_name>
        <argument line="282">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="282">
          <name>$blnExpandSelection</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="282">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
        <argument line="282">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="287" package="Default">
        <name>MakeColumnAlias</name>
        <full_name>MakeColumnAlias</full_name>
        <argument line="287">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="287">
          <name>$strTableAlias</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="296" package="Default">
        <name>GetColumnAlias</name>
        <full_name>GetColumnAlias</full_name>
        <argument line="296">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="296">
          <name>$blnExpandSelection</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="296">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
        <argument line="296">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="302" package="Default">
        <name>addJoinTable</name>
        <full_name>addJoinTable</full_name>
        <argument line="302">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="302">
          <name>$strJoinTableAlias</name>
          <default/>
          <type/>
        </argument>
        <argument line="302">
          <name>$strParentAlias</name>
          <default/>
          <type/>
        </argument>
        <argument line="302">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="307" package="Default">
        <name>GetColumnAliasHelper</name>
        <full_name>GetColumnAliasHelper</full_name>
        <argument line="307">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="307">
          <name>$blnExpandSelection</name>
          <default/>
          <type/>
        </argument>
        <argument line="307">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="339" package="Default">
        <name>GetDataGridHtmlHelper</name>
        <full_name>GetDataGridHtmlHelper</full_name>
        <argument line="339">
          <name>$strNodeLabelArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="339">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="345" package="Default">
        <name>GetDataGridHtml</name>
        <full_name>GetDataGridHtml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="387" package="Default">
        <name>GetDataGridOrderByNode</name>
        <full_name>GetDataGridOrderByNode</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="393" package="Default">
        <name>SetFilteredDataGridColumnFilter</name>
        <full_name>SetFilteredDataGridColumnFilter</full_name>
        <argument line="393">
          <name>$col</name>
          <default/>
          <type>\QDataGridColumn</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="434" package="Default">
      <extends>\QQNode</extends>
      <name>QQReverseReferenceNode</name>
      <full_name>\QQReverseReferenceNode</full_name>
      <property final="false" static="false" visibility="protected" line="435" namespace="global" package="Default">
        <name>$strForeignKey</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="437" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="437">
          <name>$objParentNode</name>
          <default/>
          <type>\QQBaseNode</type>
        </argument>
        <argument line="437">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="437">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
        <argument line="437">
          <name>$strForeignKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="437">
          <name>$strPropertyName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="454" package="Default">
        <name>addJoinTable</name>
        <full_name>addJoinTable</full_name>
        <argument line="454">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="454">
          <name>$strJoinTableAlias</name>
          <default/>
          <type/>
        </argument>
        <argument line="454">
          <name>$strParentAlias</name>
          <default/>
          <type/>
        </argument>
        <argument line="454">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="459" package="Default">
        <name>GetColumnAlias</name>
        <full_name>GetColumnAlias</full_name>
        <argument line="459">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="459">
          <name>$blnExpandSelection</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="459">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
        <argument line="459">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="464" package="Default">
        <name>GetExpandArrayAlias</name>
        <full_name>GetExpandArrayAlias</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="482" package="Default">
      <extends>\QQBaseNode</extends>
      <name>QQAssociationNode</name>
      <full_name>\QQAssociationNode</full_name>
      <docblock line="479">
        <description/>
        <long-description/>
        <tag line="479" name="property-read" description="" type="\QQNode" variable="$_ChildTableNode">
          <type by_reference="false">\QQNode</type>
        </tag>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="483" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="483">
          <name>$objParentNode</name>
          <default/>
          <type>\QQBaseNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="497" package="Default">
        <name>GetColumnAlias</name>
        <full_name>GetColumnAlias</full_name>
        <argument line="497">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="497">
          <name>$blnExpandSelection</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="497">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
        <argument line="497">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="531" package="Default">
        <name>GetColumnAliasHelper</name>
        <full_name>GetColumnAliasHelper</full_name>
        <argument line="531">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="531">
          <name>$blnExpandSelection</name>
          <default/>
          <type/>
        </argument>
        <argument line="531">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="555" package="Default">
        <name>GetExpandArrayAlias</name>
        <full_name>GetExpandArrayAlias</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="569" package="Default">
      <extends>\QQNode</extends>
      <name>QQNamedValue</name>
      <full_name>\QQNamedValue</full_name>
      <constant namespace="global" line="570" package="Default">
        <name>DelimiterCode</name>
        <full_name>DelimiterCode</full_name>
        <value>3</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="571" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="571">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="574" package="Default">
        <name>Parameter</name>
        <full_name>Parameter</full_name>
        <argument line="574">
          <name>$blnEqualityType</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="584" package="Default">
      <extends>\QBaseClass</extends>
      <name>QQCondition</name>
      <full_name>\QQCondition</full_name>
      <property final="false" static="false" visibility="protected" line="585" namespace="global" package="Default">
        <name>$strOperator</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="591" namespace="global" package="Default">
        <name>$blnProcessed</name>
        <default/>
      </property>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="586" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="586">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="587" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="601" package="Default">
        <name>GetWhereClause</name>
        <full_name>GetWhereClause</full_name>
        <docblock line="593">
          <description>Used internally by QCubed Query to get an individual where clause for a given condition
Mostly used for conditional joins.</description>
          <long-description/>
          <tag line="593" name="param" description="" type="\QDatabaseBase" variable="$objDatabase">
            <type by_reference="false">\QDatabaseBase</type>
          </tag>
          <tag line="593" name="param" description="" type="string" variable="$strRootTableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="593" name="param" description="" type="boolean" variable="$blnProcessOnce">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="601">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="601">
          <name>$blnProcessOnce</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="618" package="Default">
      <extends>\QQCondition</extends>
      <name>QQConditionAll</name>
      <full_name>\QQConditionAll</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="619" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="619">
          <name>$mixParameterArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="623" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="623">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="627" package="Default">
      <extends>\QQCondition</extends>
      <name>QQConditionNone</name>
      <full_name>\QQConditionNone</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="628" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="628">
          <name>$mixParameterArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="632" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="632">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="636" package="Default">
      <extends>\QQCondition</extends>
      <name>QQConditionLogical</name>
      <full_name>\QQConditionLogical</full_name>
      <property final="false" static="false" visibility="protected" line="638" namespace="global" package="Default">
        <name>$objConditionArray</name>
        <default/>
        <docblock line="637">
          <description/>
          <long-description/>
          <tag line="637" name="var" description="" type="\QQCondition[]">
            <type by_reference="false">\QQCondition[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="639" package="Default">
        <name>CollapseConditions</name>
        <full_name>CollapseConditions</full_name>
        <argument line="639">
          <name>$mixParameterArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="657" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="657">
          <name>$mixParameterArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="666" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="666">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="686" package="Default">
      <extends>\QQConditionLogical</extends>
      <name>QQConditionOr</name>
      <full_name>\QQConditionOr</full_name>
      <property final="false" static="false" visibility="protected" line="687" namespace="global" package="Default">
        <name>$strOperator</name>
        <default>'OR'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="689" package="Default">
      <extends>\QQConditionLogical</extends>
      <name>QQConditionAnd</name>
      <full_name>\QQConditionAnd</full_name>
      <property final="false" static="false" visibility="protected" line="690" namespace="global" package="Default">
        <name>$strOperator</name>
        <default>'AND'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="693" package="Default">
      <extends>\QQCondition</extends>
      <name>QQConditionNot</name>
      <full_name>\QQConditionNot</full_name>
      <property final="false" static="false" visibility="protected" line="694" namespace="global" package="Default">
        <name>$objCondition</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="695" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="695">
          <name>$objCondition</name>
          <default/>
          <type>\QQCondition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="698" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="698">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="710" package="Default">
      <extends>\QQCondition</extends>
      <name>QQConditionComparison</name>
      <full_name>\QQConditionComparison</full_name>
      <property final="false" static="false" visibility="public" line="711" namespace="global" package="Default">
        <name>$objQueryNode</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="712" namespace="global" package="Default">
        <name>$mixOperand</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="713" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="713">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="713">
          <name>$mixOperand</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="741" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="741">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="746" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionIsNull</name>
      <full_name>\QQConditionIsNull</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="747" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="747">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="752" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="752">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="757" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionIsNotNull</name>
      <full_name>\QQConditionIsNotNull</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="758" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="758">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="763" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="763">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="768" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionIn</name>
      <full_name>\QQConditionIn</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="769" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="769">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="769">
          <name>$mixValuesArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="788" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="788">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="809" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionNotIn</name>
      <full_name>\QQConditionNotIn</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="810" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="810">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="810">
          <name>$mixValuesArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="829" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="829">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="850" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionLike</name>
      <full_name>\QQConditionLike</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="851" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="851">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="851">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="868" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="868">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="879" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionNotLike</name>
      <full_name>\QQConditionNotLike</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="880" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="880">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="880">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="897" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="897">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="908" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionBetween</name>
      <full_name>\QQConditionBetween</full_name>
      <property final="false" static="false" visibility="protected" line="909" namespace="global" package="Default">
        <name>$mixOperandTwo</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="910" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="910">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="910">
          <name>$strMinValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="910">
          <name>$strMaxValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="930" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="930">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="943" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionNotBetween</name>
      <full_name>\QQConditionNotBetween</full_name>
      <property final="false" static="false" visibility="protected" line="944" namespace="global" package="Default">
        <name>$mixOperandTwo</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="945" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="945">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="945">
          <name>$strMinValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="945">
          <name>$strMaxValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="965" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="965">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="978" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionEqual</name>
      <full_name>\QQConditionEqual</full_name>
      <property final="false" static="false" visibility="protected" line="979" namespace="global" package="Default">
        <name>$strOperator</name>
        <default>' = '</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="980" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="980">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="984" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionNotEqual</name>
      <full_name>\QQConditionNotEqual</full_name>
      <property final="false" static="false" visibility="protected" line="985" namespace="global" package="Default">
        <name>$strOperator</name>
        <default>' != '</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="986" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="986">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="990" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionGreaterThan</name>
      <full_name>\QQConditionGreaterThan</full_name>
      <property final="false" static="false" visibility="protected" line="991" namespace="global" package="Default">
        <name>$strOperator</name>
        <default>' &gt; '</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="993" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionLessThan</name>
      <full_name>\QQConditionLessThan</full_name>
      <property final="false" static="false" visibility="protected" line="994" namespace="global" package="Default">
        <name>$strOperator</name>
        <default>' &lt; '</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="996" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionGreaterOrEqual</name>
      <full_name>\QQConditionGreaterOrEqual</full_name>
      <property final="false" static="false" visibility="protected" line="997" namespace="global" package="Default">
        <name>$strOperator</name>
        <default>' &gt;= '</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="999" package="Default">
      <extends>\QQConditionComparison</extends>
      <name>QQConditionLessOrEqual</name>
      <full_name>\QQConditionLessOrEqual</full_name>
      <property final="false" static="false" visibility="protected" line="1000" namespace="global" package="Default">
        <name>$strOperator</name>
        <default>' &lt;= '</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="1003" package="Default">
      <extends/>
      <name>QQ</name>
      <full_name>\QQ</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1008" package="Default">
        <name>All</name>
        <full_name>All</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1012" package="Default">
        <name>None</name>
        <full_name>None</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1016" package="Default">
        <name>OrCondition</name>
        <full_name>OrCondition</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1020" package="Default">
        <name>AndCondition</name>
        <full_name>AndCondition</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1024" package="Default">
        <name>Not</name>
        <full_name>Not</full_name>
        <argument line="1024">
          <name>$objCondition</name>
          <default/>
          <type>\QQCondition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1028" package="Default">
        <name>Equal</name>
        <full_name>Equal</full_name>
        <argument line="1028">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1028">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1031" package="Default">
        <name>NotEqual</name>
        <full_name>NotEqual</full_name>
        <argument line="1031">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1031">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1034" package="Default">
        <name>GreaterThan</name>
        <full_name>GreaterThan</full_name>
        <argument line="1034">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1034">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1037" package="Default">
        <name>GreaterOrEqual</name>
        <full_name>GreaterOrEqual</full_name>
        <argument line="1037">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1037">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1040" package="Default">
        <name>LessThan</name>
        <full_name>LessThan</full_name>
        <argument line="1040">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1040">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1043" package="Default">
        <name>LessOrEqual</name>
        <full_name>LessOrEqual</full_name>
        <argument line="1043">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1043">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1046" package="Default">
        <name>IsNull</name>
        <full_name>IsNull</full_name>
        <argument line="1046">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1049" package="Default">
        <name>IsNotNull</name>
        <full_name>IsNotNull</full_name>
        <argument line="1049">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1052" package="Default">
        <name>In</name>
        <full_name>In</full_name>
        <argument line="1052">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1052">
          <name>$mixValuesArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1055" package="Default">
        <name>NotIn</name>
        <full_name>NotIn</full_name>
        <argument line="1055">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1055">
          <name>$mixValuesArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1058" package="Default">
        <name>Like</name>
        <full_name>Like</full_name>
        <argument line="1058">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1058">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1061" package="Default">
        <name>NotLike</name>
        <full_name>NotLike</full_name>
        <argument line="1061">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1061">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1064" package="Default">
        <name>Between</name>
        <full_name>Between</full_name>
        <argument line="1064">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1064">
          <name>$strMinValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="1064">
          <name>$strMaxValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1067" package="Default">
        <name>NotBetween</name>
        <full_name>NotBetween</full_name>
        <argument line="1067">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1067">
          <name>$strMinValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="1067">
          <name>$strMaxValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1074" package="Default">
        <name>_</name>
        <full_name>_</full_name>
        <argument line="1074">
          <name>$objQueryNode</name>
          <default/>
          <type>\QQNode</type>
        </argument>
        <argument line="1074">
          <name>$strSymbol</name>
          <default/>
          <type/>
        </argument>
        <argument line="1074">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="1074">
          <name>$mixValueTwo</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1104" package="Default">
        <name>SubSql</name>
        <full_name>SubSql</full_name>
        <argument line="1104">
          <name>$strSql</name>
          <default/>
          <type/>
        </argument>
        <argument line="1104">
          <name>$objParentQueryNodes</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1109" package="Default">
        <name>Virtual</name>
        <full_name>Virtual</full_name>
        <argument line="1109">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1109">
          <name>$objSubQueryDefinition</name>
          <default>null</default>
          <type>\QQSubQueryNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1117" package="Default">
        <name>Clause</name>
        <full_name>Clause</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1131" package="Default">
        <name>OrderBy</name>
        <full_name>OrderBy</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1135" package="Default">
        <name>GroupBy</name>
        <full_name>GroupBy</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1139" package="Default">
        <name>Having</name>
        <full_name>Having</full_name>
        <argument line="1139">
          <name>$objNode</name>
          <default/>
          <type>\QQSubQuerySqlNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1143" package="Default">
        <name>Count</name>
        <full_name>Count</full_name>
        <argument line="1143">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="1143">
          <name>$strAttributeName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1147" package="Default">
        <name>Sum</name>
        <full_name>Sum</full_name>
        <argument line="1147">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="1147">
          <name>$strAttributeName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1151" package="Default">
        <name>Minimum</name>
        <full_name>Minimum</full_name>
        <argument line="1151">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="1151">
          <name>$strAttributeName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1155" package="Default">
        <name>Maximum</name>
        <full_name>Maximum</full_name>
        <argument line="1155">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="1155">
          <name>$strAttributeName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1159" package="Default">
        <name>Average</name>
        <full_name>Average</full_name>
        <argument line="1159">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="1159">
          <name>$strAttributeName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1163" package="Default">
        <name>Expand</name>
        <full_name>Expand</full_name>
        <argument line="1163">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="1163">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
        <argument line="1163">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1173" package="Default">
        <name>ExpandAsArray</name>
        <full_name>ExpandAsArray</full_name>
        <argument line="1173">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="1173">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1177" package="Default">
        <name>Select</name>
        <full_name>Select</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1181" package="Default">
        <name>LimitInfo</name>
        <full_name>LimitInfo</full_name>
        <argument line="1181">
          <name>$intMaxRowCount</name>
          <default/>
          <type/>
        </argument>
        <argument line="1181">
          <name>$intOffset</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1185" package="Default">
        <name>Distinct</name>
        <full_name>Distinct</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1194" package="Default">
        <name>extractSelectClause</name>
        <full_name>extractSelectClause</full_name>
        <docblock line="1189">
          <description/>
          <long-description/>
          <tag line="1189" name="param" description="QQClause object or array of QQClause objects" type="\QQClause[]|\QQClause|null" variable="$objClauses">
            <type by_reference="false">\QQClause[]</type>
            <type by_reference="false">\QQClause</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="1189" name="return" description="QQSelect clause containing all the nodes from all the QQSelect clauses from $objClauses,&#10;or null if $objClauses contains no QQSelect clauses" type="\QQSelect">
            <type by_reference="false">\QQSelect</type>
          </tag>
        </docblock>
        <argument line="1194">
          <name>$objClauses</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1225" package="Default">
        <name>Alias</name>
        <full_name>Alias</full_name>
        <docblock line="1217">
          <description>Returns the supplied node object, after seting its alias to the value supplied</description>
          <long-description/>
          <tag line="1217" name="param" description="The node object to set alias on" type="\QQBaseNode" variable="$objNode">
            <type by_reference="false">\QQBaseNode</type>
          </tag>
          <tag line="1217" name="param" description="The alias to set" type="string" variable="$strAlias">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1217" name="return" description="The same node that was passed in, but with the alias set" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1225">
          <name>$objNode</name>
          <default/>
          <type>\QQBaseNode</type>
        </argument>
        <argument line="1225">
          <name>$strAlias</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1234" package="Default">
        <name>NamedValue</name>
        <full_name>NamedValue</full_name>
        <argument line="1234">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="1239" package="Default">
      <extends>\QQNode</extends>
      <name>QQSubQueryNode</name>
      <full_name>\QQSubQueryNode</full_name>
    </class>
    <class final="false" abstract="false" namespace="global" line="1276" package="Default">
      <extends>\QQSubQueryNode</extends>
      <name>QQSubQueryCountNode</name>
      <full_name>\QQSubQueryCountNode</full_name>
      <property final="false" static="false" visibility="protected" line="1277" namespace="global" package="Default">
        <name>$strFunctionName</name>
        <default>'COUNT'</default>
      </property>
    </class>
    <class final="false" abstract="false" namespace="global" line="1280" package="Default">
      <extends>\QQSubQueryNode</extends>
      <name>QQSubQuerySqlNode</name>
      <full_name>\QQSubQuerySqlNode</full_name>
      <property final="false" static="false" visibility="protected" line="1281" namespace="global" package="Default">
        <name>$strSql</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1283" namespace="global" package="Default">
        <name>$objParentQueryNodes</name>
        <default/>
        <docblock line="1282">
          <description/>
          <long-description/>
          <tag line="1282" name="var" description="" type="\QQNode[]">
            <type by_reference="false">\QQNode[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1284" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1284">
          <name>$strSql</name>
          <default/>
          <type/>
        </argument>
        <argument line="1284">
          <name>$objParentQueryNodes</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1289" package="Default">
        <name>GetColumnAlias</name>
        <full_name>GetColumnAlias</full_name>
        <argument line="1289">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="1289">
          <name>$blnExpandSelection</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1289">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
        <argument line="1289">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1299" package="Default">
      <extends>\QQNode</extends>
      <name>QQVirtualNode</name>
      <full_name>\QQVirtualNode</full_name>
      <property final="false" static="false" visibility="protected" line="1300" namespace="global" package="Default">
        <name>$objSubQueryDefinition</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1301" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1301">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1301">
          <name>$objSubQueryDefinition</name>
          <default>null</default>
          <type>\QQSubQueryNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1306" package="Default">
        <name>GetColumnAlias</name>
        <full_name>GetColumnAlias</full_name>
        <argument line="1306">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="1306">
          <name>$blnExpandSelection</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1306">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
        <argument line="1306">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1320" package="Default">
        <name>GetAttributeName</name>
        <full_name>GetAttributeName</full_name>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="1325" package="Default">
      <extends>\QBaseClass</extends>
      <name>QQClause</name>
      <full_name>\QQClause</full_name>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="1326" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1326">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="1327" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1330" package="Default">
      <extends>\QQClause</extends>
      <name>QQOrderBy</name>
      <full_name>\QQOrderBy</full_name>
      <property final="false" static="false" visibility="protected" line="1332" namespace="global" package="Default">
        <name>$objNodeArray</name>
        <default/>
        <docblock line="1331">
          <description/>
          <long-description/>
          <tag line="1331" name="var" description="" type="\QQNode[]">
            <type by_reference="false">\QQNode[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1333" package="Default">
        <name>CollapseNodes</name>
        <full_name>CollapseNodes</full_name>
        <argument line="1333">
          <name>$mixParameterArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1362" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1362">
          <name>$mixParameterArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1365" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1365">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1401" package="Default">
        <name>GetAsManualSql</name>
        <full_name>GetAsManualSql</full_name>
        <docblock line="1394">
          <description>This is used primarly by datagrids wanting to use the "old Beta 2" style of
Manual Queries.</description>
          <long-description>&lt;p&gt;This allows a datagrid to use QQ::OrderBy even though
the manually-written Load method takes in Beta 2 string-based SortByCommand information.&lt;/p&gt;</long-description>
          <tag line="1394" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1424" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1429" package="Default">
      <extends>\QQClause</extends>
      <name>QQDistinct</name>
      <full_name>\QQDistinct</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1430" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1430">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1433" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1438" package="Default">
      <extends>\QQClause</extends>
      <name>QQLimitInfo</name>
      <full_name>\QQLimitInfo</full_name>
      <property final="false" static="false" visibility="protected" line="1439" namespace="global" package="Default">
        <name>$intMaxRowCount</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1440" namespace="global" package="Default">
        <name>$intOffset</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1441" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1441">
          <name>$intMaxRowCount</name>
          <default/>
          <type/>
        </argument>
        <argument line="1441">
          <name>$intOffset</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1450" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1450">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1456" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1460" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="1460">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1477" package="Default">
      <extends>\QQClause</extends>
      <name>QQExpandVirtualNode</name>
      <full_name>\QQExpandVirtualNode</full_name>
      <property final="false" static="false" visibility="protected" line="1478" namespace="global" package="Default">
        <name>$objNode</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1479" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1479">
          <name>$objNode</name>
          <default/>
          <type>\QQVirtualNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1482" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1482">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1490" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1494" package="Default">
      <extends>\QQClause</extends>
      <name>QQExpand</name>
      <full_name>\QQExpand</full_name>
      <property final="false" static="false" visibility="protected" line="1496" namespace="global" package="Default">
        <name>$objNode</name>
        <default/>
        <docblock line="1495">
          <description/>
          <long-description/>
          <tag line="1495" name="var" description="" type="\QQNode">
            <type by_reference="false">\QQNode</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="1497" namespace="global" package="Default">
        <name>$objJoinCondition</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1498" namespace="global" package="Default">
        <name>$objSelect</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1500" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1500">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="1500">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
        <argument line="1500">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1513" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1513">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1516" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1525" package="Default">
      <extends>\QQClause</extends>
      <name>QQHavingClause</name>
      <full_name>\QQHavingClause</full_name>
      <property final="false" static="false" visibility="protected" line="1526" namespace="global" package="Default">
        <name>$objNode</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1527" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1527">
          <name>$objSubQueryDefinition</name>
          <default/>
          <type>\QQSubQueryNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1530" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1530">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1535" package="Default">
        <name>GetAttributeName</name>
        <full_name>GetAttributeName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1538" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="1544" package="Default">
      <extends>\QQClause</extends>
      <name>QQAggregationClause</name>
      <full_name>\QQAggregationClause</full_name>
      <property final="false" static="false" visibility="protected" line="1546" namespace="global" package="Default">
        <name>$objNode</name>
        <default/>
        <docblock line="1545">
          <description/>
          <long-description/>
          <tag line="1545" name="var" description="" type="\QQNode">
            <type by_reference="false">\QQNode</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="1547" namespace="global" package="Default">
        <name>$strAttributeName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1548" namespace="global" package="Default">
        <name>$strFunctionName</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1549" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1549">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="1549">
          <name>$strAttributeName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1561" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1561">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1565" package="Default">
      <extends>\QQAggregationClause</extends>
      <name>QQCount</name>
      <full_name>\QQCount</full_name>
      <property final="false" static="false" visibility="protected" line="1566" namespace="global" package="Default">
        <name>$strFunctionName</name>
        <default>'COUNT'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1567" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1571" package="Default">
      <extends>\QQAggregationClause</extends>
      <name>QQSum</name>
      <full_name>\QQSum</full_name>
      <property final="false" static="false" visibility="protected" line="1572" namespace="global" package="Default">
        <name>$strFunctionName</name>
        <default>'SUM'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1573" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1577" package="Default">
      <extends>\QQAggregationClause</extends>
      <name>QQMinimum</name>
      <full_name>\QQMinimum</full_name>
      <property final="false" static="false" visibility="protected" line="1578" namespace="global" package="Default">
        <name>$strFunctionName</name>
        <default>'MIN'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1579" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1583" package="Default">
      <extends>\QQAggregationClause</extends>
      <name>QQMaximum</name>
      <full_name>\QQMaximum</full_name>
      <property final="false" static="false" visibility="protected" line="1584" namespace="global" package="Default">
        <name>$strFunctionName</name>
        <default>'MAX'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1585" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1589" package="Default">
      <extends>\QQAggregationClause</extends>
      <name>QQAverage</name>
      <full_name>\QQAverage</full_name>
      <property final="false" static="false" visibility="protected" line="1590" namespace="global" package="Default">
        <name>$strFunctionName</name>
        <default>'AVG'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1591" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1596" package="Default">
      <extends>\QQClause</extends>
      <name>QQExpandAsArray</name>
      <full_name>\QQExpandAsArray</full_name>
      <property final="false" static="false" visibility="protected" line="1598" namespace="global" package="Default">
        <name>$objNode</name>
        <default/>
        <docblock line="1597">
          <description/>
          <long-description/>
          <tag line="1597" name="var" description="" type="\QQNode|\QQAssociationNode">
            <type by_reference="false">\QQNode</type>
            <type by_reference="false">\QQAssociationNode</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="1599" namespace="global" package="Default">
        <name>$objSelect</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1600" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1600">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="1600">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1608" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1608">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1615" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1620" package="Default">
      <extends>\QQClause</extends>
      <name>QQGroupBy</name>
      <full_name>\QQGroupBy</full_name>
      <property final="false" static="false" visibility="protected" line="1622" namespace="global" package="Default">
        <name>$objNodeArray</name>
        <default/>
        <docblock line="1621">
          <description/>
          <long-description/>
          <tag line="1621" name="var" description="" type="\QQBaseNode[]">
            <type by_reference="false">\QQBaseNode[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1623" package="Default">
        <name>CollapseNodes</name>
        <full_name>CollapseNodes</full_name>
        <argument line="1623">
          <name>$mixParameterArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1652" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1652">
          <name>$mixParameterArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1655" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1655">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1660" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1665" package="Default">
      <extends>\QQClause</extends>
      <name>QQSelect</name>
      <full_name>\QQSelect</full_name>
      <property final="false" static="false" visibility="protected" line="1666" namespace="global" package="Default">
        <name>$arrNodeObj</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1668" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1668">
          <name>$arrNodeObj</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1672" package="Default">
        <name>UpdateQueryBuilder</name>
        <full_name>UpdateQueryBuilder</full_name>
        <argument line="1672">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1675" package="Default">
        <name>AddSelectItems</name>
        <full_name>AddSelectItems</full_name>
        <argument line="1675">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
        <argument line="1675">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1675">
          <name>$strAliasPrefix</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1681" package="Default">
        <name>Merge</name>
        <full_name>Merge</full_name>
        <argument line="1681">
          <name>$objSelect</name>
          <default>null</default>
          <type>\QQSelect</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1686" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1692" package="Default">
      <extends>\QQ</extends>
      <name>QQuery</name>
      <full_name>\QQuery</full_name>
    </class>
    <class final="false" abstract="false" namespace="global" line="1701" package="Default">
      <extends>\QBaseClass</extends>
      <name>QQueryBuilder</name>
      <full_name>\QQueryBuilder</full_name>
      <docblock line="1694">
        <description>QQueryBuilder class</description>
        <long-description/>
        <tag line="1694" name="property" description="" type="\QDatabaseBase" variable="$Database">
          <type by_reference="false">\QDatabaseBase</type>
        </tag>
        <tag line="1694" name="property" description="" type="string" variable="$RootTableName">
          <type by_reference="false">string</type>
        </tag>
        <tag line="1694" name="property" description="" type="string[]" variable="$ColumnAliasArray">
          <type by_reference="false">string[]</type>
        </tag>
        <tag line="1694" name="property" description="" type="\QQBaseNode" variable="$ExpandAsArrayNode">
          <type by_reference="false">\QQBaseNode</type>
        </tag>
      </docblock>
      <property final="false" static="false" visibility="protected" line="1702" namespace="global" package="Default">
        <name>$strSelectArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1703" namespace="global" package="Default">
        <name>$strColumnAliasArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1704" namespace="global" package="Default">
        <name>$intColumnAliasCount</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="1705" namespace="global" package="Default">
        <name>$strTableAliasArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1706" namespace="global" package="Default">
        <name>$intTableAliasCount</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="protected" line="1707" namespace="global" package="Default">
        <name>$strFromArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1708" namespace="global" package="Default">
        <name>$strJoinArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1709" namespace="global" package="Default">
        <name>$strJoinConditionArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1710" namespace="global" package="Default">
        <name>$strWhereArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1711" namespace="global" package="Default">
        <name>$strOrderByArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1712" namespace="global" package="Default">
        <name>$strGroupByArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1713" namespace="global" package="Default">
        <name>$strHavingArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1715" namespace="global" package="Default">
        <name>$objVirtualNodeArray</name>
        <default/>
        <docblock line="1714">
          <description/>
          <long-description/>
          <tag line="1714" name="var" description="" type="\QQVirtualNode[]">
            <type by_reference="false">\QQVirtualNode[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="1716" namespace="global" package="Default">
        <name>$strLimitInfo</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1717" namespace="global" package="Default">
        <name>$blnDistinctFlag</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1718" namespace="global" package="Default">
        <name>$objExpandAsArrayNode</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1720" namespace="global" package="Default">
        <name>$blnCountOnlyFlag</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1722" namespace="global" package="Default">
        <name>$objDatabase</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1723" namespace="global" package="Default">
        <name>$strRootTableName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1725" namespace="global" package="Default">
        <name>$strEscapeIdentifierBegin</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1726" namespace="global" package="Default">
        <name>$strEscapeIdentifierEnd</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1728" package="Default">
        <name>AddSelectItem</name>
        <full_name>AddSelectItem</full_name>
        <argument line="1728">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1728">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1728">
          <name>$strFullAlias</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1744" package="Default">
        <name>AddSelectFunction</name>
        <full_name>AddSelectFunction</full_name>
        <argument line="1744">
          <name>$strFunctionName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1744">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1744">
          <name>$strFullAlias</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1750" package="Default">
        <name>AddFromItem</name>
        <full_name>AddFromItem</full_name>
        <argument line="1750">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1758" package="Default">
        <name>GetTableAlias</name>
        <full_name>GetTableAlias</full_name>
        <argument line="1758">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1768" package="Default">
        <name>AddJoinItem</name>
        <full_name>AddJoinItem</full_name>
        <argument line="1768">
          <name>$strJoinTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1768">
          <name>$strJoinTableAlias</name>
          <default/>
          <type/>
        </argument>
        <argument line="1768">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1768">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1768">
          <name>$strLinkedColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1768">
          <name>$objJoinCondition</name>
          <default>null</default>
          <type>\QQCondition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1840" package="Default">
        <name>AddJoinCustomItem</name>
        <full_name>AddJoinCustomItem</full_name>
        <argument line="1840">
          <name>$strJoinTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1840">
          <name>$strJoinTableAlias</name>
          <default/>
          <type/>
        </argument>
        <argument line="1840">
          <name>$objJoinCondition</name>
          <default/>
          <type>\QQCondition</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1857" package="Default">
        <name>AddJoinCustomSqlItem</name>
        <full_name>AddJoinCustomSqlItem</full_name>
        <argument line="1857">
          <name>$strSql</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1861" package="Default">
        <name>AddWhereItem</name>
        <full_name>AddWhereItem</full_name>
        <argument line="1861">
          <name>$strItem</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1865" package="Default">
        <name>AddOrderByItem</name>
        <full_name>AddOrderByItem</full_name>
        <argument line="1865">
          <name>$strItem</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1869" package="Default">
        <name>AddGroupByItem</name>
        <full_name>AddGroupByItem</full_name>
        <argument line="1869">
          <name>$strItem</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1873" package="Default">
        <name>AddHavingItem</name>
        <full_name>AddHavingItem</full_name>
        <argument line="1873">
          <name>$strItem</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1878" package="Default">
        <name>SetLimitInfo</name>
        <full_name>SetLimitInfo</full_name>
        <argument line="1878">
          <name>$strLimitInfo</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1882" package="Default">
        <name>SetDistinctFlag</name>
        <full_name>SetDistinctFlag</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1886" package="Default">
        <name>SetCountOnlyFlag</name>
        <full_name>SetCountOnlyFlag</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1890" package="Default">
        <name>SetVirtualNode</name>
        <full_name>SetVirtualNode</full_name>
        <argument line="1890">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1890">
          <name>$objNode</name>
          <default/>
          <type>\QQSubQueryNode</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1894" package="Default">
        <name>GetVirtualNode</name>
        <full_name>GetVirtualNode</full_name>
        <argument line="1894">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1901" package="Default">
        <name>AddExpandAsArrayNode</name>
        <full_name>AddExpandAsArrayNode</full_name>
        <argument line="1901">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1918" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="1918">
          <name>$objDatabase</name>
          <default/>
          <type>\QDatabaseBase</type>
        </argument>
        <argument line="1918">
          <name>$strRootTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1937" package="Default">
        <name>GetStatement</name>
        <full_name>GetStatement</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1991" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="1991">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2018" package="Default">
      <extends>\QQueryBuilder</extends>
      <name>QPartialQueryBuilder</name>
      <full_name>\QPartialQueryBuilder</full_name>
      <docblock line="2013">
        <description>Subclasses QQueryBuilder to handle the building of conditions for conditional expansions, subqueries, etc.</description>
        <long-description>&lt;p&gt;Since regular queries use WhereClauses for conditions, we just use the where clause portion, and
    only build a condition clause appropriate for a conditional expansion.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="2019" namespace="global" package="Default">
        <name>$objParentBuilder</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2020" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="2020">
          <name>$objBuilder</name>
          <default/>
          <type>\QQueryBuilder</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2026" package="Default">
        <name>GetWhereStatement</name>
        <full_name>GetWhereStatement</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2029" package="Default">
        <name>GetFromStatement</name>
        <full_name>GetFromStatement</full_name>
      </method>
    </class>
    <markers>
      <todo line="545">If/when we add assn-based attributes, possibly add selectionfields addition here?</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QQuery.class.php</error>
      <error line="25" code="50018">No DocBlock was found for property $objParentNode</error>
      <error line="26" code="50018">No DocBlock was found for property $strType</error>
      <error line="27" code="50018">No DocBlock was found for property $strName</error>
      <error line="28" code="50018">No DocBlock was found for property $strAlias</error>
      <error line="29" code="50018">No DocBlock was found for property $strPropertyName</error>
      <error line="30" code="50018">No DocBlock was found for property $strRootTableName</error>
      <error line="32" code="50018">No DocBlock was found for property $strTableName</error>
      <error line="33" code="50018">No DocBlock was found for property $strPrimaryKey</error>
      <error line="34" code="50018">No DocBlock was found for property $strClassName</error>
      <error line="37" code="50018">No DocBlock was found for property $blnExpandAsArray</error>
      <error line="38" code="50018">No DocBlock was found for property $objChildNodeArray</error>
      <error line="40" code="50010">No DocBlock was found for method __get()</error>
      <error line="78" code="50010">No DocBlock was found for method __set()</error>
      <error line="111" code="50010">No DocBlock was found for method GetColumnAliasHelper()</error>
      <error line="112" code="50010">No DocBlock was found for method GetColumnAlias()</error>
      <error line="149" code="50010">No DocBlock was found for method ExtendedAlias()</error>
      <error line="159" code="50010">No DocBlock was found for method FirstChild()</error>
      <error line="171" code="50000">No DocBlock was found for \QQNode</error>
      <error line="172" code="50010">No DocBlock was found for method __construct()</error>
      <error line="189" code="50012">No short description for method GetValue()</error>
      <error line="239" code="50010">No DocBlock was found for method GetAsManualSqlColumn()</error>
      <error line="248" code="50010">No DocBlock was found for method isTopLevelLeafNode()</error>
      <error line="252" code="50010">No DocBlock was found for method GetTable()</error>
      <error line="282" code="50010">No DocBlock was found for method GetTableAlias()</error>
      <error line="287" code="50010">No DocBlock was found for method MakeColumnAlias()</error>
      <error line="296" code="50010">No DocBlock was found for method GetColumnAlias()</error>
      <error line="302" code="50010">No DocBlock was found for method addJoinTable()</error>
      <error line="307" code="50010">No DocBlock was found for method GetColumnAliasHelper()</error>
      <error line="339" code="50010">No DocBlock was found for method GetDataGridHtmlHelper()</error>
      <error line="345" code="50010">No DocBlock was found for method GetDataGridHtml()</error>
      <error line="387" code="50010">No DocBlock was found for method GetDataGridOrderByNode()</error>
      <error line="393" code="50010">No DocBlock was found for method SetFilteredDataGridColumnFilter()</error>
      <error line="434" code="50000">No DocBlock was found for \QQReverseReferenceNode</error>
      <error line="435" code="50018">No DocBlock was found for property $strForeignKey</error>
      <error line="437" code="50010">No DocBlock was found for method __construct()</error>
      <error line="454" code="50010">No DocBlock was found for method addJoinTable()</error>
      <error line="459" code="50010">No DocBlock was found for method GetColumnAlias()</error>
      <error line="464" code="50010">No DocBlock was found for method GetExpandArrayAlias()</error>
      <critical line="479" code="50005">No short description for class \QQAssociationNode</critical>
      <error line="483" code="50010">No DocBlock was found for method __construct()</error>
      <error line="497" code="50010">No DocBlock was found for method GetColumnAlias()</error>
      <error line="531" code="50010">No DocBlock was found for method GetColumnAliasHelper()</error>
      <error line="555" code="50010">No DocBlock was found for method GetExpandArrayAlias()</error>
      <error line="569" code="50000">No DocBlock was found for \QQNamedValue</error>
      <error line="571" code="50010">No DocBlock was found for method __construct()</error>
      <error line="574" code="50010">No DocBlock was found for method Parameter()</error>
      <error line="584" code="50000">No DocBlock was found for \QQCondition</error>
      <error line="585" code="50018">No DocBlock was found for property $strOperator</error>
      <error line="591" code="50018">No DocBlock was found for property $blnProcessed</error>
      <error line="586" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="587" code="50010">No DocBlock was found for method __toString()</error>
      <error line="593" code="50014">Name of argument $objBuilder does not match with the DocBlock's name $objDatabase in GetWhereClause()</error>
      <error line="593" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $objBuilder in GetWhereClause()</error>
      <error line="593" code="50014">Name of argument $blnProcessOnce does not match with the DocBlock's name $strRootTableName in GetWhereClause()</error>
      <notice line="593" code="50013">Parameter $objDatabase could not be found in GetWhereClause()</notice>
      <notice line="593" code="50013">Parameter $strRootTableName could not be found in GetWhereClause()</notice>
      <error line="618" code="50000">No DocBlock was found for \QQConditionAll</error>
      <error line="619" code="50010">No DocBlock was found for method __construct()</error>
      <error line="623" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="627" code="50000">No DocBlock was found for \QQConditionNone</error>
      <error line="628" code="50010">No DocBlock was found for method __construct()</error>
      <error line="632" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="636" code="50000">No DocBlock was found for \QQConditionLogical</error>
      <critical line="637" code="50019">No short description for property $objConditionArray</critical>
      <error line="639" code="50010">No DocBlock was found for method CollapseConditions()</error>
      <error line="657" code="50010">No DocBlock was found for method __construct()</error>
      <error line="666" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="686" code="50000">No DocBlock was found for \QQConditionOr</error>
      <error line="687" code="50018">No DocBlock was found for property $strOperator</error>
      <error line="689" code="50000">No DocBlock was found for \QQConditionAnd</error>
      <error line="690" code="50018">No DocBlock was found for property $strOperator</error>
      <error line="693" code="50000">No DocBlock was found for \QQConditionNot</error>
      <error line="694" code="50018">No DocBlock was found for property $objCondition</error>
      <error line="695" code="50010">No DocBlock was found for method __construct()</error>
      <error line="698" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="710" code="50000">No DocBlock was found for \QQConditionComparison</error>
      <error line="711" code="50018">No DocBlock was found for property $objQueryNode</error>
      <error line="712" code="50018">No DocBlock was found for property $mixOperand</error>
      <error line="713" code="50010">No DocBlock was found for method __construct()</error>
      <error line="741" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="746" code="50000">No DocBlock was found for \QQConditionIsNull</error>
      <error line="747" code="50010">No DocBlock was found for method __construct()</error>
      <error line="752" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="757" code="50000">No DocBlock was found for \QQConditionIsNotNull</error>
      <error line="758" code="50010">No DocBlock was found for method __construct()</error>
      <error line="763" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="768" code="50000">No DocBlock was found for \QQConditionIn</error>
      <error line="769" code="50010">No DocBlock was found for method __construct()</error>
      <error line="788" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="809" code="50000">No DocBlock was found for \QQConditionNotIn</error>
      <error line="810" code="50010">No DocBlock was found for method __construct()</error>
      <error line="829" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="850" code="50000">No DocBlock was found for \QQConditionLike</error>
      <error line="851" code="50010">No DocBlock was found for method __construct()</error>
      <error line="868" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="879" code="50000">No DocBlock was found for \QQConditionNotLike</error>
      <error line="880" code="50010">No DocBlock was found for method __construct()</error>
      <error line="897" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="908" code="50000">No DocBlock was found for \QQConditionBetween</error>
      <error line="909" code="50018">No DocBlock was found for property $mixOperandTwo</error>
      <error line="910" code="50010">No DocBlock was found for method __construct()</error>
      <error line="930" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="943" code="50000">No DocBlock was found for \QQConditionNotBetween</error>
      <error line="944" code="50018">No DocBlock was found for property $mixOperandTwo</error>
      <error line="945" code="50010">No DocBlock was found for method __construct()</error>
      <error line="965" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="978" code="50000">No DocBlock was found for \QQConditionEqual</error>
      <error line="979" code="50018">No DocBlock was found for property $strOperator</error>
      <error line="980" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="984" code="50000">No DocBlock was found for \QQConditionNotEqual</error>
      <error line="985" code="50018">No DocBlock was found for property $strOperator</error>
      <error line="986" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="990" code="50000">No DocBlock was found for \QQConditionGreaterThan</error>
      <error line="991" code="50018">No DocBlock was found for property $strOperator</error>
      <error line="993" code="50000">No DocBlock was found for \QQConditionLessThan</error>
      <error line="994" code="50018">No DocBlock was found for property $strOperator</error>
      <error line="996" code="50000">No DocBlock was found for \QQConditionGreaterOrEqual</error>
      <error line="997" code="50018">No DocBlock was found for property $strOperator</error>
      <error line="999" code="50000">No DocBlock was found for \QQConditionLessOrEqual</error>
      <error line="1000" code="50018">No DocBlock was found for property $strOperator</error>
      <error line="1003" code="50000">No DocBlock was found for \QQ</error>
      <error line="1008" code="50010">No DocBlock was found for method All()</error>
      <error line="1012" code="50010">No DocBlock was found for method None()</error>
      <error line="1016" code="50010">No DocBlock was found for method OrCondition()</error>
      <error line="1020" code="50010">No DocBlock was found for method AndCondition()</error>
      <error line="1024" code="50010">No DocBlock was found for method Not()</error>
      <error line="1028" code="50010">No DocBlock was found for method Equal()</error>
      <error line="1031" code="50010">No DocBlock was found for method NotEqual()</error>
      <error line="1034" code="50010">No DocBlock was found for method GreaterThan()</error>
      <error line="1037" code="50010">No DocBlock was found for method GreaterOrEqual()</error>
      <error line="1040" code="50010">No DocBlock was found for method LessThan()</error>
      <error line="1043" code="50010">No DocBlock was found for method LessOrEqual()</error>
      <error line="1046" code="50010">No DocBlock was found for method IsNull()</error>
      <error line="1049" code="50010">No DocBlock was found for method IsNotNull()</error>
      <error line="1052" code="50010">No DocBlock was found for method In()</error>
      <error line="1055" code="50010">No DocBlock was found for method NotIn()</error>
      <error line="1058" code="50010">No DocBlock was found for method Like()</error>
      <error line="1061" code="50010">No DocBlock was found for method NotLike()</error>
      <error line="1064" code="50010">No DocBlock was found for method Between()</error>
      <error line="1067" code="50010">No DocBlock was found for method NotBetween()</error>
      <error line="1074" code="50010">No DocBlock was found for method _()</error>
      <error line="1104" code="50010">No DocBlock was found for method SubSql()</error>
      <error line="1109" code="50010">No DocBlock was found for method Virtual()</error>
      <error line="1117" code="50010">No DocBlock was found for method Clause()</error>
      <error line="1131" code="50010">No DocBlock was found for method OrderBy()</error>
      <error line="1135" code="50010">No DocBlock was found for method GroupBy()</error>
      <error line="1139" code="50010">No DocBlock was found for method Having()</error>
      <error line="1143" code="50010">No DocBlock was found for method Count()</error>
      <error line="1147" code="50010">No DocBlock was found for method Sum()</error>
      <error line="1151" code="50010">No DocBlock was found for method Minimum()</error>
      <error line="1155" code="50010">No DocBlock was found for method Maximum()</error>
      <error line="1159" code="50010">No DocBlock was found for method Average()</error>
      <error line="1163" code="50010">No DocBlock was found for method Expand()</error>
      <error line="1173" code="50010">No DocBlock was found for method ExpandAsArray()</error>
      <error line="1177" code="50010">No DocBlock was found for method Select()</error>
      <error line="1181" code="50010">No DocBlock was found for method LimitInfo()</error>
      <error line="1185" code="50010">No DocBlock was found for method Distinct()</error>
      <error line="1189" code="50012">No short description for method extractSelectClause()</error>
      <error line="1234" code="50010">No DocBlock was found for method NamedValue()</error>
      <error line="1239" code="50000">No DocBlock was found for \QQSubQueryNode</error>
      <error line="1276" code="50000">No DocBlock was found for \QQSubQueryCountNode</error>
      <error line="1277" code="50018">No DocBlock was found for property $strFunctionName</error>
      <error line="1280" code="50000">No DocBlock was found for \QQSubQuerySqlNode</error>
      <error line="1281" code="50018">No DocBlock was found for property $strSql</error>
      <critical line="1282" code="50019">No short description for property $objParentQueryNodes</critical>
      <error line="1284" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1289" code="50010">No DocBlock was found for method GetColumnAlias()</error>
      <error line="1299" code="50000">No DocBlock was found for \QQVirtualNode</error>
      <error line="1300" code="50018">No DocBlock was found for property $objSubQueryDefinition</error>
      <error line="1301" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1306" code="50010">No DocBlock was found for method GetColumnAlias()</error>
      <error line="1320" code="50010">No DocBlock was found for method GetAttributeName()</error>
      <error line="1325" code="50000">No DocBlock was found for \QQClause</error>
      <error line="1326" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1327" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1330" code="50000">No DocBlock was found for \QQOrderBy</error>
      <critical line="1331" code="50019">No short description for property $objNodeArray</critical>
      <error line="1333" code="50010">No DocBlock was found for method CollapseNodes()</error>
      <error line="1362" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1365" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1424" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1429" code="50000">No DocBlock was found for \QQDistinct</error>
      <error line="1430" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1433" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1438" code="50000">No DocBlock was found for \QQLimitInfo</error>
      <error line="1439" code="50018">No DocBlock was found for property $intMaxRowCount</error>
      <error line="1440" code="50018">No DocBlock was found for property $intOffset</error>
      <error line="1441" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1450" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1456" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1460" code="50010">No DocBlock was found for method __get()</error>
      <error line="1477" code="50000">No DocBlock was found for \QQExpandVirtualNode</error>
      <error line="1478" code="50018">No DocBlock was found for property $objNode</error>
      <error line="1479" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1482" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1490" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1494" code="50000">No DocBlock was found for \QQExpand</error>
      <critical line="1495" code="50019">No short description for property $objNode</critical>
      <error line="1497" code="50018">No DocBlock was found for property $objJoinCondition</error>
      <error line="1498" code="50018">No DocBlock was found for property $objSelect</error>
      <error line="1500" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1513" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1516" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1525" code="50000">No DocBlock was found for \QQHavingClause</error>
      <error line="1526" code="50018">No DocBlock was found for property $objNode</error>
      <error line="1527" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1530" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1535" code="50010">No DocBlock was found for method GetAttributeName()</error>
      <error line="1538" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1544" code="50000">No DocBlock was found for \QQAggregationClause</error>
      <critical line="1545" code="50019">No short description for property $objNode</critical>
      <error line="1547" code="50018">No DocBlock was found for property $strAttributeName</error>
      <error line="1548" code="50018">No DocBlock was found for property $strFunctionName</error>
      <error line="1549" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1561" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1565" code="50000">No DocBlock was found for \QQCount</error>
      <error line="1566" code="50018">No DocBlock was found for property $strFunctionName</error>
      <error line="1567" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1571" code="50000">No DocBlock was found for \QQSum</error>
      <error line="1572" code="50018">No DocBlock was found for property $strFunctionName</error>
      <error line="1573" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1577" code="50000">No DocBlock was found for \QQMinimum</error>
      <error line="1578" code="50018">No DocBlock was found for property $strFunctionName</error>
      <error line="1579" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1583" code="50000">No DocBlock was found for \QQMaximum</error>
      <error line="1584" code="50018">No DocBlock was found for property $strFunctionName</error>
      <error line="1585" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1589" code="50000">No DocBlock was found for \QQAverage</error>
      <error line="1590" code="50018">No DocBlock was found for property $strFunctionName</error>
      <error line="1591" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1596" code="50000">No DocBlock was found for \QQExpandAsArray</error>
      <critical line="1597" code="50019">No short description for property $objNode</critical>
      <error line="1599" code="50018">No DocBlock was found for property $objSelect</error>
      <error line="1600" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1608" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1615" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1620" code="50000">No DocBlock was found for \QQGroupBy</error>
      <critical line="1621" code="50019">No short description for property $objNodeArray</critical>
      <error line="1623" code="50010">No DocBlock was found for method CollapseNodes()</error>
      <error line="1652" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1655" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1660" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1665" code="50000">No DocBlock was found for \QQSelect</error>
      <error line="1666" code="50018">No DocBlock was found for property $arrNodeObj</error>
      <error line="1668" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1672" code="50010">No DocBlock was found for method UpdateQueryBuilder()</error>
      <error line="1675" code="50010">No DocBlock was found for method AddSelectItems()</error>
      <error line="1681" code="50010">No DocBlock was found for method Merge()</error>
      <error line="1686" code="50010">No DocBlock was found for method __toString()</error>
      <error line="1692" code="50000">No DocBlock was found for \QQuery</error>
      <error line="1702" code="50018">No DocBlock was found for property $strSelectArray</error>
      <error line="1703" code="50018">No DocBlock was found for property $strColumnAliasArray</error>
      <error line="1704" code="50018">No DocBlock was found for property $intColumnAliasCount</error>
      <error line="1705" code="50018">No DocBlock was found for property $strTableAliasArray</error>
      <error line="1706" code="50018">No DocBlock was found for property $intTableAliasCount</error>
      <error line="1707" code="50018">No DocBlock was found for property $strFromArray</error>
      <error line="1708" code="50018">No DocBlock was found for property $strJoinArray</error>
      <error line="1709" code="50018">No DocBlock was found for property $strJoinConditionArray</error>
      <error line="1710" code="50018">No DocBlock was found for property $strWhereArray</error>
      <error line="1711" code="50018">No DocBlock was found for property $strOrderByArray</error>
      <error line="1712" code="50018">No DocBlock was found for property $strGroupByArray</error>
      <error line="1713" code="50018">No DocBlock was found for property $strHavingArray</error>
      <critical line="1714" code="50019">No short description for property $objVirtualNodeArray</critical>
      <error line="1716" code="50018">No DocBlock was found for property $strLimitInfo</error>
      <error line="1717" code="50018">No DocBlock was found for property $blnDistinctFlag</error>
      <error line="1718" code="50018">No DocBlock was found for property $objExpandAsArrayNode</error>
      <error line="1720" code="50018">No DocBlock was found for property $blnCountOnlyFlag</error>
      <error line="1722" code="50018">No DocBlock was found for property $objDatabase</error>
      <error line="1723" code="50018">No DocBlock was found for property $strRootTableName</error>
      <error line="1725" code="50018">No DocBlock was found for property $strEscapeIdentifierBegin</error>
      <error line="1726" code="50018">No DocBlock was found for property $strEscapeIdentifierEnd</error>
      <error line="1728" code="50010">No DocBlock was found for method AddSelectItem()</error>
      <error line="1744" code="50010">No DocBlock was found for method AddSelectFunction()</error>
      <error line="1750" code="50010">No DocBlock was found for method AddFromItem()</error>
      <error line="1758" code="50010">No DocBlock was found for method GetTableAlias()</error>
      <error line="1768" code="50010">No DocBlock was found for method AddJoinItem()</error>
      <error line="1840" code="50010">No DocBlock was found for method AddJoinCustomItem()</error>
      <error line="1857" code="50010">No DocBlock was found for method AddJoinCustomSqlItem()</error>
      <error line="1861" code="50010">No DocBlock was found for method AddWhereItem()</error>
      <error line="1865" code="50010">No DocBlock was found for method AddOrderByItem()</error>
      <error line="1869" code="50010">No DocBlock was found for method AddGroupByItem()</error>
      <error line="1873" code="50010">No DocBlock was found for method AddHavingItem()</error>
      <error line="1878" code="50010">No DocBlock was found for method SetLimitInfo()</error>
      <error line="1882" code="50010">No DocBlock was found for method SetDistinctFlag()</error>
      <error line="1886" code="50010">No DocBlock was found for method SetCountOnlyFlag()</error>
      <error line="1890" code="50010">No DocBlock was found for method SetVirtualNode()</error>
      <error line="1894" code="50010">No DocBlock was found for method GetVirtualNode()</error>
      <error line="1901" code="50010">No DocBlock was found for method AddExpandAsArrayNode()</error>
      <error line="1918" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1937" code="50010">No DocBlock was found for method GetStatement()</error>
      <error line="1991" code="50010">No DocBlock was found for method __get()</error>
      <error line="2019" code="50018">No DocBlock was found for property $objParentBuilder</error>
      <error line="2020" code="50010">No DocBlock was found for method __construct()</error>
      <error line="2026" code="50010">No DocBlock was found for method GetWhereStatement()</error>
      <error line="2029" code="50010">No DocBlock was found for method GetFromStatement()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QBaseClass.class.php" hash="0f2a411f31b4726c347e34486e307785" package="Default">
    <class final="false" abstract="true" namespace="global" line="7" package="Default">
      <extends/>
      <name>QBaseClass</name>
      <full_name>\QBaseClass</full_name>
      <docblock line="2">
        <description>This is the Base Class for ALL classes in the system.</description>
        <long-description>&lt;p&gt;It provides
proper error handling of property getters and setters.  It also
provides the OverrideAttribute functionality.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="8">
          <description>Override method to perform a property "Get"
This will get the value of $strName
All inhereted objects that call __get() should always fall through
to calling parent::__get() in a try/catch statement catching
for CallerExceptions.</description>
          <long-description/>
          <tag line="8" name="param" description="Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="8" name="throws" description="" type="\QUndefinedPropertyException">
            <type by_reference="false">\QUndefinedPropertyException</type>
          </tag>
          <tag line="8" name="return" description="the returned property" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="25">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue
All inhereted objects that call __set() should always fall through
to calling parent::__set() in a try/catch statement catching
for CallerExceptions.</description>
          <long-description/>
          <tag line="25" name="param" description="Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="param" description="New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="25" name="throws" description="" type="\QUndefinedPropertyException">
            <type by_reference="false">\QUndefinedPropertyException</type>
          </tag>
          <tag line="25" name="return" description="the property that was set" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Default">
        <name>OverrideAttributes</name>
        <full_name>OverrideAttributes</full_name>
        <docblock line="43">
          <description>This allows you to set any properties, given by a name-value pair list
in mixOverrideArray.</description>
          <long-description>&lt;p&gt;Each item in mixOverrideArray needs to be either a string in the format
of Property=Value or an array in the format of array(Property =&gt; Value).
OverrideAttributes() will basically call
$this-&gt;Property = Value for each string element in the array.
Value can be surrounded by quotes... but this is optional.&lt;/p&gt;</long-description>
          <tag line="43" name="param" description="" type="\" variable="$mixOverrideArray"/>
          <tag line="43" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="43" name="throws" description="" type="\Exception|\QCallerException">
            <type by_reference="false">\Exception</type>
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="43" name="internal" description="param \mixed[] $objOverrideArray the array of name-value pair items of properties/attributes to override"/>
          <tag line="43" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$mixOverrideArray</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QBaseClass.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QCacheProviderNoCache.class.php" hash="a4cf2e4a5830953487c045832d148467" package="Default">
    <class final="false" abstract="false" namespace="global" line="8" package="Default">
      <extends>\QAbstractCacheProvider</extends>
      <name>QCacheProviderNoCache</name>
      <full_name>\QCacheProviderNoCache</full_name>
      <docblock line="4">
        <description>No-op cache provider: No caching at all.</description>
        <long-description>&lt;p&gt;Use it to disable caching support.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="14" package="Default">
        <name>Get</name>
        <full_name>Get</full_name>
        <docblock line="9">
          <description>Get the object that has the given key from the cache</description>
          <long-description/>
          <tag line="9" name="param" description="the key of the object in the cache" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="9" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="14">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>Set</name>
        <full_name>Set</full_name>
        <docblock line="18">
          <description>Set the object into the cache with the given key</description>
          <long-description/>
          <tag line="18" name="param" description="the key to use for the object" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="the object to put in the cache" type="object" variable="$objValue">
            <type by_reference="false">object</type>
          </tag>
          <tag line="18" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="24">
          <name>$objValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>Delete</name>
        <full_name>Delete</full_name>
        <docblock line="28">
          <description>Delete the object that has the given key from the cache</description>
          <long-description/>
          <tag line="28" name="param" description="the key of the object in the cache" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Default">
        <name>DeleteAll</name>
        <full_name>DeleteAll</full_name>
        <docblock line="37">
          <description>Invalidate all the objects in the cache</description>
          <long-description/>
          <tag line="37" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QCacheProviderNoCache.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QRegex.class.php" hash="f9f81e04bd32b09eab661a620cae5207" package="Default">
    <class final="false" abstract="false" namespace="global" line="2" package="Default">
      <extends>\QBaseClass</extends>
      <name>QRegex</name>
      <full_name>\QRegex</full_name>
      <constant namespace="global" line="4" package="Default">
        <name>RegexBookend</name>
        <full_name>RegexBookend</full_name>
        <value>"/"</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="6" namespace="global" package="Default">
        <name>$objPatterns</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="7" namespace="global" package="Default">
        <name>$objLabels</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="9" namespace="global" package="Default">
        <name>$strRegex</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="11" package="Default">
        <name>addPattern</name>
        <full_name>addPattern</full_name>
        <argument line="11">
          <name>$strPattern</name>
          <default/>
          <type/>
        </argument>
        <argument line="11">
          <name>$strLabel</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="17" package="Default">
        <name>scrubPattern</name>
        <full_name>scrubPattern</full_name>
        <argument line="17">
          <name>$strPattern</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>match</name>
        <full_name>match</full_name>
        <argument line="24">
          <name>$strSubject</name>
          <default/>
          <type/>
        </argument>
        <argument line="24">
          <name>$strMatch</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="46" package="Default">
        <name>compileRegex</name>
        <full_name>compileRegex</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QRegex.class.php</error>
      <error line="2" code="50000">No DocBlock was found for \QRegex</error>
      <error line="6" code="50018">No DocBlock was found for property $objPatterns</error>
      <error line="7" code="50018">No DocBlock was found for property $objLabels</error>
      <error line="9" code="50018">No DocBlock was found for property $strRegex</error>
      <error line="11" code="50010">No DocBlock was found for method addPattern()</error>
      <error line="17" code="50010">No DocBlock was found for method scrubPattern()</error>
      <error line="24" code="50010">No DocBlock was found for method match()</error>
      <error line="46" code="50010">No DocBlock was found for method compileRegex()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QEmailServer.class.php" hash="0a1bd61304668167f3ecb00895473785" package="Default">
    <class final="false" abstract="true" namespace="global" line="9" package="Default">
      <extends>\QBaseClass</extends>
      <name>QEmailServer</name>
      <full_name>\QEmailServer</full_name>
      <docblock line="2">
        <description>This EmailServer (and its dependent EmailMessage class) allows the application to send
messages via any accessible SMTP server.</description>
        <long-description>&lt;p&gt;The QEmailServer class, specifically, is an abstract class and is NOT meant to be instantiated.
It has one public static method, Send, which takes in a QEmailMessage object.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="true" visibility="public" line="17" namespace="global" package="Default">
        <name>$SmtpServer</name>
        <default>'localhost'</default>
        <docblock line="10">
          <description>Server Hostname or IP Address of the server running the SMTP service.</description>
          <long-description>&lt;p&gt;Using an IP address is slightly faster, but using a Hostname is easier to manage.
Defaults to "localhost".&lt;/p&gt;</long-description>
          <tag line="10" name="var" description="SmtpServer" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="24" namespace="global" package="Default">
        <name>$SmtpPort</name>
        <default>25</default>
        <docblock line="19">
          <description>Port of the SMTP Service on the SmtpServer, usually 25</description>
          <long-description/>
          <tag line="19" name="var" description="SmtpPort" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="34" namespace="global" package="Default">
        <name>$OriginatingServerIp</name>
        <default/>
        <docblock line="26">
          <description>IP Address of the Originating Server (e.g.</description>
          <long-description>&lt;p&gt;the IP address of this server)
used for the EHLO command in the SMTP protocol.  Defaults to the
QApplication::$ServerAddress variable, which uses the PHP $_SERVER
constants to determine the correct IP address.&lt;/p&gt;</long-description>
          <tag line="26" name="var" description="OriginatingServerIp" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="44" namespace="global" package="Default">
        <name>$TestMode</name>
        <default>false</default>
        <docblock line="36">
          <description>Whether or not we are running in Test Mode.</description>
          <long-description>&lt;p&gt;Test Mode allows you
to develop e-mail-based applications without actually having access to
an SMTP server or the Internet.  Instead of messages being sent out,
the messages and corresponding SMTP communication will be saved to disk.&lt;/p&gt;</long-description>
          <tag line="36" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="54" namespace="global" package="Default">
        <name>$TestModeDirectory</name>
        <default>'/tmp'</default>
        <docblock line="46">
          <description>The directory where TestMode e-mail files will be saved to.</description>
          <long-description>&lt;p&gt;The process
running the webserver &lt;em&gt;must&lt;/em&gt; have write access to this directory.  Default
is "/tmp", which makes sense in unix/linux/mac environments.  Windows users
will likely need to set up their own temp directories.&lt;/p&gt;</long-description>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="61" namespace="global" package="Default">
        <name>$AuthPlain</name>
        <default>false</default>
        <docblock line="56">
          <description>Boolean flag signifying whether SMTP's AUTH PLAIN should be used</description>
          <long-description/>
          <tag line="56" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="68" namespace="global" package="Default">
        <name>$AuthLogin</name>
        <default>false</default>
        <docblock line="63">
          <description>Boolean flag signifying whether SMTP's AUTH LOGIN should be used</description>
          <long-description/>
          <tag line="63" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="75" namespace="global" package="Default">
        <name>$SmtpUsername</name>
        <default>''</default>
        <docblock line="70">
          <description>SMTP Username to use for AUTH PLAIN or LOGIN</description>
          <long-description/>
          <tag line="70" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="82" namespace="global" package="Default">
        <name>$SmtpPassword</name>
        <default>''</default>
        <docblock line="77">
          <description>SMTP Password to use for AUTH PLAIN or LOGIN</description>
          <long-description/>
          <tag line="77" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="89" namespace="global" package="Default">
        <name>$EncodingType</name>
        <default>null</default>
        <docblock line="84">
          <description>Encoding Type (if null, will default to the QApplication::$EncodingType)</description>
          <long-description/>
          <tag line="84" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="97" package="Default">
        <name>GetEmailAddresses</name>
        <full_name>GetEmailAddresses</full_name>
        <docblock line="91">
          <description>Uses regular expression matching to return an array of valid e-mail addresses</description>
          <long-description/>
          <tag line="91" name="param" description="Single string containing e-mail addresses and anything else" type="string" variable="$strAddresses">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="return" description="An array of e-mail addresses only, or NULL if none" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$strAddresses</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="124" package="Default">
        <name>IsEmailValid</name>
        <full_name>IsEmailValid</full_name>
        <docblock line="118">
          <description>This will check to see if an email address is considered "Valid" according to RFC 2822.</description>
          <long-description>&lt;p&gt;It utilizes the GetEmailAddresses static method, which does the actual logic work of checking.&lt;/p&gt;</long-description>
          <tag line="118" name="param" description="" type="string" variable="$strEmailAddress">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$strEmailAddress</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="134" package="Default">
        <name>QuotedPrintableEncode</name>
        <full_name>QuotedPrintableEncode</full_name>
        <docblock line="129">
          <description>Encodes given 8 bit string to a quoted-printable string,</description>
          <long-description/>
          <tag line="129" name="param" description="" type="string" variable="$strString">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="return" description="string" type="\encoded">
            <type by_reference="false">\encoded</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$strString</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="156" package="Default">
        <name>Send</name>
        <full_name>Send</full_name>
        <docblock line="146">
          <description>Sends a message out via SMTP according to the server, ip, etc.</description>
          <long-description>&lt;p&gt;preferences
as set up on the class.  Takes in a QEmailMessage object.
Will throw a QEmailException exception on any error.&lt;/p&gt;</long-description>
          <tag line="146" name="param" description="Message to Send" type="\QEmailMessage" variable="$objMessage">
            <type by_reference="false">\QEmailMessage</type>
          </tag>
          <tag line="146" name="throws" description="" type="\QEmailException">
            <type by_reference="false">\QEmailException</type>
          </tag>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$objMessage</name>
          <default/>
          <type>\QEmailMessage</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="417" package="Default">
      <extends>\QCallerException</extends>
      <name>QEmailException</name>
      <full_name>\QEmailException</full_name>
    </class>
    <class final="false" abstract="false" namespace="global" line="419" package="Default">
      <extends>\QBaseClass</extends>
      <name>QEmailAttachment</name>
      <full_name>\QEmailAttachment</full_name>
      <property final="false" static="false" visibility="protected" line="420" namespace="global" package="Default">
        <name>$strFilePath</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="421" namespace="global" package="Default">
        <name>$strMimeType</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="422" namespace="global" package="Default">
        <name>$strFileName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="423" namespace="global" package="Default">
        <name>$strEncodedFileData</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="425" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="425">
          <name>$strFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="425">
          <name>$strSpecifiedMimeType</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="425">
          <name>$strSpecifiedFileName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="453" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="453">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="470" package="Default">
      <extends>\QEmailAttachment</extends>
      <name>QEmailStringAttachment</name>
      <full_name>\QEmailStringAttachment</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="471" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="471">
          <name>$strContent</name>
          <default/>
          <type/>
        </argument>
        <argument line="471">
          <name>$strSpecifiedMimeType</name>
          <default/>
          <type/>
        </argument>
        <argument line="471">
          <name>$strSpecifiedFileName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="487" package="Default">
      <extends>\QBaseClass</extends>
      <name>QEmailMessage</name>
      <full_name>\QEmailMessage</full_name>
      <property final="false" static="false" visibility="protected" line="488" namespace="global" package="Default">
        <name>$strFrom</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="489" namespace="global" package="Default">
        <name>$strTo</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="490" namespace="global" package="Default">
        <name>$strSubject</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="491" namespace="global" package="Default">
        <name>$strBody</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="492" namespace="global" package="Default">
        <name>$strHtmlBody</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="494" namespace="global" package="Default">
        <name>$strCc</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="495" namespace="global" package="Default">
        <name>$strBcc</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="496" namespace="global" package="Default">
        <name>$strHeaderArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="497" namespace="global" package="Default">
        <name>$objFileArray</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="499" package="Default">
        <name>AddAttachment</name>
        <full_name>AddAttachment</full_name>
        <argument line="499">
          <name>$objFile</name>
          <default/>
          <type>\QEmailAttachment</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="503" package="Default">
        <name>Attach</name>
        <full_name>Attach</full_name>
        <argument line="503">
          <name>$strFilePath</name>
          <default/>
          <type/>
        </argument>
        <argument line="503">
          <name>$strSpecifiedMimeType</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="503">
          <name>$strSpecifiedFileName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="507" package="Default">
        <name>RemoveAttachment</name>
        <full_name>RemoveAttachment</full_name>
        <argument line="507">
          <name>$strFileName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="512" package="Default">
        <name>SetHeader</name>
        <full_name>SetHeader</full_name>
        <argument line="512">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="512">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="516" package="Default">
        <name>GetHeader</name>
        <full_name>GetHeader</full_name>
        <argument line="516">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="522" package="Default">
        <name>RemoveHeader</name>
        <full_name>RemoveHeader</full_name>
        <argument line="522">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="522">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="527" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="527">
          <name>$strFrom</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="527">
          <name>$strTo</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="527">
          <name>$strSubject</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="527">
          <name>$strBody</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="536" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="536">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="561" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="561">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="561">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QEmailServer.class.php</error>
      <error line="417" code="50000">No DocBlock was found for \QEmailException</error>
      <error line="419" code="50000">No DocBlock was found for \QEmailAttachment</error>
      <error line="420" code="50018">No DocBlock was found for property $strFilePath</error>
      <error line="421" code="50018">No DocBlock was found for property $strMimeType</error>
      <error line="422" code="50018">No DocBlock was found for property $strFileName</error>
      <error line="423" code="50018">No DocBlock was found for property $strEncodedFileData</error>
      <error line="425" code="50010">No DocBlock was found for method __construct()</error>
      <error line="453" code="50010">No DocBlock was found for method __get()</error>
      <error line="470" code="50000">No DocBlock was found for \QEmailStringAttachment</error>
      <error line="471" code="50010">No DocBlock was found for method __construct()</error>
      <error line="487" code="50000">No DocBlock was found for \QEmailMessage</error>
      <error line="488" code="50018">No DocBlock was found for property $strFrom</error>
      <error line="489" code="50018">No DocBlock was found for property $strTo</error>
      <error line="490" code="50018">No DocBlock was found for property $strSubject</error>
      <error line="491" code="50018">No DocBlock was found for property $strBody</error>
      <error line="492" code="50018">No DocBlock was found for property $strHtmlBody</error>
      <error line="494" code="50018">No DocBlock was found for property $strCc</error>
      <error line="495" code="50018">No DocBlock was found for property $strBcc</error>
      <error line="496" code="50018">No DocBlock was found for property $strHeaderArray</error>
      <error line="497" code="50018">No DocBlock was found for property $objFileArray</error>
      <error line="499" code="50010">No DocBlock was found for method AddAttachment()</error>
      <error line="503" code="50010">No DocBlock was found for method Attach()</error>
      <error line="507" code="50010">No DocBlock was found for method RemoveAttachment()</error>
      <error line="512" code="50010">No DocBlock was found for method SetHeader()</error>
      <error line="516" code="50010">No DocBlock was found for method GetHeader()</error>
      <error line="522" code="50010">No DocBlock was found for method RemoveHeader()</error>
      <error line="527" code="50010">No DocBlock was found for method __construct()</error>
      <error line="536" code="50010">No DocBlock was found for method __get()</error>
      <error line="561" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QCacheProviderMemcache.class.php" hash="522087c76cc832eb8db7f0c87714e0fd" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="Default">
      <extends>\QAbstractCacheProvider</extends>
      <name>QCacheProviderMemcache</name>
      <full_name>\QCacheProviderMemcache</full_name>
      <docblock line="4">
        <description>Cache provider based on Memcache</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="9" namespace="global" package="Default">
        <name>$objMemcache</name>
        <default/>
        <docblock line="8">
          <description/>
          <long-description/>
          <tag line="8" name="var" description="" type="\Memcache">
            <type by_reference="false">\Memcache</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="11">
          <description>Construct the Memcache based cache provider</description>
          <long-description/>
          <tag line="11" name="param" description="array of server options. Each item in the array contains an associative&#10;arrays with options for the server to add to memcache" type="array" variable="$objOptionsArray">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="16">
          <name>$objOptionsArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>Get</name>
        <full_name>Get</full_name>
        <docblock line="31">
          <description>Get the object that has the given key from the cache</description>
          <long-description/>
          <tag line="31" name="param" description="the key of the object in the cache" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Default">
        <name>Set</name>
        <full_name>Set</full_name>
        <docblock line="40">
          <description>Set the object into the cache with the given key</description>
          <long-description/>
          <tag line="40" name="param" description="the key to use for the object" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="param" description="the object to put in the cache" type="object" variable="$objValue">
            <type by_reference="false">object</type>
          </tag>
          <tag line="40" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="46">
          <name>$objValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="Default">
        <name>Delete</name>
        <full_name>Delete</full_name>
        <docblock line="50">
          <description>Delete the object that has the given key from the cache</description>
          <long-description/>
          <tag line="50" name="param" description="the key of the object in the cache" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="Default">
        <name>DeleteAll</name>
        <full_name>DeleteAll</full_name>
        <docblock line="59">
          <description>Invalidate all the objects in the cache</description>
          <long-description/>
          <tag line="59" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QCacheProviderMemcache.class.php</error>
      <critical line="8" code="50019">No short description for property $objMemcache</critical>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QInstallationValidator.class.php" hash="c40d3fb9abfc015d62215a1075adff7f" package="Default">
    <include line="2" type="Require" package="Default">
      <name>QString.class.php</name>
    </include>
    <include line="106" type="Require" package="Default">
      <name/>
    </include>
    <function namespace="global" line="265" package="Default">
      <name>__database_check_error</name>
      <full_name>\__database_check_error</full_name>
      <argument line="265">
        <name>$errno</name>
        <default/>
        <type/>
      </argument>
      <argument line="265">
        <name>$errstr</name>
        <default/>
        <type/>
      </argument>
      <argument line="265">
        <name>$errfile</name>
        <default/>
        <type/>
      </argument>
      <argument line="265">
        <name>$errline</name>
        <default/>
        <type/>
      </argument>
      <argument line="265">
        <name>$errcontext</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="true" namespace="global" line="4" package="Default">
      <extends/>
      <name>QInstallationValidator</name>
      <full_name>\QInstallationValidator</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="9" package="Default">
        <name>Validate</name>
        <full_name>Validate</full_name>
        <docblock line="5">
          <description/>
          <long-description/>
          <tag line="5" name="return" description="an array of QInstallationValidationResult objects&#10;If no errors were found, the array is empty." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="254" package="Default">
        <name>checkTrailingSlash</name>
        <full_name>checkTrailingSlash</full_name>
        <argument line="254">
          <name>$strConstantName</name>
          <default/>
          <type/>
        </argument>
        <argument line="254">
          <name>$result</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="269" package="Default">
      <extends/>
      <name>QInstallationValidationResult</name>
      <full_name>\QInstallationValidationResult</full_name>
      <property final="false" static="false" visibility="public" line="275" namespace="global" package="Default">
        <name>$strMessage</name>
        <default>""</default>
        <docblock line="270">
          <description>A string that represents an error that has been
found for this installation.</description>
          <long-description>&lt;p&gt;If no errors were found, the array
is empty.&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="282" namespace="global" package="Default">
        <name>$strCommandToFix</name>
        <default>""</default>
        <docblock line="277">
          <description>A hint of the bash script that can be used to fix the issues.</description>
          <long-description>&lt;p&gt;May or may not be set, depending on whether there's an
automated way to fix these.&lt;/p&gt;</long-description>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QInstallationValidator.class.php</error>
      <error line="265" code="50009">No DocBlock was found for function \__database_check_error()</error>
      <error line="4" code="50000">No DocBlock was found for \QInstallationValidator</error>
      <error line="5" code="50012">No short description for method Validate()</error>
      <error line="254" code="50010">No DocBlock was found for method checkTrailingSlash()</error>
      <error line="269" code="50000">No DocBlock was found for \QInstallationValidationResult</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QTranslationPoParser.class.php" hash="abab3957b2aa4f2827c243e1ea0ee76d" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends>\QCallerException</extends>
      <name>QPoParserException</name>
      <full_name>\QPoParserException</full_name>
    </class>
    <class final="false" abstract="false" namespace="global" line="5" package="Default">
      <extends/>
      <implements>\QTranslationBase</implements>
      <name>QTranslationPoParser</name>
      <full_name>\QTranslationPoParser</full_name>
      <constant namespace="global" line="61" package="Default">
        <name>PoParseStateNone</name>
        <full_name>PoParseStateNone</full_name>
        <value>0</value>
      </constant>
      <constant namespace="global" line="62" package="Default">
        <name>PoParseStateMessageIdStart</name>
        <full_name>PoParseStateMessageIdStart</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="63" package="Default">
        <name>PoParseStateMessageId</name>
        <full_name>PoParseStateMessageId</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="64" package="Default">
        <name>PoParseStateMessageStringStart</name>
        <full_name>PoParseStateMessageStringStart</full_name>
        <value>3</value>
      </constant>
      <constant namespace="global" line="65" package="Default">
        <name>PoParseStateMessageString</name>
        <full_name>PoParseStateMessageString</full_name>
        <value>4</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="273" namespace="global" package="Default">
        <name>$strTranslationArray</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="6" package="Default">
        <name>Initialize</name>
        <full_name>Initialize</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="10" package="Default">
        <name>Load</name>
        <full_name>Load</full_name>
        <argument line="10">
          <name>$strLanguageCode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="10">
          <name>$strCountryCode</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="67" package="Default">
        <name>UnescapeContent</name>
        <full_name>UnescapeContent</full_name>
        <argument line="67">
          <name>$strContent</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="119" package="Default">
        <name>ParsePoData</name>
        <full_name>ParsePoData</full_name>
        <argument line="119">
          <name>$strPoData</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="275" package="Default">
        <name>SetTranslation</name>
        <full_name>SetTranslation</full_name>
        <argument line="275">
          <name>$strToken</name>
          <default/>
          <type/>
        </argument>
        <argument line="275">
          <name>$strTranslatedText</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="279" package="Default">
        <name>TranslateToken</name>
        <full_name>TranslateToken</full_name>
        <argument line="279">
          <name>$strToken</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="288" package="Default">
        <name>VarDump</name>
        <full_name>VarDump</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QTranslationPoParser.class.php</error>
      <error line="3" code="50000">No DocBlock was found for \QPoParserException</error>
      <error line="5" code="50000">No DocBlock was found for \QTranslationPoParser</error>
      <error line="273" code="50018">No DocBlock was found for property $strTranslationArray</error>
      <error line="6" code="50010">No DocBlock was found for method Initialize()</error>
      <error line="10" code="50010">No DocBlock was found for method Load()</error>
      <error line="67" code="50010">No DocBlock was found for method UnescapeContent()</error>
      <error line="119" code="50010">No DocBlock was found for method ParsePoData()</error>
      <error line="275" code="50010">No DocBlock was found for method SetTranslation()</error>
      <error line="279" code="50010">No DocBlock was found for method TranslateToken()</error>
      <error line="288" code="50010">No DocBlock was found for method VarDump()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QMimeType.class.php" hash="f8976ad5f5a45a49608deb988e15adb4" package="Default">
    <class final="false" abstract="true" namespace="global" line="2" package="Default">
      <extends/>
      <name>QMimeType</name>
      <full_name>\QMimeType</full_name>
      <constant namespace="global" line="4" package="Default">
        <name>_Default</name>
        <full_name>_Default</full_name>
        <value>'application/octet-stream'</value>
      </constant>
      <constant namespace="global" line="5" package="Default">
        <name>Executable</name>
        <full_name>Executable</full_name>
        <value>'application/octet-stream'</value>
      </constant>
      <constant namespace="global" line="6" package="Default">
        <name>Gif</name>
        <full_name>Gif</full_name>
        <value>'image/gif'</value>
      </constant>
      <constant namespace="global" line="7" package="Default">
        <name>Gzip</name>
        <full_name>Gzip</full_name>
        <value>'application/x-gzip'</value>
      </constant>
      <constant namespace="global" line="8" package="Default">
        <name>Html</name>
        <full_name>Html</full_name>
        <value>'text/html'</value>
      </constant>
      <constant namespace="global" line="9" package="Default">
        <name>Jpeg</name>
        <full_name>Jpeg</full_name>
        <value>'image/jpeg'</value>
      </constant>
      <constant namespace="global" line="10" package="Default">
        <name>Mp3</name>
        <full_name>Mp3</full_name>
        <value>'audio/mpeg'</value>
      </constant>
      <constant namespace="global" line="11" package="Default">
        <name>MpegVideo</name>
        <full_name>MpegVideo</full_name>
        <value>'video/mpeg'</value>
      </constant>
      <constant namespace="global" line="12" package="Default">
        <name>MsExcel</name>
        <full_name>MsExcel</full_name>
        <value>'application/vnd.ms-excel'</value>
      </constant>
      <constant namespace="global" line="13" package="Default">
        <name>MsPowerpoint</name>
        <full_name>MsPowerpoint</full_name>
        <value>'application/vnd.ms-powerpoint'</value>
      </constant>
      <constant namespace="global" line="14" package="Default">
        <name>MsWord</name>
        <full_name>MsWord</full_name>
        <value>'application/vnd.ms-word'</value>
      </constant>
      <constant namespace="global" line="15" package="Default">
        <name>OoXmlWordProcessing</name>
        <full_name>OoXmlWordProcessing</full_name>
        <value>'application/vnd.openxmlformats-officedocument.wordprocessingml.document'</value>
      </constant>
      <constant namespace="global" line="16" package="Default">
        <name>OoXmlPresentation</name>
        <full_name>OoXmlPresentation</full_name>
        <value>'application/vnd.openxmlformats-officedocument.presentationml.presentation'</value>
      </constant>
      <constant namespace="global" line="17" package="Default">
        <name>OoXmlSpreadsheet</name>
        <full_name>OoXmlSpreadsheet</full_name>
        <value>'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'</value>
      </constant>
      <constant namespace="global" line="18" package="Default">
        <name>Pdf</name>
        <full_name>Pdf</full_name>
        <value>'application/pdf'</value>
      </constant>
      <constant namespace="global" line="19" package="Default">
        <name>PlainText</name>
        <full_name>PlainText</full_name>
        <value>'text/plain'</value>
      </constant>
      <constant namespace="global" line="20" package="Default">
        <name>Png</name>
        <full_name>Png</full_name>
        <value>'image/png'</value>
      </constant>
      <constant namespace="global" line="21" package="Default">
        <name>RichText</name>
        <full_name>RichText</full_name>
        <value>'text/rtf'</value>
      </constant>
      <constant namespace="global" line="22" package="Default">
        <name>Quicktime</name>
        <full_name>Quicktime</full_name>
        <value>'video/quicktime'</value>
      </constant>
      <constant namespace="global" line="23" package="Default">
        <name>WavAudio</name>
        <full_name>WavAudio</full_name>
        <value>'audio/x-wav'</value>
      </constant>
      <constant namespace="global" line="24" package="Default">
        <name>Xml</name>
        <full_name>Xml</full_name>
        <value>'text/xml'</value>
      </constant>
      <constant namespace="global" line="25" package="Default">
        <name>Zip</name>
        <full_name>Zip</full_name>
        <value>'application/x-zip'</value>
      </constant>
      <property final="false" static="true" visibility="public" line="31" namespace="global" package="Default">
        <name>$MimeTypeFor</name>
        <default>array('doc' =&gt; \QMimeType::MsWord, 'docx' =&gt; \QMimeType::OoXmlWordProcessing, 'exe' =&gt; \QMimeType::Executable, 'gif' =&gt; \QMimeType::Gif, 'gz' =&gt; \QMimeType::Gzip, 'htm' =&gt; \QMimeType::Html, 'html' =&gt; \QMimeType::Html, 'jpeg' =&gt; \QMimeType::Jpeg, 'jpg' =&gt; \QMimeType::Jpeg, 'mov' =&gt; \QMimeType::Quicktime, 'mp3' =&gt; \QMimeType::Mp3, 'mpeg' =&gt; \QMimeType::MpegVideo, 'mpg' =&gt; \QMimeType::MpegVideo, 'pdf' =&gt; \QMimeType::Pdf, 'php' =&gt; \QMimeType::PlainText, 'png' =&gt; \QMimeType::Png, 'ppt' =&gt; \QMimeType::MsPowerpoint, 'pptx' =&gt; \QMimeType::OoXmlPresentation, 'rtf' =&gt; \QMimeType::RichText, 'sql' =&gt; \QMimeType::PlainText, 'txt' =&gt; \QMimeType::PlainText, 'wav' =&gt; \QMimeType::WavAudio, 'xls' =&gt; \QMimeType::MsExcel, 'xlsx' =&gt; \QMimeType::OoXmlSpreadsheet, 'xml' =&gt; \QMimeType::Xml, 'zip' =&gt; \QMimeType::Zip)</default>
        <docblock line="27">
          <description>MimeTypeFor array is used in conjunction with GetMimeTypeForFilename()</description>
          <long-description/>
          <tag line="27" name="var" description="" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="65" namespace="global" package="Default">
        <name>$MagicDatabaseFilePath</name>
        <default>null</default>
        <docblock line="61">
          <description>the absolute file path of the MIME Magic Database file</description>
          <long-description/>
          <tag line="61" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="79" package="Default">
        <name>GetMimeTypeForFile</name>
        <full_name>GetMimeTypeForFile</full_name>
        <docblock line="68">
          <description>Returns the suggested MIME type for an actual file.</description>
          <long-description>&lt;p&gt;Using file-based heuristics
(data points in the ACTUAL file), it will utilize either the PECL FileInfo extension
OR the Magic MIME extension (if either are available) to determine the MIME type.  If all
else fails, it will fall back to the basic GetMimeTypeForFilename() method.&lt;/p&gt;</long-description>
          <tag line="68" name="param" description="the absolute file path of the ACTUAL file" type="string" variable="$strFilePath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="throws" description="" type="\QCallerException">
            <type by_reference="false">\QCallerException</type>
          </tag>
          <tag line="68" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$strFilePath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="122" package="Default">
        <name>GetMimeTypeForFilename</name>
        <full_name>GetMimeTypeForFilename</full_name>
        <docblock line="115">
          <description>Returns the suggested MIME type for a filename by stripping
out the extension and looking it up from QMimeType::$MimeTypeFor</description>
          <long-description/>
          <tag line="115" name="param" description="" type="string" variable="$strFilename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$strFilename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="144" package="Default">
        <name>GetTokenForMimeType</name>
        <full_name>GetTokenForMimeType</full_name>
        <docblock line="132">
          <description>To more easily process a file repository based on Mime Types, it's sometimes
easier to tokenize a mimetype and process using the tokens (e.g.</description>
          <long-description>&lt;p&gt;if you have a
directory of image icons that you want to map back to a mime type or a
collection of mime types, a tokenized-version of the mime type would be more
appropriate).&lt;/p&gt;

&lt;p&gt;Given a string-based mime type, this will return a "tokenized" version
of the mime type, which only consists of lower case characters and underscores (_).&lt;/p&gt;</long-description>
          <tag line="132" name="param" description="" type="string" variable="$strMimeType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="132" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$strMimeType</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QMimeType.class.php</error>
      <error line="2" code="50000">No DocBlock was found for \QMimeType</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QFolder.class.php" hash="68a4672ae519928c3d594b2b053cd2fa" package="Default">
    <class final="false" abstract="false" namespace="global" line="3" package="Default">
      <extends/>
      <name>QFolder</name>
      <full_name>\QFolder</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="14" package="Default">
        <name>MakeDirectory</name>
        <full_name>MakeDirectory</full_name>
        <docblock line="4">
          <description>Same as mkdir but correctly implements directory recursion.</description>
          <long-description>&lt;p&gt;At its core, it will use the php MKDIR function.
This method does no special error handling.  If you want to use special error handlers,
be sure to set that up BEFORE calling MakeDirectory.&lt;/p&gt;</long-description>
          <tag line="4" name="param" description="actual path of the directoy you want created" type="string" variable="$strPath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="4" name="param" description="optional mode" type="integer" variable="$intMode">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="4" name="return" description="the return flag from mkdir" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="14">
          <name>$strPath</name>
          <default/>
          <type/>
        </argument>
        <argument line="14">
          <name>$intMode</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="51" package="Default">
        <name>DeleteFolder</name>
        <full_name>DeleteFolder</full_name>
        <docblock line="44">
          <description>Allows for deletion of non-empty directories - takes care of
recursion appropriately.</description>
          <long-description/>
          <tag line="44" name="param" description="Full path to the folder to be deleted" type="string" variable="$strPath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="number of deleted files" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$strPath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="73" package="Default">
        <name>isWritable</name>
        <full_name>isWritable</full_name>
        <argument line="73">
          <name>$strPath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="91" package="Default">
        <name>getFilesInFolderHelper</name>
        <full_name>getFilesInFolderHelper</full_name>
        <docblock line="81">
          <description>Helper function for getRecursiveFolderContents.</description>
          <long-description>&lt;p&gt;Returns the list of files in the folder that match a given pattern
Result is an array of strings of form "filename.extension".&lt;/p&gt;

&lt;p&gt;Not recursive!&lt;/p&gt;</long-description>
          <tag line="81" name="param" description="full path to the folder to be processed" type="string" variable="$strPath">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$strPath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="119" package="Default">
        <name>listFilesInFolder</name>
        <full_name>listFilesInFolder</full_name>
        <docblock line="110">
          <description>Traverse a particular path and get a list of files and folders
underneath that path.</description>
          <long-description>&lt;p&gt;Optionally, also provide a regular
expression that specifies the pattern that the returned files must match.&lt;/p&gt;</long-description>
          <tag line="110" name="param" description="full path to the folder to be processed" type="string" variable="$strPath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="param" description="If this is set to true, only the FILES will be returned - not the folders." type="boolean" variable="$blnSkipFolders">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="110" name="param" description="optional string; regular expression that the files must match in order to be returned. If it's not set, all files in that folder will be returned." type="string" variable="$strFilenamePattern:">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$strPath</name>
          <default/>
          <type/>
        </argument>
        <argument line="119">
          <name>$blnSkipFolders</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="119">
          <name>$strFilenamePattern</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QFolder.class.php</error>
      <error line="3" code="50000">No DocBlock was found for \QFolder</error>
      <error line="73" code="50010">No DocBlock was found for method isWritable()</error>
      <error line="110" code="50014">Name of argument $strFilenamePattern does not match with the DocBlock's name $strFilenamePattern: in listFilesInFolder()</error>
      <notice line="110" code="50013">Parameter $strFilenamePattern: could not be found in listFilesInFolder()</notice>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QApplicationBase.class.php" hash="89e3a42a30cbd40cc1eb53b471f2f321" package="Default">
    <include line="392" type="Require" package="Default">
      <name/>
    </include>
    <include line="446" type="Require" package="Default">
      <name/>
    </include>
    <include line="471" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="474" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="477" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="true" namespace="global" line="9" package="Default">
      <extends>\QBaseClass</extends>
      <name>QApplicationBase</name>
      <full_name>\QApplicationBase</full_name>
      <docblock line="2">
        <description>This abstract class should never be instantiated.</description>
        <long-description>&lt;p&gt;It contains static methods,
variables and constants to be used throughout the application.&lt;/p&gt;

&lt;p&gt;The static method "Initialize" should be called at the begin of the script by
prepend.inc.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="true" visibility="public" line="21" namespace="global" package="Default">
        <name>$objCacheProvider</name>
        <default>null</default>
        <docblock line="14">
          <description>The cache provider object used for caching ORM objects
It is initialized below in Initialize(), based on the CACHE_PROVIDER and CACHE_PROVIDER_OPTIONS
variables defined in configuration.inc.php</description>
          <long-description/>
          <tag line="14" name="var" description="" type="\QAbstractCacheProvider">
            <type by_reference="false">\QAbstractCacheProvider</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="29" namespace="global" package="Default">
        <name>$BrowserType</name>
        <default>\QBrowserType::Unsupported</default>
        <docblock line="23">
          <description>Internal bitmask signifying which BrowserType the user is using
Use the QApplication::IsBrowser() method to do browser checking</description>
          <long-description/>
          <tag line="23" name="var" description="BrowserType" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="39" namespace="global" package="Default">
        <name>$CacheControl</name>
        <default>'private'</default>
        <docblock line="31">
          <description>Definition of CacheControl for the HTTP header.</description>
          <long-description>&lt;p&gt;In general, it is
recommended to keep this as "private".  But this can/should be overriden
for file/scripts that have special caching requirements (e.g. dynamically
created images like QImageLabel).&lt;/p&gt;</long-description>
          <tag line="31" name="var" description="CacheControl" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="50" namespace="global" package="Default">
        <name>$DefaultCrossScriptingMode</name>
        <default>\QCrossScripting::Legacy</default>
        <docblock line="41">
          <description/>
          <long-description/>
          <tag line="41" name="var" description="Defines the default mode for controls that need protection against cross-site scripting. Can be overridden at the individual control level, or for all controls by overriding it in QApplication. Set to QCrossScripting::Legacy for backward compatibility reasons for legacy applications; For new applications the recommended setting is QCrossScripting::Purify." type="\#P#C\QCrossScripting.Purify|\?">
            <type by_reference="false">\#P#C\QCrossScripting.Purify</type>
            <type by_reference="false">\?</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="58" namespace="global" package="Default">
        <name>$DocumentRoot</name>
        <default/>
        <docblock line="52">
          <description>Path of the "web root" or "document root" of the web server
Like "/home/www/htdocs" on Linux/Unix or "c:\inetpub\wwwroot" on Windows</description>
          <long-description/>
          <tag line="52" name="var" description="DocumentRoot" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="71" namespace="global" package="Default">
        <name>$ProcessOutput</name>
        <default>true</default>
        <docblock line="60">
          <description>Whether or not we are currently trying to Process the Output of the page.</description>
          <long-description>&lt;p&gt;Used by the OutputPage PHP output_buffering handler.  As of PHP 5.2,
this gets called whenever ob_get_contents() is called.  Because some
classes like QFormBase utilizes ob_get_contents() to perform template
evaluation without wanting to actually perform OutputPage, this flag
can be set/modified by QFormBase::EvaluateTemplate accordingly to
prevent OutputPage from executing.&lt;/p&gt;</long-description>
          <tag line="60" name="var" description="ProcessOutput" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="80" namespace="global" package="Default">
        <name>$ScriptFilename</name>
        <default/>
        <docblock line="73">
          <description>Full path of the actual PHP script being run
Like "/home/www/htdocs/folder/script.php" on Linux/Unix
or "c:\inetpub\wwwroot" on Windows</description>
          <long-description/>
          <tag line="73" name="var" description="ScriptFilename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="89" namespace="global" package="Default">
        <name>$ScriptName</name>
        <default/>
        <docblock line="82">
          <description>Web-relative path of the actual PHP script being run
So for "http://www.domain.com/folder/script.php",
QApplication::$ScriptName would be "/folder/script.php"</description>
          <long-description/>
          <tag line="82" name="var" description="ScriptName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="98" namespace="global" package="Default">
        <name>$PathInfo</name>
        <default/>
        <docblock line="91">
          <description>Extended Path Information after the script URL (if applicable)
So for "http://www.domain.com/folder/script.php/15/225"
QApplication::$PathInfo would be "/15/255"</description>
          <long-description/>
          <tag line="91" name="var" description="PathInfo" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="107" namespace="global" package="Default">
        <name>$QueryString</name>
        <default/>
        <docblock line="100">
          <description>Query String after the script URL (if applicable)
So for "http://www.domain.com/folder/script.php?item=15&amp;value=22"
QApplication::$QueryString would be "item=15&amp;value=22"</description>
          <long-description/>
          <tag line="100" name="var" description="QueryString" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="116" namespace="global" package="Default">
        <name>$RequestUri</name>
        <default/>
        <docblock line="109">
          <description>The full Request URI that was requested
So for "http://www.domain.com/folder/script.php/15/25/?item=15&amp;value=22"
QApplication::$RequestUri would be "/folder/script.php/15/25/?item=15&amp;value=22"</description>
          <long-description/>
          <tag line="109" name="var" description="RequestUri" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="125" namespace="global" package="Default">
        <name>$ServerAddress</name>
        <default/>
        <docblock line="118">
          <description>The IP address of the server running the script/PHP application
This is either the LOCAL_ADDR or the SERVER_ADDR server constant, depending
on the server type, OS and configuration.</description>
          <long-description/>
          <tag line="118" name="var" description="ServerAddress" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="132" namespace="global" package="Default">
        <name>$EncodingType</name>
        <default>"UTF-8"</default>
        <docblock line="127">
          <description>The encoding type for the application (e.g.</description>
          <long-description>&lt;p&gt;UTF-8, ISO-8859-1, etc.)&lt;/p&gt;</long-description>
          <tag line="127" name="var" description="EncodingType" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="139" namespace="global" package="Default">
        <name>$Database</name>
        <default/>
        <docblock line="134">
          <description>An array of Database objects, as initialized by QApplication::InitializeDatabaseConnections()</description>
          <long-description/>
          <tag line="134" name="var" description="Database" type="\QDatabaseBase[]">
            <type by_reference="false">\QDatabaseBase[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="146" namespace="global" package="Default">
        <name>$CliMode</name>
        <default/>
        <docblock line="141">
          <description>A flag to indicate whether or not this script is run as a CLI (Command Line Interface)</description>
          <long-description/>
          <tag line="141" name="var" description="CliMode" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="154" namespace="global" package="Default">
        <name>$ClassFile</name>
        <default/>
        <docblock line="148">
          <description>Class File Array - used by QApplication::AutoLoad to more quickly load
core class objects without making a file_exists call.</description>
          <long-description/>
          <tag line="148" name="var" description="ClassFile" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="162" namespace="global" package="Default">
        <name>$PreloadedClassFile</name>
        <default/>
        <docblock line="156">
          <description>Preloaded Class File Array - used by QApplication::Initialize to load
any core class objects during Initailize()</description>
          <long-description/>
          <tag line="156" name="var" description="ClassFile" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="169" namespace="global" package="Default">
        <name>$RequestMode</name>
        <default/>
        <docblock line="164">
          <description>The QRequestMode enumerated value for the current request mode</description>
          <long-description/>
          <tag line="164" name="var" description="RequestMode" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="177" namespace="global" package="Default">
        <name>$CountryCode</name>
        <default/>
        <docblock line="171">
          <description>2-letter country code to set for internationalization and localization
(e.g.</description>
          <long-description>&lt;p&gt;us, uk, jp)&lt;/p&gt;</long-description>
          <tag line="171" name="var" description="CountryCode" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="185" namespace="global" package="Default">
        <name>$LanguageCode</name>
        <default/>
        <docblock line="179">
          <description>2-letter language code to set for internationalization and localization
(e.g.</description>
          <long-description>&lt;p&gt;en, jp, etc.)&lt;/p&gt;</long-description>
          <tag line="179" name="var" description="LanguageCode" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="192" namespace="global" package="Default">
        <name>$LanguageObject</name>
        <default/>
        <docblock line="187">
          <description>The instance of the active QI18n object (which contains translation strings), if any.</description>
          <long-description/>
          <tag line="187" name="var" description="" type="\QTranslationBase">
            <type by_reference="false">\QTranslationBase</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="515" namespace="global" package="Default">
        <name>$intStoredErrorLevel</name>
        <default>null</default>
      </property>
      <property final="false" static="true" visibility="public" line="750" namespace="global" package="Default">
        <name>$AlertMessageArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="true" visibility="public" line="751" namespace="global" package="Default">
        <name>$JavaScriptArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="true" visibility="public" line="752" namespace="global" package="Default">
        <name>$JavaScriptArrayHighPriority</name>
        <default>array()</default>
      </property>
      <property final="false" static="true" visibility="public" line="753" namespace="global" package="Default">
        <name>$JavaScriptArrayLowPriority</name>
        <default>array()</default>
      </property>
      <property final="false" static="true" visibility="public" line="755" namespace="global" package="Default">
        <name>$ErrorFlag</name>
        <default>false</default>
      </property>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="204" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="197">
          <description>This faux constructor method throws a caller exception.</description>
          <long-description>&lt;p&gt;The Application object should never be instantiated, and this constructor
override simply guarantees it.&lt;/p&gt;</long-description>
          <tag line="197" name="return" description="" type="\QApplicationBase">
            <type by_reference="false">\QApplicationBase</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="220" package="Default">
        <name>Initialize</name>
        <full_name>Initialize</full_name>
        <docblock line="213">
          <description>This should be the first call to initialize all the static variables
The application object also has static methods that are miscellaneous web
development utilities, etc.</description>
          <long-description/>
          <tag line="213" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="401" package="Default">
        <name>IsBrowser</name>
        <full_name>IsBrowser</full_name>
        <docblock line="395">
          <description>Checks for the type of browser in use by the client.</description>
          <long-description/>
          <tag line="395" name="static" description=""/>
          <tag line="395" name="param" description="" type="int" variable="$intBrowserType">
            <type by_reference="false">int</type>
          </tag>
          <tag line="395" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="401">
          <name>$intBrowserType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="412" package="Default">
        <name>InitializeDatabaseConnections</name>
        <full_name>InitializeDatabaseConnections</full_name>
        <docblock line="405">
          <description>This call will initialize the database connection(s) as defined by
the constants DB_CONNECTION_X, where "X" is the index number of a
particular database connection.</description>
          <long-description/>
          <tag line="405" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="454" package="Default">
        <name>SessionOverride</name>
        <full_name>SessionOverride</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="469" package="Default">
        <name>Autoload</name>
        <full_name>Autoload</full_name>
        <docblock line="463">
          <description>This is called by the PHP5 Autoloader.</description>
          <long-description>&lt;p&gt;This static method can be overridden.&lt;/p&gt;</long-description>
          <tag line="463" name="param" description="" type="\" variable="$strClassName"/>
          <tag line="463" name="return" description="whether or not a class was found / included" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="469">
          <name>$strClassName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="491" package="Default">
        <name>SetErrorHandler</name>
        <full_name>SetErrorHandler</full_name>
        <docblock line="484">
          <description>Temprorarily overrides the default error handling mechanism.</description>
          <long-description>&lt;p&gt;Remember to call
RestoreErrorHandler to restore the error handler back to the default.&lt;/p&gt;</long-description>
          <tag line="484" name="param" description="the name of the new error handler function, or NULL if none" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="484" name="param" description="if a error handler function is defined, then the new error reporting level (if any)" type="integer" variable="$intLevel">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="491">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="491">
          <name>$intLevel</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="507" package="Default">
        <name>RestoreErrorHandler</name>
        <full_name>RestoreErrorHandler</full_name>
        <docblock line="504">
          <description>Restores the temporarily overridden default error handling mechanism back to the default.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="517" package="Default">
        <name>MakeDirectory</name>
        <full_name>MakeDirectory</full_name>
        <argument line="517">
          <name>$strPath</name>
          <default/>
          <type/>
        </argument>
        <argument line="517">
          <name>$intMode</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="529" package="Default">
        <name>Redirect</name>
        <full_name>Redirect</full_name>
        <docblock line="522">
          <description>This will redirect the user to a new web location.</description>
          <long-description>&lt;p&gt;This can be a relative or absolute web path, or it
can be an entire URL.&lt;/p&gt;</long-description>
          <tag line="522" name="param" description="target patch" type="string" variable="$strLocation">
            <type by_reference="false">string</type>
          </tag>
          <tag line="522" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="529">
          <name>$strLocation</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="569" package="Default">
        <name>CloseWindow</name>
        <full_name>CloseWindow</full_name>
        <docblock line="564">
          <description>This will close the window.</description>
          <long-description>&lt;p&gt;It will immediately end processing of the rest of the script.&lt;/p&gt;</long-description>
          <tag line="564" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="598" package="Default">
        <name>QueryString</name>
        <full_name>QueryString</full_name>
        <docblock line="591">
          <description>Gets the value of the QueryString item $strItem.</description>
          <long-description>&lt;p&gt;Will return NULL if it doesn't exist.&lt;/p&gt;</long-description>
          <tag line="591" name="param" description="the parameter name" type="string" variable="$strItem">
            <type by_reference="false">string</type>
          </tag>
          <tag line="591" name="return" description="value of the parameter" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="598">
          <name>$strItem</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="610" package="Default">
        <name>GenerateQueryString</name>
        <full_name>GenerateQueryString</full_name>
        <docblock line="605">
          <description>Generates a valid URL Query String based on values in the provided array.</description>
          <long-description>&lt;p&gt;If no array is provided, it uses the global $_GET&lt;/p&gt;</long-description>
          <tag line="605" name="param" description="" type="array" variable="$arr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="605" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="610">
          <name>$arr</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="622" package="Default">
        <name>GenerateQueryStringHelper</name>
        <full_name>GenerateQueryStringHelper</full_name>
        <argument line="622">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="622">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="641" package="Default">
        <name>CheckRemoteAdmin</name>
        <full_name>CheckRemoteAdmin</full_name>
        <docblock line="633">
          <description>By default, this is used by the codegen and form drafts to do a quick check
on the ALLOW_REMOTE_ADMIN constant (as defined in configuration.inc.php).</description>
          <long-description>&lt;p&gt;If enabled,
then anyone can access the page.  If disabled, only "localhost" can access the page.
If you want to run a script that should be accessible regardless of
ALLOW_REMOTE_ADMIN, simply remove the CheckRemoteAdmin() method call from that script.&lt;/p&gt;</long-description>
          <tag line="633" name="return" description="" type="\"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="663" package="Default">
        <name>IsRemoteAdminSession</name>
        <full_name>IsRemoteAdminSession</full_name>
        <docblock line="653">
          <description>Checks whether the current request was made by an ADMIN
This does not refer to your Database admin or an Admin user defined in your application but an IP address
(or IP address range) defined in configuration.inc.php.</description>
          <long-description>&lt;p&gt;The function can be used to restrict access to sensitive pages to a list of IPs (or IP ranges), such as the LAN to which
the server hosting the QCubed application is connected.&lt;/p&gt;</long-description>
          <tag line="653" name="static" description=""/>
          <tag line="653" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="692" package="Default">
        <name>IsIPInRange</name>
        <full_name>IsIPInRange</full_name>
        <docblock line="684">
          <description>Checks whether the given IP falls into the given IP range</description>
          <long-description/>
          <tag line="684" name="static" description=""/>
          <tag line="684" name="param" description="the IP number to check" type="string" variable="$ip">
            <type by_reference="false">string</type>
          </tag>
          <tag line="684" name="param" description="the IP number range. The range could be in 'IP/mask' or 'IP - IP' format. mask could be a simple&#10;integer or a dotted netmask." type="string" variable="$range">
            <type by_reference="false">string</type>
          </tag>
          <tag line="684" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="692">
          <name>$ip</name>
          <default/>
          <type/>
        </argument>
        <argument line="692">
          <name>$range</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="734" package="Default">
        <name>PathInfo</name>
        <full_name>PathInfo</full_name>
        <docblock line="723">
          <description>Gets the value of the PathInfo item at index $intIndex.</description>
          <long-description>&lt;p&gt;Will return NULL if it doesn't exist.&lt;/p&gt;

&lt;p&gt;The way PathInfo index is determined is, for example, given a URL '/folder/page.php/id/15/blue',
QApplication::PathInfo(0) will return 'id'
QApplication::PathInfo(1) will return '15'
QApplication::PathInfo(2) will return 'blue'&lt;/p&gt;</long-description>
          <tag line="723" name="param" description="index" type="int" variable="$intIndex">
            <type by_reference="false">int</type>
          </tag>
          <tag line="723" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="734">
          <name>$intIndex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="757" package="Default">
        <name>DisplayAlert</name>
        <full_name>DisplayAlert</full_name>
        <argument line="757">
          <name>$strMessage</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="768" package="Default">
        <name>ExecuteJavaScript</name>
        <full_name>ExecuteJavaScript</full_name>
        <docblock line="761">
          <description>Thic class can be used to call a Javascript function sittin in the client browser from the server side.</description>
          <long-description>&lt;p&gt;Can be used inside event handlers to do something after verification  on server side.&lt;/p&gt;</long-description>
          <tag line="761" name="static" description=""/>
          <tag line="761" name="param" description="the javascript to execute" type="string" variable="$strJavaScript">
            <type by_reference="false">string</type>
          </tag>
          <tag line="761" name="param" description="" type="int" variable="$intPriority">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="768">
          <name>$strJavaScript</name>
          <default/>
          <type/>
        </argument>
        <argument line="768">
          <name>$intPriority</name>
          <default>\QJsPriority::Standard</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="790" package="Default">
        <name>OutputPage</name>
        <full_name>OutputPage</full_name>
        <argument line="790">
          <name>$strBuffer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="821" package="Default">
        <name>RenderJavaScript</name>
        <full_name>RenderJavaScript</full_name>
        <docblock line="815">
          <description>Function renders Javascript on the client browser.</description>
          <long-description/>
          <tag line="815" name="static" description=""/>
          <tag line="815" name="param" description="if true print the result, otherwise return it" type="bool" variable="$blnOutput">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="815" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="821">
          <name>$blnOutput</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="875" package="Default">
        <name>Translate</name>
        <full_name>Translate</full_name>
        <docblock line="864">
          <description>If LanguageCode is specified and QI18n::Initialize() has been called, then this
will perform a translation of the given token for the specified Language Code and optional
Country code.</description>
          <long-description>&lt;p&gt;Otherwise, this will simply return the token as is.
This method is also used by the global print-translated "_t" function.&lt;/p&gt;</long-description>
          <tag line="864" name="param" description="" type="string" variable="$strToken">
            <type by_reference="false">string</type>
          </tag>
          <tag line="864" name="return" description="the Translated token (if applicable)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="875">
          <name>$strToken</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="891" package="Default">
        <name>HtmlEntities</name>
        <full_name>HtmlEntities</full_name>
        <docblock line="882">
          <description>Global/Central HtmlEntities command to perform the PHP equivalent of htmlentities.</description>
          <long-description>&lt;p&gt;Feel free to override to specify encoding/quoting specific preferences (e.g. ENT_QUOTES/ENT_NOQUOTES, etc.)&lt;/p&gt;

&lt;p&gt;This method is also used by the global print "_p" function.&lt;/p&gt;</long-description>
          <tag line="882" name="param" description="text string to perform html escaping" type="string" variable="$strText">
            <type by_reference="false">string</type>
          </tag>
          <tag line="882" name="return" description="the html escaped string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="891">
          <name>$strText</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="900" package="Default">
        <name>VarDump</name>
        <full_name>VarDump</full_name>
        <docblock line="895">
          <description>For development purposes, this static method outputs all the Application static variables</description>
          <long-description/>
          <tag line="895" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="945" package="Default">
      <extends/>
      <name>QJsPriority</name>
      <full_name>\QJsPriority</full_name>
      <docblock line="942">
        <description>Class for enumerating Javascript priority.</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="946" package="Default">
        <name>Standard</name>
        <full_name>Standard</full_name>
        <value>0</value>
      </constant>
      <constant namespace="global" line="947" package="Default">
        <name>High</name>
        <full_name>High</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="948" package="Default">
        <name>Low</name>
        <full_name>Low</full_name>
        <value>-1</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="954" package="Default">
      <extends/>
      <name>QRequestMode</name>
      <full_name>\QRequestMode</full_name>
      <docblock line="951">
        <description>This is an enumerator class for listing Request Modes</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="955" package="Default">
        <name>Standard</name>
        <full_name>Standard</full_name>
        <value>'Standard'</value>
      </constant>
      <constant namespace="global" line="956" package="Default">
        <name>Ajax</name>
        <full_name>Ajax</full_name>
        <value>'Ajax'</value>
      </constant>
    </class>
    <class final="false" abstract="false" namespace="global" line="959" package="Default">
      <extends/>
      <name>QBrowserType</name>
      <full_name>\QBrowserType</full_name>
      <constant namespace="global" line="960" package="Default">
        <name>InternetExplorer</name>
        <full_name>InternetExplorer</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="961" package="Default">
        <name>InternetExplorer_6_0</name>
        <full_name>InternetExplorer_6_0</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="962" package="Default">
        <name>InternetExplorer_7_0</name>
        <full_name>InternetExplorer_7_0</full_name>
        <value>4</value>
      </constant>
      <constant namespace="global" line="964" package="Default">
        <name>InternetExplorer_8_0</name>
        <full_name>InternetExplorer_8_0</full_name>
        <value>8</value>
      </constant>
      <constant namespace="global" line="966" package="Default">
        <name>Firefox</name>
        <full_name>Firefox</full_name>
        <value>16</value>
      </constant>
      <constant namespace="global" line="967" package="Default">
        <name>Firefox_1_0</name>
        <full_name>Firefox_1_0</full_name>
        <value>32</value>
      </constant>
      <constant namespace="global" line="968" package="Default">
        <name>Firefox_1_5</name>
        <full_name>Firefox_1_5</full_name>
        <value>64</value>
      </constant>
      <constant namespace="global" line="969" package="Default">
        <name>Firefox_2_0</name>
        <full_name>Firefox_2_0</full_name>
        <value>128</value>
      </constant>
      <constant namespace="global" line="970" package="Default">
        <name>Firefox_3_0</name>
        <full_name>Firefox_3_0</full_name>
        <value>256</value>
      </constant>
      <constant namespace="global" line="972" package="Default">
        <name>Safari</name>
        <full_name>Safari</full_name>
        <value>512</value>
      </constant>
      <constant namespace="global" line="973" package="Default">
        <name>Safari_2_0</name>
        <full_name>Safari_2_0</full_name>
        <value>1024</value>
      </constant>
      <constant namespace="global" line="974" package="Default">
        <name>Safari_3_0</name>
        <full_name>Safari_3_0</full_name>
        <value>2048</value>
      </constant>
      <constant namespace="global" line="975" package="Default">
        <name>Safari_4_0</name>
        <full_name>Safari_4_0</full_name>
        <value>4096</value>
      </constant>
      <constant namespace="global" line="977" package="Default">
        <name>Opera</name>
        <full_name>Opera</full_name>
        <value>8192</value>
      </constant>
      <constant namespace="global" line="978" package="Default">
        <name>Opera_7</name>
        <full_name>Opera_7</full_name>
        <value>16384</value>
      </constant>
      <constant namespace="global" line="979" package="Default">
        <name>Opera_8</name>
        <full_name>Opera_8</full_name>
        <value>32768</value>
      </constant>
      <constant namespace="global" line="980" package="Default">
        <name>Opera_9</name>
        <full_name>Opera_9</full_name>
        <value>65536</value>
      </constant>
      <constant namespace="global" line="982" package="Default">
        <name>Konqueror</name>
        <full_name>Konqueror</full_name>
        <value>131072</value>
      </constant>
      <constant namespace="global" line="983" package="Default">
        <name>Konqueror_3</name>
        <full_name>Konqueror_3</full_name>
        <value>262144</value>
      </constant>
      <constant namespace="global" line="984" package="Default">
        <name>Konqueror_4</name>
        <full_name>Konqueror_4</full_name>
        <value>524288</value>
      </constant>
      <constant namespace="global" line="986" package="Default">
        <name>Chrome</name>
        <full_name>Chrome</full_name>
        <value>1048576</value>
      </constant>
      <constant namespace="global" line="987" package="Default">
        <name>Chrome_0</name>
        <full_name>Chrome_0</full_name>
        <value>2097152</value>
      </constant>
      <constant namespace="global" line="988" package="Default">
        <name>Chrome_1</name>
        <full_name>Chrome_1</full_name>
        <value>4194304</value>
      </constant>
      <constant namespace="global" line="990" package="Default">
        <name>Windows</name>
        <full_name>Windows</full_name>
        <value>8388608</value>
      </constant>
      <constant namespace="global" line="991" package="Default">
        <name>Linux</name>
        <full_name>Linux</full_name>
        <value>16777216</value>
      </constant>
      <constant namespace="global" line="992" package="Default">
        <name>Macintosh</name>
        <full_name>Macintosh</full_name>
        <value>33554432</value>
      </constant>
      <constant namespace="global" line="994" package="Default">
        <name>Unsupported</name>
        <full_name>Unsupported</full_name>
        <value>67108864</value>
      </constant>
    </class>
    <markers>
      <todo line="735">Cache PathInfo</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QApplicationBase.class.php</error>
      <error line="515" code="50018">No DocBlock was found for property $intStoredErrorLevel</error>
      <error line="750" code="50018">No DocBlock was found for property $AlertMessageArray</error>
      <error line="751" code="50018">No DocBlock was found for property $JavaScriptArray</error>
      <error line="752" code="50018">No DocBlock was found for property $JavaScriptArrayHighPriority</error>
      <error line="753" code="50018">No DocBlock was found for property $JavaScriptArrayLowPriority</error>
      <error line="755" code="50018">No DocBlock was found for property $ErrorFlag</error>
      <error line="454" code="50010">No DocBlock was found for method SessionOverride()</error>
      <error line="517" code="50010">No DocBlock was found for method MakeDirectory()</error>
      <error line="622" code="50010">No DocBlock was found for method GenerateQueryStringHelper()</error>
      <error line="757" code="50010">No DocBlock was found for method DisplayAlert()</error>
      <error line="790" code="50010">No DocBlock was found for method OutputPage()</error>
      <error line="959" code="50000">No DocBlock was found for \QBrowserType</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/JavaScriptHelper.class.php" hash="aecb947f25bd9b3d7c6d2d34a687f169" package="Default">
    <class final="false" abstract="false" namespace="global" line="2" package="Default">
      <extends/>
      <name>QJsClosure</name>
      <full_name>\QJsClosure</full_name>
      <property final="false" static="false" visibility="protected" line="3" namespace="global" package="Default">
        <name>$strBody</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="4" namespace="global" package="Default">
        <name>$strParamsArray</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="6" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="6">
          <name>$strBody</name>
          <default/>
          <type/>
        </argument>
        <argument line="6">
          <name>$strParamsArray</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="11" package="Default">
        <name>toJsObject</name>
        <full_name>toJsObject</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="17" package="Default">
      <extends>\QAjaxAction</extends>
      <name>QNoScriptAjaxAction</name>
      <full_name>\QNoScriptAjaxAction</full_name>
      <property final="false" static="false" visibility="private" line="18" namespace="global" package="Default">
        <name>$objTargetAction</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="20">
          <name>$objTargetAction</name>
          <default/>
          <type>\QAction</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="24">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>RenderScript</name>
        <full_name>RenderScript</full_name>
        <argument line="30">
          <name>$objControl</name>
          <default/>
          <type>\QControl</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="35" package="Default">
      <extends/>
      <name>JavaScriptHelper</name>
      <full_name>\JavaScriptHelper</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="45" package="Default">
        <name>customDataInsertion</name>
        <full_name>customDataInsertion</full_name>
        <docblock line="36">
          <description>Returns javascript that on execution will insert the value $strValue into the DOM element corresponding to
the $objControl using the key $strKey</description>
          <long-description/>
          <tag line="36" name="static" description=""/>
          <tag line="36" name="param" description="" type="\QControl" variable="$objControl">
            <type by_reference="false">\QControl</type>
          </tag>
          <tag line="36" name="param" description="" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="param" description="any javascript variable or object" type="string" variable="$strValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="return" description="data insertion javascript" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$objControl</name>
          <default/>
          <type>\QControl</type>
        </argument>
        <argument line="45">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="58" package="Default">
        <name>customDataRetrieval</name>
        <full_name>customDataRetrieval</full_name>
        <docblock line="49">
          <description>Returns javascript that on execution will retrieve the value from the DOM element corresponding to
the $objControl using the key $strKey and assign it to the variable $strValue.</description>
          <long-description/>
          <tag line="49" name="static" description=""/>
          <tag line="49" name="param" description="" type="\QControl" variable="$objControl">
            <type by_reference="false">\QControl</type>
          </tag>
          <tag line="49" name="param" description="" type="string" variable="$strKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="" type="string" variable="$strValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="data retrieval javascript" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$objControl</name>
          <default/>
          <type>\QControl</type>
        </argument>
        <argument line="58">
          <name>$strKey</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$strValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="71" package="Default">
        <name>toJsObject</name>
        <full_name>toJsObject</full_name>
        <docblock line="62">
          <description>Recursively convert a php object to a javascript object.</description>
          <long-description>&lt;p&gt;If the $objValue is an object other than Date and has a toJsObject() method, the method will be called
to perform the conversion.
Array values are recursively converted as well.&lt;/p&gt;</long-description>
          <tag line="62" name="static" description=""/>
          <tag line="62" name="param" description="the php object to convert" type="mixed" variable="$objValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="62" name="return" description="javascript representation of the php object" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$objValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/JavaScriptHelper.class.php</error>
      <error line="2" code="50000">No DocBlock was found for \QJsClosure</error>
      <error line="3" code="50018">No DocBlock was found for property $strBody</error>
      <error line="4" code="50018">No DocBlock was found for property $strParamsArray</error>
      <error line="6" code="50010">No DocBlock was found for method __construct()</error>
      <error line="11" code="50010">No DocBlock was found for method toJsObject()</error>
      <error line="17" code="50000">No DocBlock was found for \QNoScriptAjaxAction</error>
      <error line="18" code="50018">No DocBlock was found for property $objTargetAction</error>
      <error line="20" code="50010">No DocBlock was found for method __construct()</error>
      <error line="24" code="50010">No DocBlock was found for method __get()</error>
      <error line="30" code="50010">No DocBlock was found for method RenderScript()</error>
      <error line="35" code="50000">No DocBlock was found for \JavaScriptHelper</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QSoapService.class.php" hash="538fcc027b9a6d5443fef68e4e241c0c" package="Default">
    <include line="342" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="7" package="Default">
      <extends>\QBaseClass</extends>
      <name>QSoapParameter</name>
      <full_name>\QSoapParameter</full_name>
      <property final="false" static="false" visibility="protected" line="8" namespace="global" package="Default">
        <name>$strName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="9" namespace="global" package="Default">
        <name>$strType</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="10" namespace="global" package="Default">
        <name>$blnArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="11" namespace="global" package="Default">
        <name>$blnReference</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="13" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="13">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="13">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
        <argument line="13">
          <name>$blnArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="13">
          <name>$blnReference</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>GetWsdlMessagePart</name>
        <full_name>GetWsdlMessagePart</full_name>
        <argument line="20">
          <name>$strComplexTypesArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="47">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="62" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="62">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="62">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="Default">
        <name>Display</name>
        <full_name>Display</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="Default">
        <name>DisplayReturn</name>
        <full_name>DisplayReturn</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="Default">
        <name>IsObject</name>
        <full_name>IsObject</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="Default">
        <name>GetPhpFromSoapCode</name>
        <full_name>GetPhpFromSoapCode</full_name>
        <argument line="104">
          <name>$strArgumentName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="Default">
        <name>GetSoapFromPhpCode</name>
        <full_name>GetSoapFromPhpCode</full_name>
        <argument line="129">
          <name>$strArgumentName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="150" package="Default">
      <extends>\QBaseClass</extends>
      <name>QSoapMethod</name>
      <full_name>\QSoapMethod</full_name>
      <property final="false" static="false" visibility="protected" line="151" namespace="global" package="Default">
        <name>$strName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="152" namespace="global" package="Default">
        <name>$objParameters</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="153" namespace="global" package="Default">
        <name>$objReturnParameter</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="155">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="Default">
        <name>AddParameter</name>
        <full_name>AddParameter</full_name>
        <argument line="159">
          <name>$objParameter</name>
          <default/>
          <type>\QSoapParameter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="Default">
        <name>GetParameter</name>
        <full_name>GetParameter</full_name>
        <argument line="163">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Default">
        <name>GetAllParameters</name>
        <full_name>GetAllParameters</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Default">
        <name>GetWsdlPortTypeOperation</name>
        <full_name>GetWsdlPortTypeOperation</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="184" package="Default">
        <name>GetWsdlBindingOperation</name>
        <full_name>GetWsdlBindingOperation</full_name>
        <argument line="184">
          <name>$strNamespace</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="197" package="Default">
        <name>GetWsdlMethodMessages</name>
        <full_name>GetWsdlMethodMessages</full_name>
        <argument line="197">
          <name>$strComplexTypesArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="214" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="214">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="227" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="227">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="227">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="240" package="Default">
        <name>Display</name>
        <full_name>Display</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="251" package="Default">
      <extends>\QBaseClass</extends>
      <name>QSoapService</name>
      <full_name>\QSoapService</full_name>
      <property final="false" static="true" visibility="public" line="252" namespace="global" package="Default">
        <name>$DefaultNamespace</name>
        <default>'http://qcubed.defaultnamespace.com'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="254" namespace="global" package="Default">
        <name>$objMethodArray</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="255" namespace="global" package="Default">
        <name>$strNamespace</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="256" namespace="global" package="Default">
        <name>$strClassName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="257" namespace="global" package="Default">
        <name>$objSoapServer</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="259" package="Default">
        <name>GetArrayTypeName</name>
        <full_name>GetArrayTypeName</full_name>
        <argument line="259">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="263" package="Default">
        <name>AlterComplexTypesArrayForArrayType</name>
        <full_name>AlterComplexTypesArrayForArrayType</full_name>
        <argument line="263">
          <name>$strArrayTypeName</name>
          <default/>
          <type/>
        </argument>
        <argument line="263">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
        <argument line="263">
          <name>$strComplexTypesArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="273" package="Default">
        <name>Run</name>
        <full_name>Run</full_name>
        <argument line="273">
          <name>$strClassName</name>
          <default/>
          <type/>
        </argument>
        <argument line="273">
          <name>$strNamespace</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="350" package="Default">
        <name>GetClassWrapper</name>
        <full_name>GetClassWrapper</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="411" package="Default">
        <name>GetLocation</name>
        <full_name>GetLocation</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="418" package="Default">
        <name>GetWsdlTypes</name>
        <full_name>GetWsdlTypes</full_name>
        <argument line="418">
          <name>$strComplexTypesArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="430" package="Default">
        <name>GetWsdlService</name>
        <full_name>GetWsdlService</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="437" package="Default">
        <name>GetWsdlBinding</name>
        <full_name>GetWsdlBinding</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="447" package="Default">
        <name>GetWsdlPortType</name>
        <full_name>GetWsdlPortType</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="457" package="Default">
        <name>GetDisco</name>
        <full_name>GetDisco</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="468" package="Default">
        <name>GetWsdl</name>
        <full_name>GetWsdl</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="501" package="Default">
        <name>SetupSoapMethods</name>
        <full_name>SetupSoapMethods</full_name>
        <argument line="501">
          <name>$objReflection</name>
          <default/>
          <type>\ReflectionClass</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="592" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="592">
          <name>$strClassName</name>
          <default/>
          <type/>
        </argument>
        <argument line="592">
          <name>$strNamespace</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="597" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="597">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QSoapService.class.php</error>
      <error line="7" code="50000">No DocBlock was found for \QSoapParameter</error>
      <error line="8" code="50018">No DocBlock was found for property $strName</error>
      <error line="9" code="50018">No DocBlock was found for property $strType</error>
      <error line="10" code="50018">No DocBlock was found for property $blnArray</error>
      <error line="11" code="50018">No DocBlock was found for property $blnReference</error>
      <error line="13" code="50010">No DocBlock was found for method __construct()</error>
      <error line="20" code="50010">No DocBlock was found for method GetWsdlMessagePart()</error>
      <error line="47" code="50010">No DocBlock was found for method __get()</error>
      <error line="62" code="50010">No DocBlock was found for method __set()</error>
      <error line="77" code="50010">No DocBlock was found for method Display()</error>
      <error line="85" code="50010">No DocBlock was found for method DisplayReturn()</error>
      <error line="91" code="50010">No DocBlock was found for method IsObject()</error>
      <error line="104" code="50010">No DocBlock was found for method GetPhpFromSoapCode()</error>
      <error line="129" code="50010">No DocBlock was found for method GetSoapFromPhpCode()</error>
      <error line="150" code="50000">No DocBlock was found for \QSoapMethod</error>
      <error line="151" code="50018">No DocBlock was found for property $strName</error>
      <error line="152" code="50018">No DocBlock was found for property $objParameters</error>
      <error line="153" code="50018">No DocBlock was found for property $objReturnParameter</error>
      <error line="155" code="50010">No DocBlock was found for method __construct()</error>
      <error line="159" code="50010">No DocBlock was found for method AddParameter()</error>
      <error line="163" code="50010">No DocBlock was found for method GetParameter()</error>
      <error line="170" code="50010">No DocBlock was found for method GetAllParameters()</error>
      <error line="174" code="50010">No DocBlock was found for method GetWsdlPortTypeOperation()</error>
      <error line="184" code="50010">No DocBlock was found for method GetWsdlBindingOperation()</error>
      <error line="197" code="50010">No DocBlock was found for method GetWsdlMethodMessages()</error>
      <error line="214" code="50010">No DocBlock was found for method __get()</error>
      <error line="227" code="50010">No DocBlock was found for method __set()</error>
      <error line="240" code="50010">No DocBlock was found for method Display()</error>
      <error line="251" code="50000">No DocBlock was found for \QSoapService</error>
      <error line="252" code="50018">No DocBlock was found for property $DefaultNamespace</error>
      <error line="254" code="50018">No DocBlock was found for property $objMethodArray</error>
      <error line="255" code="50018">No DocBlock was found for property $strNamespace</error>
      <error line="256" code="50018">No DocBlock was found for property $strClassName</error>
      <error line="257" code="50018">No DocBlock was found for property $objSoapServer</error>
      <error line="259" code="50010">No DocBlock was found for method GetArrayTypeName()</error>
      <error line="263" code="50010">No DocBlock was found for method AlterComplexTypesArrayForArrayType()</error>
      <error line="273" code="50010">No DocBlock was found for method Run()</error>
      <error line="350" code="50010">No DocBlock was found for method GetClassWrapper()</error>
      <error line="411" code="50010">No DocBlock was found for method GetLocation()</error>
      <error line="418" code="50010">No DocBlock was found for method GetWsdlTypes()</error>
      <error line="430" code="50010">No DocBlock was found for method GetWsdlService()</error>
      <error line="437" code="50010">No DocBlock was found for method GetWsdlBinding()</error>
      <error line="447" code="50010">No DocBlock was found for method GetWsdlPortType()</error>
      <error line="457" code="50010">No DocBlock was found for method GetDisco()</error>
      <error line="468" code="50010">No DocBlock was found for method GetWsdl()</error>
      <error line="501" code="50010">No DocBlock was found for method SetupSoapMethods()</error>
      <error line="592" code="50010">No DocBlock was found for method __construct()</error>
      <error line="597" code="50010">No DocBlock was found for method __get()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QString.class.php" hash="d429a496e52444e373635ce645129264" package="Default">
    <class final="false" abstract="true" namespace="global" line="6" package="Default">
      <extends/>
      <name>QString</name>
      <full_name>\QString</full_name>
      <docblock line="2">
        <description>An abstract utility class to handle string manipulation.</description>
        <long-description>&lt;p&gt;All methods
are statically available.&lt;/p&gt;</long-description>
      </docblock>
      <method final="true" abstract="false" static="false" visibility="public" namespace="global" line="14" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="7">
          <description>This faux constructor method throws a caller exception.</description>
          <long-description>&lt;p&gt;The String object should never be instantiated, and this constructor
override simply guarantees it.&lt;/p&gt;</long-description>
          <tag line="7" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="24" package="Default">
        <name>FirstCharacter</name>
        <full_name>FirstCharacter</full_name>
        <docblock line="18">
          <description>Returns the first character of a given string, or null if the given
string is null.</description>
          <long-description/>
          <tag line="18" name="param" description="" type="string" variable="$strString">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="return" description="the first character, or null" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$strString</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="37" package="Default">
        <name>LastCharacter</name>
        <full_name>LastCharacter</full_name>
        <docblock line="31">
          <description>Returns the last character of a given string, or null if the given
string is null.</description>
          <long-description/>
          <tag line="31" name="param" description="" type="string" variable="$strString">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="the last character, or null" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$strString</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="51" package="Default">
        <name>Truncate</name>
        <full_name>Truncate</full_name>
        <docblock line="45">
          <description>Truncates the string to a given length, adding elipses (if needed).</description>
          <long-description/>
          <tag line="45" name="param" description="string to truncate" type="string" variable="$strString">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="param" description="the maximum possible length of the string to return (including length of the elipse)" type="integer" variable="$intMaxLength">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="45" name="return" description="the full string or the truncated string with eplise" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$strText</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$intMaxLength</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="63" package="Default">
        <name>XmlEscape</name>
        <full_name>XmlEscape</full_name>
        <docblock line="58">
          <description>Escapes the string so that it can be safely used in as an Xml Node (basically, adding CDATA if needed)</description>
          <long-description/>
          <tag line="58" name="param" description="string to escape" type="string" variable="$strString">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="return" description="the XML Node-safe String" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$strString</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="true" visibility="public" namespace="global" line="74" package="Default">
        <name>LongestCommonSubsequence</name>
        <full_name>LongestCommonSubsequence</full_name>
        <argument line="74">
          <name>$str1</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$str2</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QString.class.php</error>
      <error line="45" code="50014">Name of argument $strText does not match with the DocBlock's name $strString in Truncate()</error>
      <notice line="45" code="50013">Parameter $strString could not be found in Truncate()</notice>
      <error line="74" code="50010">No DocBlock was found for method LongestCommonSubsequence()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QPluginUninstaller.class.php" hash="da7112c294c346fa65f2ff307dbc88be" package="PluginManager">
    <docblock line="2">
      <description/>
      <long-description/>
      <tag line="2" name="package" description="PluginManager"/>
      <tag line="2" name="author" description="Alex Weinstein &lt;alex94040@yahoo.com&gt;"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="13" package="Default">
      <extends>\QPluginInstallerBase</extends>
      <name>QPluginUninstaller</name>
      <full_name>\QPluginUninstaller</full_name>
      <docblock line="7">
        <description>This class takes care of uninstalling existing plugins - removal of
files, as well as modding any configuration files that were touched
by the plugin.</description>
        <long-description>&lt;p&gt;Remember - don't ever uninstall the plugin by hand.
Always use this class / UI encapsulation of this class.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="14" package="Default">
        <name>uninstallExisting</name>
        <full_name>uninstallExisting</full_name>
        <argument line="14">
          <name>$strPluginName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="41" package="Default">
        <name>deleteFiles</name>
        <full_name>deleteFiles</full_name>
        <argument line="41">
          <name>$strPluginName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="63" package="Default">
        <name>deleteFromMasterConfig</name>
        <full_name>deleteFromMasterConfig</full_name>
        <argument line="63">
          <name>$strPluginName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="84" package="Default">
        <name>removeMarkedSectionHelper</name>
        <full_name>removeMarkedSectionHelper</full_name>
        <argument line="84">
          <name>$strPluginName</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$strFileName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="2" code="50008">No short description for file qcubed/_core/framework/QPluginUninstaller.class.php</critical>
      <error line="14" code="50010">No DocBlock was found for method uninstallExisting()</error>
      <error line="41" code="50010">No DocBlock was found for method deleteFiles()</error>
      <error line="63" code="50010">No DocBlock was found for method deleteFromMasterConfig()</error>
      <error line="84" code="50010">No DocBlock was found for method removeMarkedSectionHelper()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/framework/QLexer.class.php" hash="64eff3de3bb2156704feb637584e2ec4" package="Default">
    <class final="false" abstract="false" namespace="global" line="2" package="Default">
      <extends>\QBaseClass</extends>
      <name>QLexer</name>
      <full_name>\QLexer</full_name>
      <constant namespace="global" line="9" package="Default">
        <name>UNMATCHED</name>
        <full_name>UNMATCHED</full_name>
        <value>"__UNMATCHED__"</value>
      </constant>
      <constant namespace="global" line="10" package="Default">
        <name>DefaultMode</name>
        <full_name>DefaultMode</full_name>
        <value>"default_mode"</value>
      </constant>
      <property final="false" static="false" visibility="private" line="3" namespace="global" package="Default">
        <name>$objRegexMode</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="4" namespace="global" package="Default">
        <name>$objModeHandlers</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="5" namespace="global" package="Default">
        <name>$objTokenModeMap</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="6" namespace="global" package="Default">
        <name>$objTokens</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="7" namespace="global" package="Default">
        <name>$objModeStack</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="12" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="12">
          <name>$strStartMode</name>
          <default>\QLexer::DefaultMode</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>addPattern</name>
        <full_name>addPattern</full_name>
        <argument line="17">
          <name>$strPattern</name>
          <default/>
          <type/>
        </argument>
        <argument line="17">
          <name>$strTokenName</name>
          <default/>
          <type/>
        </argument>
        <argument line="17">
          <name>$strMode</name>
          <default>\QLexer::DefaultMode</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="Default">
        <name>addEntryPattern</name>
        <full_name>addEntryPattern</full_name>
        <argument line="24">
          <name>$strPattern</name>
          <default/>
          <type/>
        </argument>
        <argument line="24">
          <name>$strTokenName</name>
          <default/>
          <type/>
        </argument>
        <argument line="24">
          <name>$strMode</name>
          <default>\QLexer::DefaultMode</default>
          <type/>
        </argument>
        <argument line="24">
          <name>$strNewMode</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>addExitPattern</name>
        <full_name>addExitPattern</full_name>
        <argument line="32">
          <name>$strPattern</name>
          <default/>
          <type/>
        </argument>
        <argument line="32">
          <name>$strTokenName</name>
          <default/>
          <type/>
        </argument>
        <argument line="32">
          <name>$strMode</name>
          <default/>
          <type/>
        </argument>
        <argument line="32">
          <name>$strNewMode</name>
          <default>\QLexer::DefaultMode</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="Default">
        <name>Tokenize</name>
        <full_name>Tokenize</full_name>
        <argument line="40">
          <name>$strRaw</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="94" package="Default">
        <name>Reduce</name>
        <full_name>Reduce</full_name>
        <argument line="94">
          <name>$strRaw</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/framework/QLexer.class.php</error>
      <error line="2" code="50000">No DocBlock was found for \QLexer</error>
      <error line="3" code="50018">No DocBlock was found for property $objRegexMode</error>
      <error line="4" code="50018">No DocBlock was found for property $objModeHandlers</error>
      <error line="5" code="50018">No DocBlock was found for property $objTokenModeMap</error>
      <error line="6" code="50018">No DocBlock was found for property $objTokens</error>
      <error line="7" code="50018">No DocBlock was found for property $objModeStack</error>
      <error line="12" code="50010">No DocBlock was found for method __construct()</error>
      <error line="17" code="50010">No DocBlock was found for method addPattern()</error>
      <error line="24" code="50010">No DocBlock was found for method addEntryPattern()</error>
      <error line="32" code="50010">No DocBlock was found for method addExitPattern()</error>
      <error line="40" code="50010">No DocBlock was found for method Tokenize()</error>
      <error line="94" code="50010">No DocBlock was found for method Reduce()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QConvertNotationBase.class.php" hash="f1c33b43cd5ab051b1ab28d82bbc8ce3" package="Default">
    <class final="false" abstract="true" namespace="global" line="7" package="Codegen">
      <extends/>
      <name>QConvertNotationBase</name>
      <full_name>\QConvertNotationBase</full_name>
      <docblock line="2">
        <description/>
        <long-description/>
        <tag line="2" name="package" description="Codegen"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="8" package="Codegen">
        <name>PrefixFromType</name>
        <full_name>PrefixFromType</full_name>
        <argument line="8">
          <name>$strType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="27" package="Codegen">
        <name>WordsFromUnderscore</name>
        <full_name>WordsFromUnderscore</full_name>
        <argument line="27">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="34" package="Codegen">
        <name>CamelCaseFromUnderscore</name>
        <full_name>CamelCaseFromUnderscore</full_name>
        <argument line="34">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="57" package="Codegen">
        <name>WordsFromCamelCase</name>
        <full_name>WordsFromCamelCase</full_name>
        <argument line="57">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="103" package="Codegen">
        <name>UnderscoreFromCamelCase</name>
        <full_name>UnderscoreFromCamelCase</full_name>
        <argument line="103">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="120" package="Codegen">
        <name>JavaCaseFromUnderscore</name>
        <full_name>JavaCaseFromUnderscore</full_name>
        <argument line="120">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QConvertNotationBase.class.php</error>
      <critical line="2" code="50005">No short description for class \QConvertNotationBase</critical>
      <error line="8" code="50010">No DocBlock was found for method PrefixFromType()</error>
      <error line="27" code="50010">No DocBlock was found for method WordsFromUnderscore()</error>
      <error line="34" code="50010">No DocBlock was found for method CamelCaseFromUnderscore()</error>
      <error line="57" code="50010">No DocBlock was found for method WordsFromCamelCase()</error>
      <error line="103" code="50010">No DocBlock was found for method UnderscoreFromCamelCase()</error>
      <error line="120" code="50010">No DocBlock was found for method JavaCaseFromUnderscore()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QRestServiceCodeGen.class.php" hash="0491ec823ec19bd3f74d77f82747bb87" package="Default">
    <class final="false" abstract="false" namespace="global" line="5" package="Codegen">
      <extends>\QCodeGen</extends>
      <name>QRestServiceCodeGen</name>
      <full_name>\QRestServiceCodeGen</full_name>
      <docblock line="2">
        <description/>
        <long-description/>
        <tag line="2" name="package" description="Codegen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="7" namespace="global" package="Default">
        <name>$strServiceUrl</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="9" package="Codegen">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="9">
          <name>$objSettingsXml</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="14" package="Codegen">
        <name>GetTitle</name>
        <full_name>GetTitle</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="18" package="Codegen">
        <name>GetConfigXml</name>
        <full_name>GetConfigXml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Codegen">
        <name>GetReportLabel</name>
        <full_name>GetReportLabel</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Codegen">
        <name>GenerateAll</name>
        <full_name>GenerateAll</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Codegen">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="40">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="40" name="param" description="strName Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Codegen">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="61">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="61">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QRestServiceCodeGen.class.php</error>
      <critical line="2" code="50005">No short description for class \QRestServiceCodeGen</critical>
      <error line="7" code="50018">No DocBlock was found for property $strServiceUrl</error>
      <error line="9" code="50010">No DocBlock was found for method __construct()</error>
      <error line="14" code="50010">No DocBlock was found for method GetTitle()</error>
      <error line="18" code="50010">No DocBlock was found for method GetConfigXml()</error>
      <error line="25" code="50010">No DocBlock was found for method GetReportLabel()</error>
      <error line="29" code="50010">No DocBlock was found for method GenerateAll()</error>
      <error line="61" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QManyToManyReference.class.php" hash="f9237e8e4ea601ec7b64bc8d11ee9c85" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="Codegen">
      <extends>\QBaseClass</extends>
      <name>QManyToManyReference</name>
      <full_name>\QManyToManyReference</full_name>
      <docblock line="2">
        <description>Used by the QCubed Code Generator to describe a column reference from
the table's perspective (aka a Foreign Key from the referenced Table's point of view)</description>
        <long-description/>
        <tag line="2" name="package" description="Codegen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="17" namespace="global" package="Default">
        <name>$strKeyName</name>
        <default/>
        <docblock line="13">
          <description>Name of the foreign key object itself, as defined in the database or create script</description>
          <long-description/>
          <tag line="13" name="var" description="KeyName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strTable</name>
        <default/>
        <docblock line="19">
          <description>Name of the association table, itself (the many-to-many table that maps
the relationshipfor this ManyToManyReference)</description>
          <long-description/>
          <tag line="19" name="var" description="Table" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$strColumn</name>
        <default/>
        <docblock line="26">
          <description>Name of the referencing column (the column that owns the foreign key to this table)</description>
          <long-description/>
          <tag line="26" name="var" description="Column" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$strOppositeColumn</name>
        <default/>
        <docblock line="32">
          <description>Name of the opposite column (the column that owns the foreign key to the related table)</description>
          <long-description/>
          <tag line="32" name="var" description="Column" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$strOppositeVariableType</name>
        <default/>
        <docblock line="38">
          <description>Type of the opposite column (the column that owns the foreign key to the related table)
as a Variable type (for example, to be used to define the input parameter type to a Load function)</description>
          <long-description/>
          <tag line="38" name="var" description="OppositeVariableType" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" namespace="global" package="Default">
        <name>$strOppositeVariableName</name>
        <default/>
        <docblock line="45">
          <description>Name of the opposite column (the column that owns the foreign key to the related table)
as a Variable name (for example, to be used as an input parameter to a Load function)</description>
          <long-description/>
          <tag line="45" name="var" description="OppositeVariableName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$strOppositePropertyName</name>
        <default/>
        <docblock line="52">
          <description>Name of the opposite column (the column that owns the foreign key to the related table)
as a Property name (for example, to be used as a QQAssociationNode parameter name for the
column itself)</description>
          <long-description/>
          <tag line="52" name="var" description="OppositePropertyName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="65" namespace="global" package="Default">
        <name>$strOppositeObjectDescription</name>
        <default/>
        <docblock line="60">
          <description>Name of the opposite column (the column that owns the foreign key to the related table)
as an Object Description (see "ObjectDescription" below)</description>
          <long-description/>
          <tag line="60" name="var" description="OppositeObjectDescription" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" namespace="global" package="Default">
        <name>$strAssociatedTable</name>
        <default/>
        <docblock line="67">
          <description>The name of the associated table (the table that the OTHER
column in the association table points to)</description>
          <long-description/>
          <tag line="67" name="var" description="AssociatedTable" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="80" namespace="global" package="Default">
        <name>$strVariableName</name>
        <default/>
        <docblock line="74">
          <description>Name of the reverse-referenced object as an function parameter.</description>
          <long-description>&lt;p&gt;So if this is a reverse reference to "person" via "report.person_id",
the VariableName would be "objReport"&lt;/p&gt;</long-description>
          <tag line="74" name="var" description="VariableName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" namespace="global" package="Default">
        <name>$strVariableType</name>
        <default/>
        <docblock line="82">
          <description>Type of the reverse-referenced object as a class.</description>
          <long-description>&lt;p&gt;So if this is a reverse reference to "person" via "report.person_id",
the VariableName would be "Report"&lt;/p&gt;</long-description>
          <tag line="82" name="var" description="VariableType" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="95" namespace="global" package="Default">
        <name>$strObjectDescription</name>
        <default/>
        <docblock line="90">
          <description>Singular object description used in the function names for the
reverse reference.</description>
          <long-description>&lt;p&gt;See documentation for more details.&lt;/p&gt;</long-description>
          <tag line="90" name="var" description="ObjectDescription" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="102" namespace="global" package="Default">
        <name>$strObjectDescriptionPlural</name>
        <default/>
        <docblock line="97">
          <description>Plural object description used in the function names for the
reverse reference.</description>
          <long-description>&lt;p&gt;See documentation for more details.&lt;/p&gt;</long-description>
          <tag line="97" name="var" description="VariableType" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="108" namespace="global" package="Default">
        <name>$objColumnArray</name>
        <default/>
        <docblock line="104">
          <description>Array of non-FK Column objects (as indexed by Column name)</description>
          <long-description/>
          <tag line="104" name="var" description="ColumnArray" type="\Column[]">
            <type by_reference="false">\Column[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Codegen">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="118">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="118" name="param" description="strName Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="173" package="Codegen">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="165">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue</description>
          <long-description/>
          <tag line="165" name="param" description="strName Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="param" description="mixValue New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="173">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QManyToManyReference.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QReverseReference.class.php" hash="cb61b46455c650b10155b3f806add5d7" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="Codegen">
      <extends>\QBaseClass</extends>
      <name>QReverseReference</name>
      <full_name>\QReverseReference</full_name>
      <docblock line="2">
        <description>Used by the QCubed Code Generator to describe a column reference from
the table's perspective (aka a Foreign Key from the referenced Table's point of view)</description>
        <long-description/>
        <tag line="2" name="package" description="Codegen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="17" namespace="global" package="Default">
        <name>$strKeyName</name>
        <default/>
        <docblock line="13">
          <description>Name of the foreign key object itself, as defined in the database or create script</description>
          <long-description/>
          <tag line="13" name="var" description="KeyName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$strTable</name>
        <default/>
        <docblock line="19">
          <description>Name of the referencing table (the table that owns the column that is the foreign key)</description>
          <long-description/>
          <tag line="19" name="var" description="Table" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strColumn</name>
        <default/>
        <docblock line="25">
          <description>Name of the referencing column (the column that owns the foreign key)</description>
          <long-description/>
          <tag line="25" name="var" description="Column" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$blnNotNull</name>
        <default/>
        <docblock line="31">
          <description>Specifies whether the referencing column is specified as "NOT NULL"</description>
          <long-description/>
          <tag line="31" name="var" description="NotNull" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="global" package="Default">
        <name>$blnUnique</name>
        <default/>
        <docblock line="37">
          <description>Specifies whether the referencing column is unique</description>
          <long-description/>
          <tag line="37" name="var" description="Unique" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" namespace="global" package="Default">
        <name>$strVariableName</name>
        <default/>
        <docblock line="43">
          <description>Name of the reverse-referenced object as an function parameter.</description>
          <long-description>&lt;p&gt;So if this is a reverse reference to "person" via "report.person_id",
the VariableName would be "objReport"&lt;/p&gt;</long-description>
          <tag line="43" name="var" description="VariableName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" namespace="global" package="Default">
        <name>$strVariableType</name>
        <default/>
        <docblock line="51">
          <description>Type of the reverse-referenced object as a class.</description>
          <long-description>&lt;p&gt;So if this is a reverse reference to "person" via "report.person_id",
the VariableName would be "Report"&lt;/p&gt;</long-description>
          <tag line="51" name="var" description="VariableType" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="65" namespace="global" package="Default">
        <name>$strPropertyName</name>
        <default/>
        <docblock line="59">
          <description>Property Name of the referencing column (the column that owns the foreign key)
in the associated Class.</description>
          <long-description>&lt;p&gt;So if this is a reverse reference to the "person" table
via the table/column "report.owner_person_id", the PropertyName would be "OwnerPersonId"&lt;/p&gt;</long-description>
          <tag line="59" name="var" description="PropertyName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" namespace="global" package="Default">
        <name>$strObjectDescription</name>
        <default/>
        <docblock line="67">
          <description>Singular object description used in the function names for the
reverse reference.</description>
          <long-description>&lt;p&gt;See documentation for more details.&lt;/p&gt;</long-description>
          <tag line="67" name="var" description="ObjectDescription" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="79" namespace="global" package="Default">
        <name>$strObjectDescriptionPlural</name>
        <default/>
        <docblock line="74">
          <description>Plural object description used in the function names for the
reverse reference.</description>
          <long-description>&lt;p&gt;See documentation for more details.&lt;/p&gt;</long-description>
          <tag line="74" name="var" description="ObjectDescriptionPlural" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="86" namespace="global" package="Default">
        <name>$strObjectMemberVariable</name>
        <default/>
        <docblock line="81">
          <description>A member variable name to be used by classes that contain the local member variable
for this unique reverse reference.</description>
          <long-description>&lt;p&gt;Only aggregated when blnUnique is true.&lt;/p&gt;</long-description>
          <tag line="81" name="var" description="ObjectMemberVariable" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="93" namespace="global" package="Default">
        <name>$strObjectPropertyName</name>
        <default/>
        <docblock line="88">
          <description>A property name to be used by classes that contain the property
for this unique reverse reference.</description>
          <long-description>&lt;p&gt;Only aggregated when blnUnique is true.&lt;/p&gt;</long-description>
          <tag line="88" name="var" description="ObjectPropertyName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Codegen">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="102">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="102" name="param" description="strName Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="153" package="Codegen">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="145">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue</description>
          <long-description/>
          <tag line="145" name="param" description="strName Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="param" description="mixValue New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="153">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QReverseReference.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QCodeGenBase.class.php" hash="eb5c50e58cefdd9818463443b1d75da9" package="Default">
    <include line="449" type="Include" package="Default">
      <name/>
    </include>
    <function namespace="global" line="2" package="Default">
      <name>QcodoHandleCodeGenParseError</name>
      <full_name>\QcodoHandleCodeGenParseError</full_name>
      <argument line="2">
        <name>$__exc_errno</name>
        <default/>
        <type/>
      </argument>
      <argument line="2">
        <name>$__exc_errstr</name>
        <default/>
        <type/>
      </argument>
      <argument line="2">
        <name>$__exc_errfile</name>
        <default/>
        <type/>
      </argument>
      <argument line="2">
        <name>$__exc_errline</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="7" package="Default">
      <name>GO_BACK</name>
      <full_name>\GO_BACK</full_name>
      <argument line="7">
        <name>$intNumChars</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="true" namespace="global" line="22" package="Codegen">
      <extends>\QBaseClass</extends>
      <name>QCodeGenBase</name>
      <full_name>\QCodeGenBase</full_name>
      <docblock line="15">
        <description>This is the CodeGen class which performs the code generation
for both the Object-Relational Model (e.g.</description>
        <long-description>&lt;p&gt;Data Objects) as well as
the draft Forms, which make up simple HTML/PHP scripts to perform
basic CRUD functionality on each object.&lt;/p&gt;</long-description>
        <tag line="15" name="package" description="Codegen"/>
      </docblock>
      <constant namespace="global" line="34" package="Codegen">
        <name>PhpReservedWords</name>
        <full_name>PhpReservedWords</full_name>
        <value>'new, null, break, return, switch, self, case, const, clone, continue, declare, default, echo, else, elseif, empty, exit, eval, if, try, throw, catch, public, private, protected, function, extends, foreach, for, while, do, var, class, static, abstract, isset, unset, implements, interface, instanceof, include, include_once, require, require_once, abstract, and, or, xor, array, list, false, true, global, parent, print, exception, namespace, goto, final, endif, endswitch, enddeclare, endwhile, use, as, endfor, endforeach, this'</value>
      </constant>
      <constant namespace="global" line="37" package="Codegen">
        <name>TemplatesPath</name>
        <full_name>TemplatesPath</full_name>
        <value>'/codegen/templates/'</value>
      </constant>
      <constant namespace="global" line="41" package="Codegen">
        <name>TemplatesPathCustom</name>
        <full_name>TemplatesPathCustom</full_name>
        <value>'/codegen/templates/'</value>
      </constant>
      <constant namespace="global" line="48" package="Codegen">
        <name>DebugMode</name>
        <full_name>DebugMode</full_name>
        <value>false</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strClassPrefix</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="25" namespace="global" package="Default">
        <name>$strClassSuffix</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strErrors</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="56" namespace="global" package="Default">
        <name>$CodeGenArray</name>
        <default/>
        <docblock line="50">
          <description>This static array contains an array of active and executed codegen objects, based
on the XML Configuration passed in to Run()</description>
          <long-description/>
          <tag line="50" name="var" description="array of active/executed codegen objects" type="\QCodeGen[]">
            <type by_reference="false">\QCodeGen[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="64" namespace="global" package="Default">
        <name>$SettingsXmlArray</name>
        <default/>
        <docblock line="58">
          <description>This is the array representation of the parsed SettingsXml
for reportback purposes.</description>
          <long-description/>
          <tag line="58" name="var" description="array of config settings" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="71" namespace="global" package="Default">
        <name>$SettingsXml</name>
        <default/>
        <docblock line="66">
          <description>This is the SimpleXML representation of the Settings XML file</description>
          <long-description/>
          <tag line="66" name="var" description="the XML representation" type="\SimpleXmlElement">
            <type by_reference="false">\SimpleXmlElement</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="73" namespace="global" package="Default">
        <name>$SettingsFilePath</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="protected" line="80" namespace="global" package="Default">
        <name>$ApplicationName</name>
        <default/>
        <docblock line="75">
          <description>Application Name (from CodeGen Settings)</description>
          <long-description/>
          <tag line="75" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="87" namespace="global" package="Default">
        <name>$TemplateEscapeBegin</name>
        <default/>
        <docblock line="82">
          <description>Template Escape Begin (from CodeGen Settings)</description>
          <long-description/>
          <tag line="82" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="88" namespace="global" package="Default">
        <name>$TemplateEscapeBeginLength</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="protected" line="95" namespace="global" package="Default">
        <name>$TemplateEscapeEnd</name>
        <default/>
        <docblock line="90">
          <description>Template Escape End (from CodeGen Settings)</description>
          <long-description/>
          <tag line="90" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="96" namespace="global" package="Default">
        <name>$TemplateEscapeEndLength</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="98" namespace="global" package="Default">
        <name>$RootErrors</name>
        <default>''</default>
      </property>
      <property final="false" static="true" visibility="protected" line="104" namespace="global" package="Default">
        <name>$DirectoriesToExcludeArray</name>
        <default>array('.', '..', '.svn', 'svn', 'cvs', '.git')</default>
        <docblock line="100">
          <description/>
          <long-description/>
          <tag line="100" name="var" description="array of directories to be excluded in codegen (lower cased)" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
          <tag line="100" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="106" package="Codegen">
        <name>GetSettingsXml</name>
        <full_name>GetSettingsXml</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="121" package="Codegen">
        <name>Run</name>
        <full_name>Run</full_name>
        <argument line="121">
          <name>$strSettingsXmlFilePath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="192" package="Codegen">
        <name>LookupSetting</name>
        <full_name>LookupSetting</full_name>
        <docblock line="179">
          <description>This will lookup either the node value (if no attributename is passed in) or the attribute value
for a given Tag.</description>
          <long-description>&lt;p&gt;Node Searches only apply from the root level of the configuration XML being passed in
(e.g. it will not be able to lookup the tag name of a grandchild of the root node)&lt;/p&gt;

&lt;p&gt;If No Tag Name is passed in, then attribute/value lookup is based on the root node, itself.&lt;/p&gt;</long-description>
          <tag line="179" name="param" description="" type="\SimpleXmlElement" variable="$objNode">
            <type by_reference="false">\SimpleXmlElement</type>
          </tag>
          <tag line="179" name="param" description="" type="string" variable="$strTagName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="" type="string" variable="$strAttributeName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="" type="string" variable="$strType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="return" description="the return type depends on the QType you pass in to $strType" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$objNode</name>
          <default/>
          <type/>
        </argument>
        <argument line="192">
          <name>$strTagName</name>
          <default/>
          <type/>
        </argument>
        <argument line="192">
          <name>$strAttributeName</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="192">
          <name>$strType</name>
          <default>\QType::String</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="226" package="Codegen">
        <name>GenerateAggregate</name>
        <full_name>GenerateAggregate</full_name>
        <docblock line="222">
          <description/>
          <long-description/>
          <tag line="222" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="255" package="Codegen">
        <name>GenerateFiles</name>
        <full_name>GenerateFiles</full_name>
        <docblock line="244">
          <description>Given a template prefix (e.g.</description>
          <long-description>&lt;p&gt;db_orm_, db_type_, rest_, soap_, etc.), pull
all the _*.tpl templates from any subfolders of the template prefix in QCodeGen::TemplatesPath and QCodeGen::TemplatesPathCustom,
and call GenerateFile() on each one.  If there are any template files that reside
in BOTH TemplatesPath AND TemplatesPathCustom, then only use the TemplatesPathCustom one (which
in essence overrides the one in TemplatesPath).&lt;/p&gt;</long-description>
          <tag line="244" name="param" description="the prefix of the templates you want to generate against" type="string" variable="$strTemplatePrefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="244" name="param" description="array of arguments to send to EvaluateTemplate" type="mixed[]" variable="$mixArgumentArray">
            <type by_reference="false">mixed[]</type>
          </tag>
          <tag line="244" name="return" description="success/failure on whether or not all the files generated successfully" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="255">
          <name>$strTemplatePrefix</name>
          <default/>
          <type/>
        </argument>
        <argument line="255">
          <name>$mixArgumentArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="329" package="Codegen">
        <name>GenerateFile</name>
        <full_name>GenerateFile</full_name>
        <docblock line="319">
          <description>Enter description here.</description>
          <long-description>&lt;p&gt;..&lt;/p&gt;</long-description>
          <tag line="319" name="param" description="" type="string" variable="$strModuleName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="param" description="" type="string" variable="$strFilename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="param" description="whether we are using the _core template, or using a custom one" type="boolean" variable="$blnOverrideFlag">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="319" name="param" description="" type="mixed[]" variable="$mixArgumentArray">
            <type by_reference="false">mixed[]</type>
          </tag>
          <tag line="319" name="param" description="wheather or not to actually perform the save" type="boolean" variable="$blnSave">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="319" name="return" description="returns the evaluated template or boolean save success." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$strModuleName</name>
          <default/>
          <type/>
        </argument>
        <argument line="329">
          <name>$strFilename</name>
          <default/>
          <type/>
        </argument>
        <argument line="329">
          <name>$blnOverrideFlag</name>
          <default/>
          <type/>
        </argument>
        <argument line="329">
          <name>$mixArgumentArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="329">
          <name>$blnSave</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="421" package="Codegen">
        <name>setGeneratedFilePermissions</name>
        <full_name>setGeneratedFilePermissions</full_name>
        <argument line="421">
          <name>$strFilePath</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="431" package="Codegen">
        <name>EvaluatePHP</name>
        <full_name>EvaluatePHP</full_name>
        <argument line="431">
          <name>$strFilename</name>
          <default/>
          <type/>
        </argument>
        <argument line="431">
          <name>$strModuleName</name>
          <default/>
          <type/>
        </argument>
        <argument line="431">
          <name>$mixArgumentArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="461" package="Codegen">
        <name>EvaluateSubTemplate</name>
        <full_name>EvaluateSubTemplate</full_name>
        <argument line="461">
          <name>$strSubTemplateFilename</name>
          <default/>
          <type/>
        </argument>
        <argument line="461">
          <name>$strModuleName</name>
          <default/>
          <type/>
        </argument>
        <argument line="461">
          <name>$mixArgumentArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="488" package="Codegen">
        <name>EvaluateTemplate</name>
        <full_name>EvaluateTemplate</full_name>
        <argument line="488">
          <name>$strTemplate</name>
          <default/>
          <type/>
        </argument>
        <argument line="488">
          <name>$strModuleName</name>
          <default/>
          <type/>
        </argument>
        <argument line="488">
          <name>$mixArgumentArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="795" package="Codegen">
        <name>ClassNameFromTableName</name>
        <full_name>ClassNameFromTableName</full_name>
        <argument line="795">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="803" package="Codegen">
        <name>VariableNameFromColumn</name>
        <full_name>VariableNameFromColumn</full_name>
        <argument line="803">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="819" package="Codegen">
        <name>MetaControlLabelNameFromColumn</name>
        <full_name>MetaControlLabelNameFromColumn</full_name>
        <docblock line="808">
          <description>The function determines whether there is a comment on the column or not.</description>
          <long-description>&lt;p&gt;If yes, and the settings for the database has the option for using comments for Meta Control label names turned on
along with a preferred delimiter supplied, then the function will return the computed meta control label name. Otherwise it
just returns the PropertyName of the column.&lt;/p&gt;</long-description>
          <tag line="808" name="param" description="" type="\QColumn" variable="$objColumn">
            <type by_reference="false">\QColumn</type>
          </tag>
          <tag line="808" name="internal" description="param string $strDelimiter"/>
          <tag line="808" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="819">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="841" package="Codegen">
        <name>PropertyNameFromColumn</name>
        <full_name>PropertyNameFromColumn</full_name>
        <argument line="841">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="845" package="Codegen">
        <name>TypeNameFromColumnName</name>
        <full_name>TypeNameFromColumnName</full_name>
        <argument line="845">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="849" package="Codegen">
        <name>ReferenceColumnNameFromColumn</name>
        <full_name>ReferenceColumnNameFromColumn</full_name>
        <argument line="849">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="871" package="Codegen">
        <name>ReferenceVariableNameFromColumn</name>
        <full_name>ReferenceVariableNameFromColumn</full_name>
        <argument line="871">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="877" package="Codegen">
        <name>ReferencePropertyNameFromColumn</name>
        <full_name>ReferencePropertyNameFromColumn</full_name>
        <argument line="877">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="882" package="Codegen">
        <name>VariableNameFromTable</name>
        <full_name>VariableNameFromTable</full_name>
        <argument line="882">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="888" package="Codegen">
        <name>ReverseReferenceVariableNameFromTable</name>
        <full_name>ReverseReferenceVariableNameFromTable</full_name>
        <argument line="888">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="893" package="Codegen">
        <name>ReverseReferenceVariableTypeFromTable</name>
        <full_name>ReverseReferenceVariableTypeFromTable</full_name>
        <argument line="893">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="898" package="Codegen">
        <name>ParameterCleanupFromColumn</name>
        <full_name>ParameterCleanupFromColumn</full_name>
        <argument line="898">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
        <argument line="898">
          <name>$blnIncludeEquality</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="908" package="Codegen">
        <name>ParameterListFromColumnArray</name>
        <full_name>ParameterListFromColumnArray</full_name>
        <argument line="908">
          <name>$objColumnArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="912" package="Codegen">
        <name>ImplodeObjectArray</name>
        <full_name>ImplodeObjectArray</full_name>
        <argument line="912">
          <name>$strGlue</name>
          <default/>
          <type/>
        </argument>
        <argument line="912">
          <name>$strPrefix</name>
          <default/>
          <type/>
        </argument>
        <argument line="912">
          <name>$strSuffix</name>
          <default/>
          <type/>
        </argument>
        <argument line="912">
          <name>$strProperty</name>
          <default/>
          <type/>
        </argument>
        <argument line="912">
          <name>$objArrayToImplode</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="921" package="Codegen">
        <name>TypeTokenFromTypeName</name>
        <full_name>TypeTokenFromTypeName</full_name>
        <argument line="921">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="938" package="Codegen">
        <name>FormControlVariableNameForColumn</name>
        <full_name>FormControlVariableNameForColumn</full_name>
        <argument line="938">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="965" package="Codegen">
        <name>FormControlVariableDataTypeForColumn</name>
        <full_name>FormControlVariableDataTypeForColumn</full_name>
        <docblock line="958">
          <description>This function returns the data type for table column
NOTE: The data type is not the PHP data type, but classes used by QCubed</description>
          <long-description/>
          <tag line="958" name="param" description="" type="\QColumn" variable="$objColumn">
            <type by_reference="false">\QColumn</type>
          </tag>
          <tag line="958" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="965">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="986" package="Codegen">
        <name>FormControlClassForColumn</name>
        <full_name>FormControlClassForColumn</full_name>
        <argument line="986">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1010" package="Codegen">
        <name>FormControlVariableNameForUniqueReverseReference</name>
        <full_name>FormControlVariableNameForUniqueReverseReference</full_name>
        <argument line="1010">
          <name>$objReverseReference</name>
          <default/>
          <type>\QReverseReference</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1017" package="Codegen">
        <name>FormControlVariableNameForManyToManyReference</name>
        <full_name>FormControlVariableNameForManyToManyReference</full_name>
        <argument line="1017">
          <name>$objManyToManyReference</name>
          <default/>
          <type>\QManyToManyReference</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1021" package="Codegen">
        <name>FormLabelVariableNameForColumn</name>
        <full_name>FormLabelVariableNameForColumn</full_name>
        <argument line="1021">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1026" package="Codegen">
        <name>FormLabelVariableNameForUniqueReverseReference</name>
        <full_name>FormLabelVariableNameForUniqueReverseReference</full_name>
        <argument line="1026">
          <name>$objReverseReference</name>
          <default/>
          <type>\QReverseReference</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1033" package="Codegen">
        <name>FormLabelVariableNameForManyToManyReference</name>
        <full_name>FormLabelVariableNameForManyToManyReference</full_name>
        <argument line="1033">
          <name>$objManyToManyReference</name>
          <default/>
          <type>\QManyToManyReference</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1037" package="Codegen">
        <name>FormControlTypeForColumn</name>
        <full_name>FormControlTypeForColumn</full_name>
        <argument line="1037">
          <name>$objColumn</name>
          <default/>
          <type>\QColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1063" package="Codegen">
        <name>CalculateObjectMemberVariable</name>
        <full_name>CalculateObjectMemberVariable</full_name>
        <argument line="1063">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1063">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1063">
          <name>$strReferencedTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1071" package="Codegen">
        <name>CalculateObjectPropertyName</name>
        <full_name>CalculateObjectPropertyName</full_name>
        <argument line="1071">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1071">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1071">
          <name>$strReferencedTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1079" package="Codegen">
        <name>CalculateObjectDescription</name>
        <full_name>CalculateObjectDescription</full_name>
        <argument line="1079">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1079">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1079">
          <name>$strReferencedTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1079">
          <name>$blnPluralize</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1146" package="Codegen">
        <name>CalculateObjectDescriptionForAssociation</name>
        <full_name>CalculateObjectDescriptionForAssociation</full_name>
        <argument line="1146">
          <name>$strAssociationTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1146">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1146">
          <name>$strReferencedTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1146">
          <name>$blnPluralize</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1194" package="Codegen">
        <name>CalculateGraphPrefixArray</name>
        <full_name>CalculateGraphPrefixArray</full_name>
        <argument line="1194">
          <name>$objForeignKeyArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1213" package="Codegen">
        <name>VariableTypeFromDbType</name>
        <full_name>VariableTypeFromDbType</full_name>
        <argument line="1213">
          <name>$strDbType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1237" package="Codegen">
        <name>Pluralize</name>
        <full_name>Pluralize</full_name>
        <argument line="1237">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1273" package="Codegen">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="1266">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="1266" name="param" description="strName Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1266" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1273">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1287" package="Codegen">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="1287">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1287">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="1078">These functions need to be documented heavily with information from "lexical analysis on fk names.txt"</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QCodeGenBase.class.php</error>
      <error line="2" code="50009">No DocBlock was found for function \QcodoHandleCodeGenParseError()</error>
      <error line="7" code="50009">No DocBlock was found for function \GO_BACK()</error>
      <error line="24" code="50018">No DocBlock was found for property $strClassPrefix</error>
      <error line="25" code="50018">No DocBlock was found for property $strClassSuffix</error>
      <error line="28" code="50018">No DocBlock was found for property $strErrors</error>
      <error line="73" code="50018">No DocBlock was found for property $SettingsFilePath</error>
      <error line="88" code="50018">No DocBlock was found for property $TemplateEscapeBeginLength</error>
      <error line="96" code="50018">No DocBlock was found for property $TemplateEscapeEndLength</error>
      <error line="98" code="50018">No DocBlock was found for property $RootErrors</error>
      <error line="106" code="50010">No DocBlock was found for method GetSettingsXml()</error>
      <error line="121" code="50010">No DocBlock was found for method Run()</error>
      <error line="222" code="50012">No short description for method GenerateAggregate()</error>
      <error line="421" code="50010">No DocBlock was found for method setGeneratedFilePermissions()</error>
      <error line="431" code="50010">No DocBlock was found for method EvaluatePHP()</error>
      <error line="461" code="50010">No DocBlock was found for method EvaluateSubTemplate()</error>
      <error line="488" code="50010">No DocBlock was found for method EvaluateTemplate()</error>
      <error line="795" code="50010">No DocBlock was found for method ClassNameFromTableName()</error>
      <error line="803" code="50010">No DocBlock was found for method VariableNameFromColumn()</error>
      <error line="841" code="50010">No DocBlock was found for method PropertyNameFromColumn()</error>
      <error line="845" code="50010">No DocBlock was found for method TypeNameFromColumnName()</error>
      <error line="849" code="50010">No DocBlock was found for method ReferenceColumnNameFromColumn()</error>
      <error line="871" code="50010">No DocBlock was found for method ReferenceVariableNameFromColumn()</error>
      <error line="877" code="50010">No DocBlock was found for method ReferencePropertyNameFromColumn()</error>
      <error line="882" code="50010">No DocBlock was found for method VariableNameFromTable()</error>
      <error line="888" code="50010">No DocBlock was found for method ReverseReferenceVariableNameFromTable()</error>
      <error line="893" code="50010">No DocBlock was found for method ReverseReferenceVariableTypeFromTable()</error>
      <error line="898" code="50010">No DocBlock was found for method ParameterCleanupFromColumn()</error>
      <error line="908" code="50010">No DocBlock was found for method ParameterListFromColumnArray()</error>
      <error line="912" code="50010">No DocBlock was found for method ImplodeObjectArray()</error>
      <error line="921" code="50010">No DocBlock was found for method TypeTokenFromTypeName()</error>
      <error line="938" code="50010">No DocBlock was found for method FormControlVariableNameForColumn()</error>
      <error line="986" code="50010">No DocBlock was found for method FormControlClassForColumn()</error>
      <error line="1010" code="50010">No DocBlock was found for method FormControlVariableNameForUniqueReverseReference()</error>
      <error line="1017" code="50010">No DocBlock was found for method FormControlVariableNameForManyToManyReference()</error>
      <error line="1021" code="50010">No DocBlock was found for method FormLabelVariableNameForColumn()</error>
      <error line="1026" code="50010">No DocBlock was found for method FormLabelVariableNameForUniqueReverseReference()</error>
      <error line="1033" code="50010">No DocBlock was found for method FormLabelVariableNameForManyToManyReference()</error>
      <error line="1037" code="50010">No DocBlock was found for method FormControlTypeForColumn()</error>
      <error line="1063" code="50010">No DocBlock was found for method CalculateObjectMemberVariable()</error>
      <error line="1071" code="50010">No DocBlock was found for method CalculateObjectPropertyName()</error>
      <error line="1079" code="50010">No DocBlock was found for method CalculateObjectDescription()</error>
      <error line="1146" code="50010">No DocBlock was found for method CalculateObjectDescriptionForAssociation()</error>
      <error line="1194" code="50010">No DocBlock was found for method CalculateGraphPrefixArray()</error>
      <error line="1213" code="50010">No DocBlock was found for method VariableTypeFromDbType()</error>
      <error line="1237" code="50010">No DocBlock was found for method Pluralize()</error>
      <error line="1287" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QReference.class.php" hash="ca1c611aac91fdd58f3c32400c93ddfe" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="Codegen">
      <extends>\QBaseClass</extends>
      <name>QReference</name>
      <full_name>\QReference</full_name>
      <docblock line="2">
        <description>Used by the QCubed Code Generator to describe a column reference
(aka a Foreign Key)</description>
        <long-description/>
        <tag line="2" name="package" description="Codegen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="17" namespace="global" package="Default">
        <name>$strKeyName</name>
        <default/>
        <docblock line="13">
          <description>Name of the foreign key object, as defined in the database or create script</description>
          <long-description/>
          <tag line="13" name="var" description="KeyName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$strTable</name>
        <default/>
        <docblock line="19">
          <description>Name of the table that is being referenced</description>
          <long-description/>
          <tag line="19" name="var" description="Table" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$strColumn</name>
        <default/>
        <docblock line="25">
          <description>Name of the column that is being referenced</description>
          <long-description/>
          <tag line="25" name="var" description="Column" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$strPropertyName</name>
        <default/>
        <docblock line="31">
          <description>Name of the referenced object as an class Property
So if the column that this reference points from is named
"primary_annual_report_id", it would be PrimaryAnnualReport</description>
          <long-description/>
          <tag line="31" name="var" description="PropertyName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$strVariableName</name>
        <default/>
        <docblock line="39">
          <description>Name of the  referenced object as an class protected Member object
So if the column that this reference poitns from is named
"primary_annual_report_id", it would be objPrimaryAnnualReport</description>
          <long-description/>
          <tag line="39" name="var" description="VariableName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Default">
        <name>$strVariableType</name>
        <default/>
        <docblock line="47">
          <description>The type of the protected member object (should be based off of $this-&gt;strTable)
So if referencing the table "annual_report", it would be AnnualReport</description>
          <long-description/>
          <tag line="47" name="var" description="VariableType" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$blnIsType</name>
        <default/>
        <docblock line="54">
          <description>If the table that this reference points to is a type table, then this is true</description>
          <long-description/>
          <tag line="54" name="var" description="IsType" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="Codegen">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="67">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="67" name="param" description="Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Codegen">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="100">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue</description>
          <long-description/>
          <tag line="100" name="param" description="Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="param" description="New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QReference.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QColumn.class.php" hash="0a141e8f72b66b39bd327bfec8315baa" package="Default">
    <class final="false" abstract="false" namespace="global" line="6" package="Codegen">
      <extends>\QBaseClass</extends>
      <name>QColumn</name>
      <full_name>\QColumn</full_name>
      <docblock line="2">
        <description>Used by the QCubed Code Generator to describe a table's column</description>
        <long-description/>
        <tag line="2" name="package" description="Codegen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$objOwnerTable</name>
        <default/>
        <docblock line="12">
          <description/>
          <long-description/>
          <tag line="12" name="var" description="The table in which this column exists." type="\QTable">
            <type by_reference="false">\QTable</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="21" namespace="global" package="Default">
        <name>$blnPrimaryKey</name>
        <default/>
        <docblock line="17">
          <description>Specifies whether or not the column is a Primary Key</description>
          <long-description/>
          <tag line="17" name="var" description="PrimaryKey" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strName</name>
        <default/>
        <docblock line="23">
          <description>Name of the column as defined in the database
So for example, "first_name"</description>
          <long-description/>
          <tag line="23" name="var" description="Name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$strPropertyName</name>
        <default/>
        <docblock line="30">
          <description>Name of the column as an object Property
So for "first_name", it would be FirstName</description>
          <long-description/>
          <tag line="30" name="var" description="PropertyName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="global" package="Default">
        <name>$strVariableName</name>
        <default/>
        <docblock line="37">
          <description>Name of the column as an object protected Member Variable
So for "first_name VARCHAR(50)", it would be strFirstName</description>
          <long-description/>
          <tag line="37" name="var" description="VariableName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$strVariableType</name>
        <default/>
        <docblock line="44">
          <description>The type of the protected member variable (uses one of the string constants from the Type class)</description>
          <long-description/>
          <tag line="44" name="var" description="VariableType" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$strVariableTypeAsConstant</name>
        <default/>
        <docblock line="50">
          <description>The type of the protected member variable (uses the actual constant from the Type class)</description>
          <long-description/>
          <tag line="50" name="var" description="VariableType" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" namespace="global" package="Default">
        <name>$strDbType</name>
        <default/>
        <docblock line="56">
          <description>The actual type of the column in the database (uses one of the string constants from the DatabaseType class)</description>
          <long-description/>
          <tag line="56" name="var" description="DbType" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="global" package="Default">
        <name>$intLength</name>
        <default/>
        <docblock line="62">
          <description>Length of the column as defined in the database</description>
          <long-description/>
          <tag line="62" name="var" description="Length" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" namespace="global" package="Default">
        <name>$mixDefault</name>
        <default/>
        <docblock line="68">
          <description>The default value for the column as defined in the database</description>
          <long-description/>
          <tag line="68" name="var" description="Default" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" namespace="global" package="Default">
        <name>$blnNotNull</name>
        <default/>
        <docblock line="74">
          <description>Specifies whether or not the column is specified as "NOT NULL"</description>
          <long-description/>
          <tag line="74" name="var" description="NotNull" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="84" namespace="global" package="Default">
        <name>$blnIdentity</name>
        <default/>
        <docblock line="80">
          <description>Specifies whether or not the column is an identiy column (like auto_increment)</description>
          <long-description/>
          <tag line="80" name="var" description="Identity" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="90" namespace="global" package="Default">
        <name>$blnIndexed</name>
        <default/>
        <docblock line="86">
          <description>Specifies whether or not the column is a single-column Index</description>
          <long-description/>
          <tag line="86" name="var" description="Indexed" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="96" namespace="global" package="Default">
        <name>$blnUnique</name>
        <default/>
        <docblock line="92">
          <description>Specifies whether or not the column is a unique</description>
          <long-description/>
          <tag line="92" name="var" description="Unique" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="102" namespace="global" package="Default">
        <name>$blnTimestamp</name>
        <default/>
        <docblock line="98">
          <description>Specifies whether or not the column is a system-updated "timestamp" column</description>
          <long-description/>
          <tag line="98" name="var" description="Timestamp" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="109" namespace="global" package="Default">
        <name>$objReference</name>
        <default/>
        <docblock line="104">
          <description>If the table column is foreign keyed off another column, then this
Column instance would be a reference to another object</description>
          <long-description/>
          <tag line="104" name="var" description="Reference" type="\Reference">
            <type by_reference="false">\Reference</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="115" namespace="global" package="Default">
        <name>$strComment</name>
        <default/>
        <docblock line="111">
          <description>The string value of the comment field in the database.</description>
          <long-description/>
          <tag line="111" name="var" description="Comment" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="131" package="Codegen">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="124">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="124" name="param" description="strName Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="Codegen">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="177">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue</description>
          <long-description/>
          <tag line="177" name="param" description="strName Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="param" description="mixValue New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="185">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QColumn.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QTable.class.php" hash="6cd82fb32ba24f0b43f7f60763f0202f" package="Default">
    <class final="false" abstract="false" namespace="global" line="6" package="Codegen">
      <extends>\QBaseClass</extends>
      <name>QTable</name>
      <full_name>\QTable</full_name>
      <docblock line="2">
        <description>Used by the QCubed Code Generator to describe a database Table</description>
        <long-description/>
        <tag line="2" name="package" description="Codegen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$intOwnerDbIndex</name>
        <default/>
        <docblock line="12">
          <description/>
          <long-description/>
          <tag line="12" name="var" description="DB Index to which it belongs in the configuration.inc.php and codegen_settings.xml files." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="21" namespace="global" package="Default">
        <name>$strName</name>
        <default/>
        <docblock line="17">
          <description>Name of the table (as defined in the database)</description>
          <long-description/>
          <tag line="17" name="var" description="Name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$strClassName</name>
        <default/>
        <docblock line="23">
          <description>Name as a PHP Class</description>
          <long-description/>
          <tag line="23" name="var" description="ClassName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$strClassNamePlural</name>
        <default/>
        <docblock line="29">
          <description>Pluralized Name as a collection of objects of this PHP Class</description>
          <long-description/>
          <tag line="29" name="var" description="ClassNamePlural;" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$objColumnArray</name>
        <default/>
        <docblock line="35">
          <description>Array of Column objects (as indexed by Column name)</description>
          <long-description/>
          <tag line="35" name="var" description="ColumnArray" type="\Column[]">
            <type by_reference="false">\Column[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$objReverseReferenceArray</name>
        <default/>
        <docblock line="41">
          <description>Array of ReverseReverence objects (indexed numerically)</description>
          <long-description/>
          <tag line="41" name="var" description="ReverseReferenceArray" type="\ReverseReference[]">
            <type by_reference="false">\ReverseReference[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="global" package="Default">
        <name>$objManyToManyReferenceArray</name>
        <default/>
        <docblock line="47">
          <description>Array of ManyToManyReference objects (indexed numerically)</description>
          <long-description/>
          <tag line="47" name="var" description="ManyToManyReferenceArray" type="\ManyToManyReference[]">
            <type by_reference="false">\ManyToManyReference[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" namespace="global" package="Default">
        <name>$objIndexArray</name>
        <default/>
        <docblock line="53">
          <description>Array of Index objects (indexed numerically)</description>
          <long-description/>
          <tag line="53" name="var" description="IndexArray" type="\Index[]">
            <type by_reference="false">\Index[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="Codegen">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="65">
          <description>Default Constructor.</description>
          <long-description>&lt;p&gt;Simply sets up the TableName and ensures that ReverseReferenceArray is a blank array.&lt;/p&gt;</long-description>
          <tag line="65" name="param" description="strName Name of the Table" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="" type="\TypeTable">
            <type by_reference="false">\TypeTable</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="Codegen">
        <name>GetColumnByName</name>
        <full_name>GetColumnByName</full_name>
        <docblock line="80">
          <description>return the QColumn object related to that column name</description>
          <long-description/>
          <tag line="80" name="return" description="" type="\QColumn">
            <type by_reference="false">\QColumn</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="Codegen">
        <name>HasColumn</name>
        <full_name>HasColumn</full_name>
        <docblock line="94">
          <description>Search within the table's columns for the given column</description>
          <long-description/>
          <tag line="94" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Codegen">
        <name>LookupColumnPropertyName</name>
        <full_name>LookupColumnPropertyName</full_name>
        <docblock line="102">
          <description>Return the property name for a given column name (false if it doesn't exists)</description>
          <long-description/>
          <tag line="102" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="Codegen">
        <name>HasImmediateArrayExpansions</name>
        <full_name>HasImmediateArrayExpansions</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="124" package="Codegen">
        <name>HasExtendedArrayExpansions</name>
        <full_name>HasExtendedArrayExpansions</full_name>
        <argument line="124">
          <name>$objCodeGen</name>
          <default/>
          <type/>
        </argument>
        <argument line="124">
          <name>$objCheckedTableArray</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="Codegen">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="149">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="149" name="param" description="strName Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="149" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="207" package="Codegen">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="199">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue</description>
          <long-description/>
          <tag line="199" name="param" description="strName Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="199" name="param" description="mixValue New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="199" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="207">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QTable.class.php</error>
      <error line="80" code="50015">Argument $strColumnName is missing from the Docblock of GetColumnByName()</error>
      <error line="94" code="50015">Argument $strColumnName is missing from the Docblock of HasColumn()</error>
      <error line="102" code="50015">Argument $strColumnName is missing from the Docblock of LookupColumnPropertyName()</error>
      <error line="114" code="50010">No DocBlock was found for method HasImmediateArrayExpansions()</error>
      <error line="124" code="50010">No DocBlock was found for method HasExtendedArrayExpansions()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QIndex.class.php" hash="53ed3a7be0b88951aa68cc6b94814905" package="Default">
    <class final="false" abstract="false" namespace="global" line="6" package="Codegen">
      <extends>\QBaseClass</extends>
      <name>QIndex</name>
      <full_name>\QIndex</full_name>
      <docblock line="2">
        <description>Used by the QCubed Code Generator to describe a table Index</description>
        <long-description/>
        <tag line="2" name="package" description="Codegen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="16" namespace="global" package="Default">
        <name>$strKeyName</name>
        <default/>
        <docblock line="12">
          <description>Name of the index object, as defined in the database or create script</description>
          <long-description/>
          <tag line="12" name="var" description="KeyName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="22" namespace="global" package="Default">
        <name>$blnUnique</name>
        <default/>
        <docblock line="18">
          <description>Specifies whether or not the index is unique</description>
          <long-description/>
          <tag line="18" name="var" description="Unique" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$blnPrimaryKey</name>
        <default/>
        <docblock line="24">
          <description>Specifies whether or not the column is the Primary Key index</description>
          <long-description/>
          <tag line="24" name="var" description="PrimaryKey" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$strColumnNameArray</name>
        <default/>
        <docblock line="30">
          <description>Array of strings containing the names of the columns that
this index indexes (indexed numerically)</description>
          <long-description/>
          <tag line="30" name="var" description="ColumnNameArray" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="Codegen">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="44">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="44" name="param" description="strName Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Codegen">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="71">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue</description>
          <long-description/>
          <tag line="71" name="param" description="strName Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="mixValue New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="79">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QIndex.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QDatabaseCodeGen.class.php" hash="a778b5ccf10d2cae25b453d0db00d198" package="Default">
    <include line="2" type="Require" package="Default">
      <name/>
    </include>
    <include line="3" type="Require" package="Default">
      <name/>
    </include>
    <include line="4" type="Require" package="Default">
      <name/>
    </include>
    <include line="5" type="Require" package="Default">
      <name/>
    </include>
    <include line="6" type="Require" package="Default">
      <name/>
    </include>
    <include line="7" type="Require" package="Default">
      <name/>
    </include>
    <include line="8" type="Require" package="Default">
      <name/>
    </include>
    <function namespace="global" line="1254" package="Default">
      <name>array_trim</name>
      <full_name>\array_trim</full_name>
      <argument line="1254">
        <name>$strValue</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="13" package="Codegen">
      <extends>\QCodeGen</extends>
      <name>QDatabaseCodeGen</name>
      <full_name>\QDatabaseCodeGen</full_name>
      <docblock line="10">
        <description/>
        <long-description/>
        <tag line="10" name="package" description="Codegen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="15" namespace="global" package="Default">
        <name>$objTableArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="16" namespace="global" package="Default">
        <name>$strExcludedTableArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="17" namespace="global" package="Default">
        <name>$objTypeTableArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$strAssociationTableNameArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="19" namespace="global" package="Default">
        <name>$objDb</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="21" namespace="global" package="Default">
        <name>$intDatabaseIndex</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$strCommentMetaControlLabelDelimiter</name>
        <default/>
        <docblock line="22">
          <description/>
          <long-description/>
          <tag line="22" name="var" description="The delimiter to be used for parsing comments on the DB tables for being used as the name of Meta control's Label" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="26" namespace="global" package="Default">
        <name>$strTypeTableSuffixArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="27" namespace="global" package="Default">
        <name>$intTypeTableSuffixLengthArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$strAssociationTableSuffix</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$intAssociationTableSuffixLength</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$strStripTablePrefix</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="global" package="Default">
        <name>$intStripTablePrefixLength</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$strExcludePattern</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$strExcludeListArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="global" package="Default">
        <name>$strIncludePattern</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="global" package="Default">
        <name>$strIncludeListArray</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$strAssociatedObjectPrefix</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="global" package="Default">
        <name>$strAssociatedObjectSuffix</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$blnManualQuerySupport</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="global" package="Default">
        <name>$strRelationships</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Default">
        <name>$blnRelationshipsIgnoreCase</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$strRelationshipsScriptPath</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="55" namespace="global" package="Default">
        <name>$strRelationshipsScriptFormat</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="global" package="Default">
        <name>$blnRelationshipsScriptIgnoreCase</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="global" package="Default">
        <name>$strRelationshipLinesQcodo</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="59" namespace="global" package="Default">
        <name>$strRelationshipLinesSql</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="62" namespace="global" package="Default">
        <name>$strPatternTableName</name>
        <default>'[[:alpha:]_][[:alnum:]_]*'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="63" namespace="global" package="Default">
        <name>$strPatternColumnName</name>
        <default>'[[:alpha:]_][[:alnum:]_]*'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="global" package="Default">
        <name>$strPatternKeyName</name>
        <default>'[[:alpha:]_][[:alnum:]_]*'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Codegen">
        <name>GetTable</name>
        <full_name>GetTable</full_name>
        <argument line="66">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Codegen">
        <name>GetColumn</name>
        <full_name>GetColumn</full_name>
        <argument line="73">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="73">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="Codegen">
        <name>ValidateTableColumn</name>
        <full_name>ValidateTableColumn</full_name>
        <docblock line="86">
          <description>Given a CASE INSENSITIVE table and column name, it will return TRUE if the Table/Column
exists ANYWHERE in the already analyzed database</description>
          <long-description/>
          <tag line="86" name="param" description="" type="string" variable="$strTableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="param" description="" type="string" variable="$strColumnName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="return" description="true if it is found/validated" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="Codegen">
        <name>GetTitle</name>
        <full_name>GetTitle</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Codegen">
        <name>GetConfigXml</name>
        <full_name>GetConfigXml</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="Codegen">
        <name>GetReportLabel</name>
        <full_name>GetReportLabel</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Codegen">
        <name>GenerateAll</name>
        <full_name>GenerateAll</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="187" package="Codegen">
        <name>GenerateAggregateHelper</name>
        <full_name>GenerateAggregateHelper</full_name>
        <argument line="187">
          <name>$objCodeGenArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="223" package="Codegen">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="223">
          <name>$objSettingsXml</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="372" package="Codegen">
        <name>AnalyzeDatabase</name>
        <full_name>AnalyzeDatabase</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="493" package="Codegen">
        <name>ListOfColumnsFromTable</name>
        <full_name>ListOfColumnsFromTable</full_name>
        <argument line="493">
          <name>$objTable</name>
          <default/>
          <type>\QTable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="501" package="Codegen">
        <name>GetColumnArray</name>
        <full_name>GetColumnArray</full_name>
        <argument line="501">
          <name>$objTable</name>
          <default/>
          <type>\QTable</type>
        </argument>
        <argument line="501">
          <name>$strColumnNameArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="511" package="Codegen">
        <name>GenerateTable</name>
        <full_name>GenerateTable</full_name>
        <argument line="511">
          <name>$objTable</name>
          <default/>
          <type>\QTable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="517" package="Codegen">
        <name>GenerateTypeTable</name>
        <full_name>GenerateTypeTable</full_name>
        <argument line="517">
          <name>$objTypeTable</name>
          <default/>
          <type>\QTypeTable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="523" package="Codegen">
        <name>AnalyzeAssociationTable</name>
        <full_name>AnalyzeAssociationTable</full_name>
        <argument line="523">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="645" package="Codegen">
        <name>AnalyzeTypeTable</name>
        <full_name>AnalyzeTypeTable</full_name>
        <argument line="645">
          <name>$objTypeTable</name>
          <default/>
          <type>\QTypeTable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="712" package="Codegen">
        <name>AnalyzeTable</name>
        <full_name>AnalyzeTable</full_name>
        <argument line="712">
          <name>$objTable</name>
          <default/>
          <type>\QTable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1010" package="Codegen">
        <name>AnalyzeTableColumn</name>
        <full_name>AnalyzeTableColumn</full_name>
        <argument line="1010">
          <name>$objField</name>
          <default/>
          <type>\QDatabaseFieldBase</type>
        </argument>
        <argument line="1010">
          <name>$objTable</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1043" package="Codegen">
        <name>StripPrefixFromTable</name>
        <full_name>StripPrefixFromTable</full_name>
        <argument line="1043">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1053" package="Codegen">
        <name>GetForeignKeyForQcodoRelationshipDefinition</name>
        <full_name>GetForeignKeyForQcodoRelationshipDefinition</full_name>
        <argument line="1053">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1053">
          <name>$strLine</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1084" package="Codegen">
        <name>GetForeignKeyForSqlRelationshipDefinition</name>
        <full_name>GetForeignKeyForSqlRelationshipDefinition</full_name>
        <argument line="1084">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1084">
          <name>$strLine</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1156" package="Codegen">
        <name>GetForeignKeyHelper</name>
        <full_name>GetForeignKeyHelper</full_name>
        <argument line="1156">
          <name>$strLine</name>
          <default/>
          <type/>
        </argument>
        <argument line="1156">
          <name>$strFkName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1156">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1156">
          <name>$strColumnName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1156">
          <name>$strReferencedTable</name>
          <default/>
          <type/>
        </argument>
        <argument line="1156">
          <name>$strReferencedColumn</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1184" package="Codegen">
        <name>GetForeignKeysFromRelationshipsScript</name>
        <full_name>GetForeignKeysFromRelationshipsScript</full_name>
        <docblock line="1173">
          <description>This will go through the various Relationships Script lines (if applicable) as setup during
the __constructor() through the &lt;relationships&gt; and &lt;relationshipsScript&gt; tags in the
configuration settings.</description>
          <long-description>&lt;p&gt;If no Relationships are defined, this method will simply exit making no changes.&lt;/p&gt;</long-description>
          <tag line="1173" name="param" description="Name of the table to pull foreign keys for" type="string" variable="$strTableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1173" name="param" description="Array of currently found DB FK objects which will be appended to" type="\DatabaseForeignKeyBase[]" variable="$objForeignKeyArray">
            <type by_reference="false">\DatabaseForeignKeyBase[]</type>
          </tag>
          <tag line="1173" name="return" description="Array of DB FK objects that were parsed out" type="\DatabaseForeignKeyBase[]">
            <type by_reference="false">\DatabaseForeignKeyBase[]</type>
          </tag>
        </docblock>
        <argument line="1184">
          <name>$strTableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1184">
          <name>$objForeignKeyArray</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1222" package="Codegen">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="1215">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="1215" name="param" description="strName Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1215" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1222">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1242" package="Codegen">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="1242">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="1242">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QDatabaseCodeGen.class.php</error>
      <error line="1254" code="50009">No DocBlock was found for function \array_trim()</error>
      <critical line="10" code="50005">No short description for class \QDatabaseCodeGen</critical>
      <error line="15" code="50018">No DocBlock was found for property $objTableArray</error>
      <error line="16" code="50018">No DocBlock was found for property $strExcludedTableArray</error>
      <error line="17" code="50018">No DocBlock was found for property $objTypeTableArray</error>
      <error line="18" code="50018">No DocBlock was found for property $strAssociationTableNameArray</error>
      <error line="19" code="50018">No DocBlock was found for property $objDb</error>
      <error line="21" code="50018">No DocBlock was found for property $intDatabaseIndex</error>
      <error line="26" code="50018">No DocBlock was found for property $strTypeTableSuffixArray</error>
      <error line="27" code="50018">No DocBlock was found for property $intTypeTableSuffixLengthArray</error>
      <error line="28" code="50018">No DocBlock was found for property $strAssociationTableSuffix</error>
      <error line="29" code="50018">No DocBlock was found for property $intAssociationTableSuffixLength</error>
      <error line="32" code="50018">No DocBlock was found for property $strStripTablePrefix</error>
      <error line="33" code="50018">No DocBlock was found for property $intStripTablePrefixLength</error>
      <error line="36" code="50018">No DocBlock was found for property $strExcludePattern</error>
      <error line="37" code="50018">No DocBlock was found for property $strExcludeListArray</error>
      <error line="40" code="50018">No DocBlock was found for property $strIncludePattern</error>
      <error line="41" code="50018">No DocBlock was found for property $strIncludeListArray</error>
      <error line="44" code="50018">No DocBlock was found for property $strAssociatedObjectPrefix</error>
      <error line="45" code="50018">No DocBlock was found for property $strAssociatedObjectSuffix</error>
      <error line="48" code="50018">No DocBlock was found for property $blnManualQuerySupport</error>
      <error line="51" code="50018">No DocBlock was found for property $strRelationships</error>
      <error line="52" code="50018">No DocBlock was found for property $blnRelationshipsIgnoreCase</error>
      <error line="54" code="50018">No DocBlock was found for property $strRelationshipsScriptPath</error>
      <error line="55" code="50018">No DocBlock was found for property $strRelationshipsScriptFormat</error>
      <error line="56" code="50018">No DocBlock was found for property $blnRelationshipsScriptIgnoreCase</error>
      <error line="58" code="50018">No DocBlock was found for property $strRelationshipLinesQcodo</error>
      <error line="59" code="50018">No DocBlock was found for property $strRelationshipLinesSql</error>
      <error line="62" code="50018">No DocBlock was found for property $strPatternTableName</error>
      <error line="63" code="50018">No DocBlock was found for property $strPatternColumnName</error>
      <error line="64" code="50018">No DocBlock was found for property $strPatternKeyName</error>
      <error line="66" code="50010">No DocBlock was found for method GetTable()</error>
      <error line="73" code="50010">No DocBlock was found for method GetColumn()</error>
      <error line="117" code="50010">No DocBlock was found for method GetTitle()</error>
      <error line="125" code="50010">No DocBlock was found for method GetConfigXml()</error>
      <error line="145" code="50010">No DocBlock was found for method GetReportLabel()</error>
      <error line="158" code="50010">No DocBlock was found for method GenerateAll()</error>
      <error line="187" code="50010">No DocBlock was found for method GenerateAggregateHelper()</error>
      <error line="223" code="50010">No DocBlock was found for method __construct()</error>
      <error line="372" code="50010">No DocBlock was found for method AnalyzeDatabase()</error>
      <error line="493" code="50010">No DocBlock was found for method ListOfColumnsFromTable()</error>
      <error line="501" code="50010">No DocBlock was found for method GetColumnArray()</error>
      <error line="511" code="50010">No DocBlock was found for method GenerateTable()</error>
      <error line="517" code="50010">No DocBlock was found for method GenerateTypeTable()</error>
      <error line="523" code="50010">No DocBlock was found for method AnalyzeAssociationTable()</error>
      <error line="645" code="50010">No DocBlock was found for method AnalyzeTypeTable()</error>
      <error line="712" code="50010">No DocBlock was found for method AnalyzeTable()</error>
      <error line="1010" code="50010">No DocBlock was found for method AnalyzeTableColumn()</error>
      <error line="1043" code="50010">No DocBlock was found for method StripPrefixFromTable()</error>
      <error line="1053" code="50010">No DocBlock was found for method GetForeignKeyForQcodoRelationshipDefinition()</error>
      <error line="1084" code="50010">No DocBlock was found for method GetForeignKeyForSqlRelationshipDefinition()</error>
      <error line="1156" code="50010">No DocBlock was found for method GetForeignKeyHelper()</error>
      <error line="1242" code="50010">No DocBlock was found for method __set()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/codegen/QTypeTable.class.php" hash="bd894cea21615b17cc9cbb4c175f638f" package="Default">
    <class final="false" abstract="false" namespace="global" line="8" package="Codegen">
      <extends>\QBaseClass</extends>
      <name>QTypeTable</name>
      <full_name>\QTypeTable</full_name>
      <docblock line="2">
        <description>Used by the QCubed Code Generator to describe a database Type Table
"Type" tables must be defined with at least two columns, the first one being an integer-based primary key,
and the second one being the name of the type.</description>
        <long-description/>
        <tag line="2" name="package" description="Codegen"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="18" namespace="global" package="Default">
        <name>$strName</name>
        <default/>
        <docblock line="14">
          <description>Name of the table (as defined in the database)</description>
          <long-description/>
          <tag line="14" name="var" description="Name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$strClassName</name>
        <default/>
        <docblock line="20">
          <description>Name as a PHP Class</description>
          <long-description/>
          <tag line="20" name="var" description="ClassName" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$strNameArray</name>
        <default/>
        <docblock line="26">
          <description>Array of Type Names (as entered into the rows of this database table)
This is indexed by integer which represents the ID in the database, starting with 1</description>
          <long-description/>
          <tag line="26" name="var" description="NameArray" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$strExtraFieldNamesArray</name>
        <default/>
        <docblock line="33">
          <description>Column names for extra properties (beyond the 2 basic columns), if any.</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$arrExtraPropertyArray</name>
        <default/>
        <docblock line="38">
          <description>Array of extra properties.</description>
          <long-description>&lt;p&gt;This is a double-array - array of arrays. Example:
     1 =&gt; ['col1' =&gt; 'valueA', 'col2 =&gt; 'valueB'],
     2 =&gt; ['col1' =&gt; 'valueC', 'col2 =&gt; 'valueD'],
     3 =&gt; ['col1' =&gt; 'valueC', 'col2 =&gt; 'valueD']&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="global" package="Default">
        <name>$strTokenArray</name>
        <default/>
        <docblock line="46">
          <description>Array of Type Names converted into Tokens (can be used as PHP Constants)
This is indexed by integer which represents the ID in the database, starting with 1</description>
          <long-description/>
          <tag line="46" name="var" description="TokenArray" type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="Codegen">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="59">
          <description>Default Constructor.</description>
          <long-description>&lt;p&gt;Simply sets up the TableName.&lt;/p&gt;</long-description>
          <tag line="59" name="param" description="strName Name of the Table" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="return" description="" type="\TypeTable">
            <type by_reference="false">\TypeTable</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="Codegen">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="75">
          <description>Override method to perform a property "Get"
This will get the value of $strName</description>
          <long-description/>
          <tag line="75" name="param" description="strName Name of the property to get" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="Codegen">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="106">
          <description>Override method to perform a property "Set"
This will set the property $strName to be $mixValue</description>
          <long-description/>
          <tag line="106" name="param" description="strName Name of the property to set" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="mixValue New value of the property" type="string" variable="$mixValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
        <argument line="114">
          <name>$mixValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/codegen/QTypeTable.class.php</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/qform_state_handlers/QFileFormStateHandler.class.php" hash="a16753c599cb79746958273d90c95260" package="Default">
    <class final="false" abstract="false" namespace="global" line="17" package="Default">
      <extends>\QBaseClass</extends>
      <name>QFileFormStateHandler</name>
      <full_name>\QFileFormStateHandler</full_name>
      <docblock line="2">
        <description>This will store the formstate in a pre-specified directory on the file system.</description>
        <long-description>&lt;p&gt;This offers significant speed advantage over PHP SESSION because EACH form state
is saved in its own file, and only the form state that is needed for loading will
be accessed (as opposed to with session, ALL the form states are loaded into memory
every time).&lt;/p&gt;

&lt;p&gt;The downside is that because it doesn't utilize PHP's session management subsystem,
this class must take care of its own garbage collection/deleting of old/outdated
formstate files.&lt;/p&gt;

&lt;p&gt;Because the index is randomy generated and MD5-hashed, there is no benefit from
encrypting it -- therefore, the QForm encryption preferences are ignored when using
QFileFormStateHandler.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="true" visibility="public" line="23" namespace="global" package="Default">
        <name>$StatePath</name>
        <default>__FILE_FORM_STATE_HANDLER_PATH__</default>
        <docblock line="18">
          <description>The PATH where the FormState files should be saved</description>
          <long-description/>
          <tag line="18" name="var" description="StatePath" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="30" namespace="global" package="Default">
        <name>$FileNamePrefix</name>
        <default>'qformstate_'</default>
        <docblock line="25">
          <description>The filename prefix to be used by all FormState files</description>
          <long-description/>
          <tag line="25" name="var" description="FileNamePrefix" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="41" namespace="global" package="Default">
        <name>$GarbageCollectInterval</name>
        <default>200</default>
        <docblock line="32">
          <description>The interval of hits before the garbage collection should kick in to delete
old FormState files, or 0 if it should never be run.</description>
          <long-description>&lt;p&gt;The higher the number,
the less often it runs (better aggregated-average performance, but requires more
hard drive space).  The lower the number, the more often it runs (slower aggregated-average
performance, but requires less hard drive space).&lt;/p&gt;</long-description>
          <tag line="32" name="var" description="GarbageCollectInterval" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="52" namespace="global" package="Default">
        <name>$GarbageCollectDaysOld</name>
        <default>2</default>
        <docblock line="43">
          <description>The minimum age (in days) a formstate file has to be in order to be considered old enough
to be garbage collected.</description>
          <long-description>&lt;p&gt;So if set to "1.5", then all formstate files older than 1.5 days
will be deleted when the GC interval is kicked off.&lt;/p&gt;

&lt;p&gt;Obviously, if the GC Interval is set to 0, then this GC Days Old value will be never used.&lt;/p&gt;</long-description>
          <tag line="43" name="var" description="GarbageCollectDaysOld" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="62" package="Default">
        <name>DeleteFormStateForSession</name>
        <full_name>DeleteFormStateForSession</full_name>
        <docblock line="54">
          <description>If PHP SESSION is enabled, then this method will delete all formstate files specifically
for this SESSION user (and no one else).</description>
          <long-description>&lt;p&gt;This can be used in lieu of or in addition to the
standard interval-based garbage collection mechanism.&lt;/p&gt;

&lt;p&gt;Also, for standard web applications with logins, it might be a good idea to call
this method whenever the user logs out.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="83" package="Default">
        <name>GarbageCollect</name>
        <full_name>GarbageCollect</full_name>
        <docblock line="79">
          <description>This will delete all the formstate files that are older than $GarbageCollectDaysOld
days old.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="102" package="Default">
        <name>Save</name>
        <full_name>Save</full_name>
        <argument line="102">
          <name>$strFormState</name>
          <default/>
          <type/>
        </argument>
        <argument line="102">
          <name>$blnBackButtonFlag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="138" package="Default">
        <name>Load</name>
        <full_name>Load</full_name>
        <argument line="138">
          <name>$strPostDataState</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/qform_state_handlers/QFileFormStateHandler.class.php</error>
      <error line="102" code="50010">No DocBlock was found for method Save()</error>
      <error line="138" code="50010">No DocBlock was found for method Load()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/qform_state_handlers/QSessionFormStateHandler.class.php" hash="6e7713d00253645eefd9d8ab57f9f770" package="Default">
    <class final="false" abstract="false" namespace="global" line="17" package="Default">
      <extends>\QBaseClass</extends>
      <name>QSessionFormStateHandler</name>
      <full_name>\QSessionFormStateHandler</full_name>
      <docblock line="2">
        <description>Session-based FormState handler.</description>
        <long-description>&lt;p&gt;Uses PHP Sessions to store the form state.&lt;/p&gt;

&lt;p&gt;Stores the variables in the following format:
$_SESSION['qformstate'][form_uniquid][state#]
  where the form_uniquid is a unique id that sticks with the window that the
  form is on, and state# is the formstate associated with that window. Multiple
  formstates need to be saved to support the browser back button.&lt;/p&gt;

&lt;p&gt;If requested by QForm, the index will be encrypted.&lt;/p&gt;

&lt;p&gt;This incorporates a system of garbage collection that will allow for at most&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="true" visibility="public" line="19" namespace="global" package="Default">
        <name>$BackButtonMax</name>
        <default>20</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="21" package="Default">
        <name>Save</name>
        <full_name>Save</full_name>
        <argument line="21">
          <name>$strFormState</name>
          <default/>
          <type/>
        </argument>
        <argument line="21">
          <name>$blnBackButtonFlag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="86" package="Default">
        <name>Load</name>
        <full_name>Load</full_name>
        <argument line="86">
          <name>$strPostDataState</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/qform_state_handlers/QSessionFormStateHandler.class.php</error>
      <error line="19" code="50018">No DocBlock was found for property $BackButtonMax</error>
      <error line="21" code="50010">No DocBlock was found for method Save()</error>
      <error line="86" code="50010">No DocBlock was found for method Load()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/qform_state_handlers/QFormStateHandler.class.php" hash="3c6bf73eb35302bb2845828e651f6e3c" package="Default">
    <class final="false" abstract="false" namespace="global" line="6" package="Default">
      <extends>\QBaseClass</extends>
      <name>QFormStateHandler</name>
      <full_name>\QFormStateHandler</full_name>
      <docblock line="2">
        <description>This is the "standard" FormState handler, storing the base64 encoded session data
(and if requested by QForm, encrypted) as a hidden form variable on the page, itself.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="7" package="Default">
        <name>Save</name>
        <full_name>Save</full_name>
        <argument line="7">
          <name>$strFormState</name>
          <default/>
          <type/>
        </argument>
        <argument line="7">
          <name>$blnBackButtonFlag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="27" package="Default">
        <name>Load</name>
        <full_name>Load</full_name>
        <argument line="27">
          <name>$strPostDataState</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/qform_state_handlers/QFormStateHandler.class.php</error>
      <error line="7" code="50010">No DocBlock was found for method Save()</error>
      <error line="27" code="50010">No DocBlock was found for method Load()</error>
    </parse_markers>
  </file>
  <file path="qcubed/_core/qform_state_handlers/QDbBackedFormStateHandler.class.php" hash="337b5c60c868af52b384844971a37b8d" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends>\QBaseClass</extends>
      <name>QDbBackedFormStateHandler</name>
      <full_name>\QDbBackedFormStateHandler</full_name>
      <docblock line="2">
        <description>This will store the formstate in a pre-specified table in the DB.</description>
        <long-description>&lt;p&gt;This offers significant speed advantage over PHP SESSION because EACH form state
is saved in its own row in the DB, and only the form state that is needed for loading will
be accessed (as opposed to with session, ALL the form states are loaded into memory
every time).
The downside is that because it doesn't utilize PHP's session management subsystem,
this class must take care of its own garbage collection/deleting of old/outdated
formstate files.
Because the index is randomy generated and MD5-hashed, there is no benefit from
encrypting it -- therefore, the QForm encryption preferences are ignored when using
QFileFormStateHandler.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="true" visibility="public" line="20" namespace="global" package="Default">
        <name>$intDbIndex</name>
        <default>__DB_BACKED_FORM_STATE_HANDLER_DB_INDEX__</default>
        <docblock line="17">
          <description>The database index in configuration.inc.php where the formstates have to be managed</description>
          <long-description/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="29" namespace="global" package="Default">
        <name>$strTableName</name>
        <default>__DB_BACKED_FORM_STATE_HANDLER_TABLE_NAME__</default>
        <docblock line="22">
          <description>The table name which will handle the formstates.</description>
          <long-description>&lt;p&gt;It must have the following columns:
1. page_id: varchar(80)
2. save_time: integer
3. state_data: text
4. session_id: varchar(32)&lt;/p&gt;</long-description>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="38" namespace="global" package="Default">
        <name>$intGarbageCollectOnHitCount</name>
        <default>20000</default>
        <docblock line="30">
          <description>The interval of hits before the garbage collection should kick in to delete
old FormState files, or 0 if it should never be run.</description>
          <long-description>&lt;p&gt;The higher the number,
the less often it runs (better aggregated-average performance, but requires more
hard drive space).  The lower the number, the more often it runs (slower aggregated-average
performance, but requires less hard drive space).&lt;/p&gt;</long-description>
          <tag line="30" name="var" description="GarbageCollectInterval" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="47" namespace="global" package="Default">
        <name>$intGarbageCollectDaysOld</name>
        <default>2</default>
        <docblock line="40">
          <description>The minimum age (in days) a formstate file has to be in order to be considered old enough
to be garbage collected.</description>
          <long-description>&lt;p&gt;So if set to "1.5", then all formstate files older than 1.5 days
will be deleted when the GC interval is kicked off.
Obviously, if the GC Interval is set to 0, then this GC Days Old value will be never used.&lt;/p&gt;</long-description>
          <tag line="40" name="var" description="GarbageCollectDaysOld" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="49" package="Default">
        <name>Initialize</name>
        <full_name>Initialize</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="68" package="Default">
        <name>GarbageCollect</name>
        <full_name>GarbageCollect</full_name>
        <docblock line="64">
          <description/>
          <long-description/>
          <tag line="64" name="static" description="This function is responsible for removing the old values from"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="89" package="Default">
        <name>DeleteFormStateForSession</name>
        <full_name>DeleteFormStateForSession</full_name>
        <docblock line="80">
          <description/>
          <long-description/>
          <tag line="80" name="static" description="If PHP SESSION is enabled, then this method will delete all formstate files specifically&#10;for this SESSION user (and no one else).  This can be used in lieu of or in addition to the&#10;standard interval-based garbage collection mechanism.&#10;Also, for standard web applications with logins, it might be a good idea to call&#10;this method whenever the user logs out."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="113" package="Default">
        <name>Save</name>
        <full_name>Save</full_name>
        <docblock line="105">
          <description/>
          <long-description/>
          <tag line="105" name="static" description=""/>
          <tag line="105" name="param" description="" type="\" variable="$strFormState"/>
          <tag line="105" name="param" description="" type="\" variable="$blnBackButtonFlag"/>
          <tag line="105" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$strFormState</name>
          <default/>
          <type/>
        </argument>
        <argument line="113">
          <name>$blnBackButtonFlag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="166" package="Default">
        <name>Load</name>
        <full_name>Load</full_name>
        <argument line="166">
          <name>$strPostDataState</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file qcubed/_core/qform_state_handlers/QDbBackedFormStateHandler.class.php</error>
      <error line="49" code="50010">No DocBlock was found for method Initialize()</error>
      <error line="64" code="50012">No short description for method GarbageCollect()</error>
      <error line="80" code="50012">No short description for method DeleteFormStateForSession()</error>
      <error line="105" code="50012">No short description for method Save()</error>
      <error line="166" code="50010">No DocBlock was found for method Load()</error>
    </parse_markers>
  </file>
  <file path="qcubed/codegen/QConvertNotation.class.php" hash="209334cda183ef0d3a20ea31db9296ef" package="Codegen">
    <docblock line="2">
      <description>QConvertNotation</description>
      <long-description>&lt;p&gt;Feel free to override any core QConvertNotationBase methods here&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="QCubed"/>
      <tag line="2" name="package" description="Codegen"/>
      <tag line="2" name="author" description="Qcubed"/>
      <tag line="2" name="copyright" description=""/>
      <tag line="2" name="version" description="2011"/>
      <tag line="2" name="access" description="public"/>
    </docblock>
    <include line="15" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="true" namespace="global" line="28" package="Codegen">
      <extends>\QConvertNotationBase</extends>
      <name>QConvertNotation</name>
      <full_name>\QConvertNotation</full_name>
      <docblock line="17">
        <description>QConvertNotation</description>
        <long-description>&lt;p&gt;Feel free to override any core QConvertNotationBase methods here&lt;/p&gt;</long-description>
        <tag line="17" name="category" description="QCubed"/>
        <tag line="17" name="package" description="Codegen"/>
        <tag line="17" name="author" description="Qcubed"/>
        <tag line="17" name="copyright" description=""/>
        <tag line="17" name="access" description="public"/>
      </docblock>
    </class>
  </file>
  <file path="qcubed/codegen/QCodeGen.class.php" hash="9083274d032ca4679b8fe8fe6b604e6d" package="Codegen">
    <docblock line="2">
      <description>QCodeGen</description>
      <long-description>&lt;p&gt;Feel free to override any core QCodeGenBase methods here&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Codegen"/>
      <tag line="2" name="author" description="Qcubed"/>
      <tag line="2" name="copyright" description=""/>
      <tag line="2" name="version" description="2011"/>
      <tag line="2" name="access" description="public"/>
    </docblock>
    <include line="14" type="Require" package="Default">
      <name/>
    </include>
    <include line="57" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="27" package="Codegen">
      <extends>\QCodeGenBase</extends>
      <name>QCodeGen</name>
      <full_name>\QCodeGen</full_name>
      <docblock line="16">
        <description>QCodeGen</description>
        <long-description>&lt;p&gt;Feel free to override any core QCodeGenBase methods here&lt;/p&gt;</long-description>
        <tag line="16" name="package" description="Codegen"/>
        <tag line="16" name="author" description="Qcubed"/>
        <tag line="16" name="copyright" description=""/>
        <tag line="16" name="version" description="2011"/>
        <tag line="16" name="access" description="public"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="36" package="Codegen">
        <name>Pluralize</name>
        <full_name>Pluralize</full_name>
        <docblock line="28">
          <description>QCodeGen::Pluralize()</description>
          <long-description>&lt;p&gt;Example: Overriding the Pluralize method&lt;/p&gt;</long-description>
          <tag line="28" name="param" description="" type="string" variable="$strName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$strName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="Codegen" full_name="Codegen"/>
  <package name="Controls" full_name="Controls">
    <package name="Base" full_name="Controls\Base"/>
  </package>
  <package name="DatabaseAdapters" full_name="DatabaseAdapters"/>
  <package name="Default" full_name="Default"/>
  <package name="PluginManager" full_name="PluginManager"/>
  <package name="Sessions" full_name="Sessions"/>
  <namespace name="global" full_name="global"/>
  <marker count="27">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="8"/>
</project>
